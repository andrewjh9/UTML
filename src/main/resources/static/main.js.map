{"version":3,"sources":["./src/app/export-diagram/export-diagram.component.ts","./src/app/export-diagram/export-diagram.component.html","./src/serialisation/deserialise/deserialise-edge.ts","./src/app/node-compontents/abstract-text-node.ts","./src/app/shapeset-management-modal/shapeset-management-modal.component.ts","./src/app/shapeset-management-modal/shapeset-management-modal.component.html","./src/app/node-compontents/basic-node-text/basic-node-text.component.ts","./src/app/node-compontents/basic-node-text/basic-node-text.component.html","./src/model/position.ts","./src/app/edge/clickable-start-end-points/clickable-start-end-points.component.ts","./src/app/edge/clickable-start-end-points/clickable-start-end-points.component.html","./src/app/node-compontents/below-text-node/below-text-node.component.ts","./src/app/node-compontents/below-text-node/below-text-node.component.html","./src/app/drag-drop-preview/drag-drop-preview.component.ts","./src/app/drag-drop-preview/drag-drop-preview.component.html","./src/app/edge/edge-render-dispatch/edge-render-dispatch.component.ts","./src/app/edge/edge-render-dispatch/edge-render-dispatch.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/node-compontents/clickable-resize-points/clickable-resize-points.component.html","./src/app/node-compontents/clickable-resize-points/clickable-resize-points.component.ts","./src/app/node-compontents/selected-node-highlight/selected-node-highlight.component.ts","./src/app/node-compontents/selected-node-highlight/selected-node-highlight.component.html","./src/app/services/edge-reposition/lies-on-segment.ts","./src/app/creation-sidebar/creation-sidebar.component.ts","./src/app/creation-sidebar/creation-sidebar.component.html","./src/model/examples/fsm.ts","./src/app/node-compontents/actor-node/actor-node-render.component.ts","./src/app/node-compontents/actor-node/actor-node-render.component.html","./src/app/upload-modal/upload-modal.component.ts","./src/app/upload-modal/upload-modal.component.html","./src/model/edge.ts","./src/app/services/edge-reposition/fixed-point-repositioner.ts","./src/app/services/caching/caching.service.ts","./src/app/services/caching/local-storage.service.ts","./src/app/arrow-marker/arrow-marker.component.ts","./src/app/arrow-marker/arrow-marker.component.html","./src/environments/environment.ts","./src/app/special-character-selector/special-character-selector.component.ts","./src/app/special-character-selector/special-character-selector.component.html","./src/app/node-compontents/node-editor/node-editor.component.html","./src/app/node-compontents/node-editor/node-editor.component.ts","./src/model/node/fork-rejoin-node.ts","./src/serialisation/deserialise/deserialise-label.ts","./src/model/sequence-diagram/lifeline.ts","./src/app/services/deletion.service.ts","./src/app/services/resize.service.ts","./src/app/formatting-modal/formatting-modal.component.html","./src/app/formatting-modal/formatting-modal.component.ts","./src/app/services/zoom.service.ts","./src/model/node/ellipse-node.ts","./src/app/special-character-row/special-character-row.component.html","./src/app/special-character-row/special-character-row.component.ts","./src/app/services/edit.service.ts","./src/app/edge/edge-render/arc-render.component.html","./src/app/edge/edge-render/arc-render.component.ts","./src/serialisation/deserialise/deserialise-node.ts","./src/app/clear-diagram-modal/clear-diagram-modal.component.ts","./src/app/clear-diagram-modal/clear-diagram-modal.component.html","./src/app/node-compontents/hourglass-node/hourglass-node-render.component.ts","./src/app/node-compontents/hourglass-node/hourglass-node-render.component.html","./src/app/diagram/diagram.component.ts","./src/app/diagram/diagram.component.html","./src/app/services/label-reposition.service.ts","./src/app/services/diagram-container.service.ts","./src/app/services/drag-drop-creation.service.ts","./src/app/diagram-preview/diagram-preview.component.html","./src/app/diagram-preview/diagram-preview.component.ts","./src/app/sequence-edge/sequence-edge.component.ts","./src/app/sequence-edge/sequence-edge.component.html","./src/app/new-edge-preview/new-edge-preview.component.html","./src/app/new-edge-preview/new-edge-preview.component.ts","./src/app/diagram-import/diagram-import.component.ts","./src/app/diagram-import/diagram-import.component.html","./src/app/grid-overlay/grid-overlay.component.html","./src/app/grid-overlay/grid-overlay.component.ts","./src/app/services/keyboard-event-caller.service.ts","./src/app/node-compontents/ellipse-node/ellipse-node-render.component.html","./src/app/node-compontents/ellipse-node/ellipse-node-render.component.ts","./src/model/node/class-node.ts","./src/model/node/hourglass-node.ts","./src/app/edge/edge.component.ts","./src/app/edge/edge.component.html","./src/app/node-compontents/clickable-attachment-points/clickable-attachment-points.component.html","./src/app/node-compontents/clickable-attachment-points/clickable-attachment-points.component.ts","./src/model/node/diamond-node.ts","./src/app/node-compontents/node-component.ts","./src/app/node-compontents/node.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/edge-editor/edge-editor.component.ts","./src/app/mode-aware-component.ts","./src/app/lifeline/lifeline.component.ts","./src/app/lifeline/lifeline.component.html","./src/app/node-compontents/class-node/class-node-render.component.ts","./src/app/node-compontents/class-node/class-node-render.component.html","./src/app/edge/clickable-middle-points/clickable-middle-points.component.html","./src/app/edge/clickable-middle-points/clickable-middle-points.component.ts","./src/app/services/selection.service.ts","./src/app/edge/line-render/line-render.component.ts","./src/app/edge/line-render/line-render.component.html","./src/app/selected-editor/selected-editor.component.html","./src/app/selected-editor/selected-editor.component.ts","./src/app/app.module.ts","./src/app/mode-selector/mode-selector.component.ts","./src/app/mode-selector/mode-selector.component.html","./src/app/services/mode.service.ts","./src/model/diagram.ts","./src/app/services/drag-selection.service.ts","./src/model/node/node.ts","./src/app/services/lens-offset.service.ts","./src/app/sequence-diagram/sequence-diagram.component.html","./src/app/sequence-diagram/sequence-diagram.component.ts","./src/app/diagram-management-modal/diagram-management-modal.component.ts","./src/app/diagram-management-modal/diagram-management-modal.component.html","./src/model/node/actor-node.ts","./src/app/services/settings-container.service.ts","./src/app/services/upload.service.ts","./src/app/save-modal/save-modal.component.html","./src/app/save-modal/save-modal.component.ts","./src/app/services/mouse-position-transform.service.ts","./src/app/services/caching/SizeBoundDoublyLinkedList.ts","./src/app/node-compontents/node-render-dispatch/node-render-dispatch.component.ts","./src/app/node-compontents/node-render-dispatch/node-render-dispatch.component.html","./src/app/services/copy-paste.service.ts","./src/app/node-compontents/rectangle-node/rectangle-node-render.component.html","./src/app/node-compontents/rectangle-node/rectangle-node-render.component.ts","./src/app/label/label.component.ts","./src/app/label/label.component.html","./src/app/services/creation-type-selection.service.ts","./src/app/services/edge-reposition/start-end-repositioner.ts","./src/app/services/edge-creation.service.ts","./src/app/services/reposition.service.ts","./src/app/services/snap.service.ts","./src/app/hint-overlay/hint-overlay.component.ts","./src/app/hint-overlay/hint-overlay.component.html","./src/model/node/rectangle-node.ts","./src/app/services/shape-set-container.service.ts","./src/serialisation/deserialise/deserialise-position.ts","./src/app/edge-formatting-modal/edge-formatting-modal.component.ts","./src/app/edge-formatting-modal/edge-formatting-modal.component.html","./src/serialisation/deserialise/deserialise-diagram.ts","./src/model/label.ts","./src/app/services/export.service.ts","./src/app/node-compontents/diamond-node/diamond-node-render.component.html","./src/app/node-compontents/diamond-node/diamond-node-render.component.ts","./src/app/drag-select-preview/drag-select-preview.component.html","./src/app/drag-select-preview/drag-select-preview.component.ts","./src/app/app-routing.module.ts","./src/app/help-modal/help-modal.component.html","./src/app/help-modal/help-modal.component.ts","./src/app/move-menu/move-menu.component.ts","./src/app/move-menu/move-menu.component.html","./src/model/node/polyline-node.ts","./src/main.ts","./src/app/edge/clickable-new-points/clickable-new-points.component.ts","./src/app/edge/clickable-new-points/clickable-new-points.component.html","./$_lazy_route_resource lazy namespace object","./src/app/shapeset-management-modal/course-sets.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nconst EXPORT_FILE_NAME = 'image_download';\n\n@Component({\n  selector: 'app-export-diagram',\n  templateUrl: './export-diagram.component.html',\n  styleUrls: ['./export-diagram.component.scss']\n})\n/**\n * TODO Refactor, When interface is ready for button to be placed well.\n */\nexport class ExportDiagramComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit()  : void {\n  }\n\n  export() {\n\n    let svg :HTMLElement | null = document.getElementById('diagram');\n    let canvas = document.querySelector('canvas');\n\n    if(canvas != null && svg != null){\n      let ctx = canvas.getContext('2d');\n      let data = (new XMLSerializer()).serializeToString(svg);\n      let DOMURL = window.URL || window.webkitURL || window;\n      let img = new Image();\n      img.width = 1200;\n      img.height = 600 ;\n      // @ts-ignore\n      let svgSize = svg.viewBox.baseVal;\n      canvas.width = svgSize.width;\n      canvas.height = svgSize.height;\n      let svgBlob = new Blob([data], {type: 'image/svg+xml;charset=utf-8'});\n      let url = DOMURL.createObjectURL(svgBlob);\n        img.onload = () => {\n          if(ctx != null) {\n            ctx.drawImage(img, 0, 0);\n            DOMURL.revokeObjectURL(url);\n            // @ts-ignore\n            let imgURI = canvas\n              .toDataURL('image/png')\n              .replace('image/png', 'image/octet-stream');\n\n            this.triggerDownload(imgURI);\n          } else{\n              new Error(\"The diagram has disappeared\");\n          }\n        };\n        img.src = url;\n    } else{new Error(\"The diagram has disappeared\") }\n  }\n  triggerDownload (imgURI: any) {\n    let evt = new MouseEvent('click', {\n      view: window,\n      bubbles: false,\n      cancelable: true\n    });\n\n    let a = document.createElement('a');\n    a.setAttribute('download', EXPORT_FILE_NAME + '.png');\n    a.setAttribute('href', imgURI);\n    a.setAttribute('target', '_blank');\n    a.dispatchEvent(evt);\n   // @ts-ignore\n    document.querySelector('canvas').remove();\n\n  }\n\n\n}\n","<!--<div ngbDropdown class=\"d-inline-block\">-->\n<!--  <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Export</button>-->\n<!--  <div *ngFor=\"let format of formats\" ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">-->\n<!--    <button ngbDropdownItem>{{ format }}</button>-->\n<!--  </div>-->\n<!--</div>-->\n<!--<select  id=\"selectExport\"[(ngModel)]=\"selectedFormat\" (change)=\"export()\" [title]=export>-->\n<!--  <option *ngFor=\"let format of formats\" [ngValue]=\"format\">{{ format }}</option>-->\n<!--</select>-->\n\n<button class=\"btn btn-outline-success\" (click)=\"export()\">Export to PNG</button>\n","import {SerialisedEdge} from \"../serialised-data-structures/serialised-edge\";\nimport {Edge} from \"../../model/edge\";\nimport {deserialiseLabel} from \"./deserialise-label\";\nimport {deserialisePosition} from \"./deserialise-position\";\nimport {Position} from \"../../model/position\";\nimport {SerialisedPosition} from \"../serialised-data-structures/serialised-position\";\n\nexport function deserialiseEdge(serialisedEdge: SerialisedEdge): Edge {\n  let startPos: number | Position;\n  let endPos: number | Position;\n  if (isNaN(Number(serialisedEdge.startPosition))) {\n    startPos = new Position((serialisedEdge.startPosition as SerialisedPosition).x,\n      (serialisedEdge.startPosition as SerialisedPosition).y);\n  } else {\n    startPos = serialisedEdge.startPosition as number;\n  }\n\n  if (isNaN(Number(serialisedEdge.endPosition))) {\n    endPos = new Position((serialisedEdge.endPosition as SerialisedPosition).x,\n      (serialisedEdge.endPosition as SerialisedPosition).y);\n  } else {\n    endPos = serialisedEdge.endPosition as number;\n  }\n\n  let result = new Edge(startPos, endPos);\n\n  // Add formatting\n  result.lineType = serialisedEdge.lineType;\n  result.lineStyle = serialisedEdge.lineStyle;\n  result.startStyle = serialisedEdge.startStyle;\n  result.endStyle = serialisedEdge.endStyle;\n\n  result.middlePositions = serialisedEdge.middlePositions.map(p => deserialisePosition(p));\n\n  // Add labels, if defined.\n  if (serialisedEdge.startLabel) {\n    result.startLabel = deserialiseLabel(serialisedEdge.startLabel);\n    result.startLabel.anchors = result.labelAnchors;\n  }\n\n  if (serialisedEdge.middleLabel) {\n    result.middleLabel = deserialiseLabel(serialisedEdge.middleLabel);\n    result.middleLabel.anchors = result.labelAnchors;\n  }\n\n  if (serialisedEdge.endLabel) {\n    result.endLabel = deserialiseLabel(serialisedEdge.endLabel);\n    result.endLabel.anchors = result.labelAnchors;\n  }\n\n  return result;\n}\n","import {EditService} from \"../services/edit.service\";\nimport {Node} from \"../../model/node/node\";\n\nexport abstract class AbstractTextNode {\n  private inEditMode: boolean = false;\n  abstract node: Node;\n\n  protected constructor(protected editService: EditService) {\n  }\n\n  subscribeToEditService(): void {\n    this.editService.editElementObservable.subscribe(element => this.inEditMode = element === this.node);\n  }\n\n  public get textLines() {\n    return (this.inEditMode ? this.editService.includeCursor(this.node.text) : this.node.text).split('\\\\n');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Node} from \"../../model/node/node\";\nimport {Edge} from \"../../model/edge\";\nimport {courseSets, flattenActive} from \"./course-sets\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ShapeSetContainerService} from \"../services/shape-set-container.service\";\n\n@Component({\n  selector: 'app-shapeset-management-modal',\n  templateUrl: './shapeset-management-modal.component.html',\n  styleUrls: ['./shapeset-management-modal.component.scss']\n})\nexport class ShapesetManagementModalComponent {\n  readonly currentCourseSets = courseSets;\n\n  constructor(public modal: NgbActiveModal,\n              private shapeSetContainerService: ShapeSetContainerService) { }\n\n  get allKeyValues(): Array<[string, CourseSet]> {\n    return Object.entries(this.currentCourseSets);\n  }\n\n  getCourseTuple(key: string) {\n    return Object.entries(this.currentCourseSets[key]);\n  }\n\n  update(): void {\n    this.shapeSetContainerService.shapeSets.next(flattenActive(this.currentCourseSets));\n  }\n}\n\nexport type CourseSet = {\n  [key: string]: ShapeSet\n}\n\nexport type ShapeSet = {\n  nodes: { [key: string]: Node },\n  edges: { [key: string]: Edge },\n  active: boolean\n}\n","<div class=\"modal-header text-center\">\n  <h4 class=\"modal-title\" id=\"modal-title\">Shape Set Selection</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"alert alert-info\">Select which shape sets you want to use.</div>\n\n  <div *ngFor=\"let courseKeyTuple of allKeyValues\">\n    <h4>{{courseKeyTuple[0]}}</h4>\n    <div>\n      <div *ngFor=\"let tuple of getCourseTuple(courseKeyTuple[0])\" class=\"form-check\">\n        <input class=\"form-check-input\"\n               type=\"checkbox\"\n               [attr.id]=\"tuple[0]\"\n               [checked]=\"tuple[1].active\"\n               (change)=\"tuple[1].active = !tuple[1].active; update()\">\n        <label class=\"form-check-label\" [attr.for]=\"tuple[0]\">\n          {{tuple[0]}}\n        </label>\n      </div>\n    </div>\n    <hr>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\"\n          ngbAutofocus\n          class=\"btn btn-outline-secondary\"\n          (click)=\"modal.close('Ok click')\">\n    Close\n  </button>\n</div>\n","import {AfterViewInit, Component, Input} from '@angular/core';\nimport {Node} from \"../../../model/node/node\";\nimport {EditService} from \"../../services/edit.service\";\nimport {AbstractTextNode} from \"../abstract-text-node\";\n\n@Component({\n  selector: '[basic-node-text]',\n  templateUrl: './basic-node-text.component.html',\n  styleUrls: ['./basic-node-text.component.scss']\n})\nexport class BasicNodeTextComponent extends AbstractTextNode implements AfterViewInit {\n  @Input() node!: Node;\n  readonly FONT_SIZE = 16;\n\n  constructor(editService: EditService) {\n    super(editService);\n  }\n\n  ngAfterViewInit() {\n    this.subscribeToEditService();\n  }\n\n  get lineAmount(): number {\n    return this.node!.getTextLines().length;\n  }\n\n  get centerX(): number {\n    return this.node.position.x + this.node.width / 2;\n  }\n\n  get centerY(): number {\n    return this.node.position.y + this.node.height / 2;\n  }\n\n  getY(lineIndex: number): number {\n    const CENTER_INDEX = Math.floor(this.lineAmount / 2);\n    const EVEN_ODD_OFFSET = this.lineAmount % 2 === 0 ? this.FONT_SIZE / 2 : 0;\n    let offset = lineIndex - CENTER_INDEX;\n    return this.centerY + (offset * this.FONT_SIZE) + EVEN_ODD_OFFSET;\n  }\n\n  setActive(index: number) {\n    // if (this.editService.isActive()) {\n    //   this.editService.setNewLineActive(index);\n    // }\n  }\n}\n","<svg:text\n                     [attr.x]=\"node.position.x\"\n                     [attr.y]=\"node.position.y \"\n                     [attr.width]=\"node.width\"\n                     [attr.height]=\"node.height\"\n                     font-family=\"sans-serif\"\n                     [attr.font-size]=\"FONT_SIZE\"\n                     class=\"movable\">\n  <svg:tspan\n    *ngFor=\"let textLine of textLines; let i = index;\"\n\n    [attr.x]=\"centerX\"\n    [attr.y]=\"getY(i)\"\n    dominant-baseline=\"middle\"\n    text-anchor=\"middle\">\n    {{textLine}}\n  </svg:tspan>\n</svg:text>\n","import {SerialisedPosition} from \"../serialisation/serialised-data-structures/serialised-position\";\n\nexport class Position {\n  constructor(public x: number, public y: number) {\n  }\n\n  public toString(separator: string = ', ', end: string = ' '): string {\n    return `${this.x}${separator}${this.y}${end}`;\n  }\n\n  public getLength(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  public getDeepCopy(): Position {\n    return new Position(this.x, this.y);\n  }\n\n  public serialise(): SerialisedPosition {\n    return {\n      x: this.x,\n      y: this.y\n    }\n  }\n\n  public static add(p1: Position, p2: Position): Position {\n    return new Position(p1.x + p2.x, p1.y + p2.y);\n  }\n\n  public static subtract(p1: Position, p2: Position): Position {\n    return new Position(p1.x - p2.x, p1.y - p2.y);\n  }\n\n  public static multiply(scalar: number, position: Position): Position {\n    return new Position(scalar * position.x, scalar * position.y);\n  }\n\n  public static getDistance(pos1: Position, pos2: Position): number {\n    return this.subtract(pos1, pos2).getLength()\n  }\n\n  public static zero(): Position {\n    return new Position(0, 0);\n  }\n\n  /**\n   * Determines whether some given position lies between two other positions.\n   * @param start The start of the area you want to check the middle to be in.\n   * @param middle The position for which you want to check whether it lies between.\n   * @param end TThe end of the area you want to check the middle to be in.\n   * @returns true if the position lies inbetween, false otherwise.\n   */\n  public static liesBetween(start: Position, middle: Position, end: Position): boolean {\n    return (((start.x <= middle.x) && (middle.x <= end.x)) || ((end.x <= middle.x) && (middle.x <= start.x))) &&\n     (((start.y <= middle.y) && (middle.y <= end.y)) || ((end.y <= middle.y) && (middle.y <= start.y)));\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Edge} from \"../../../model/edge\";\nimport {StartEndRepositioner} from \"../../services/edge-reposition/start-end-repositioner\";\nimport {MousePositionTransformService} from \"../../services/mouse-position-transform.service\";\nimport {SelectionService} from \"../../services/selection.service\";\n\n@Component({\n  selector: '[clickable-start-end-points]',\n  templateUrl: './clickable-start-end-points.component.html',\n  styleUrls: ['./clickable-start-end-points.component.scss']\n})\nexport class ClickableStartEndPointsComponent {\n  @Input() edge!: Edge;\n  readonly RADIUS: number = 8;\n\n  constructor(private startEndRepositioner: StartEndRepositioner,\n              private selectionService: SelectionService) { }\n\n  handleMouseDown(event: MouseEvent, type: 'start' | 'end'): void {\n    this.selectionService.setEdge(this.edge);\n    this.startEndRepositioner.activate(this.edge, type === 'start');\n  }\n}\n","<svg:ellipse [attr.cx]=\"edge.getStartPosition().x\"\n             [attr.cy]=\"edge.getStartPosition().y\"\n             [attr.rx]=\"RADIUS\"\n             [attr.ry]=\"RADIUS\"\n             style=\"fill: green; stroke-width: 2; stroke: green; fill-opacity: 0.5; stroke-opacity: 0.75; cursor: move\"\n             (mousedown)=\"handleMouseDown($event, 'start')\"\n/>\n\n<svg:ellipse [attr.cx]=\"edge.getEndPosition().x\"\n             [attr.cy]=\"edge.getEndPosition().y\"\n             [attr.rx]=\"RADIUS\"\n             [attr.ry]=\"RADIUS\"\n             style=\"fill: green; stroke-width: 2; stroke: green; fill-opacity: 0.5; stroke-opacity: 0.75; cursor: move\"\n             (mousedown)=\"handleMouseDown($event, 'end')\"\n/>\n","import {AfterViewInit, Component, Input, OnInit} from '@angular/core';\nimport {Node} from \"../../../model/node/node\";\nimport {AbstractTextNode} from \"../abstract-text-node\";\nimport {EditService} from \"../../services/edit.service\";\n\n@Component({\n  selector: '[below-node-text]',\n  templateUrl: './below-text-node.component.html',\n  styleUrls: ['./below-text-node.component.scss']\n})\nexport class BelowTextNodeComponent extends AbstractTextNode implements AfterViewInit {\n  @Input() node!: Node;\n\n  constructor(editService: EditService) {\n    super(editService);\n  }\n\n  ngAfterViewInit() {\n    this.subscribeToEditService();\n  }\n\n  readonly FONT_SIZE = 16;\n\n  get centerX() {\n    return this.node.position.x + this.node.width / 2;\n  }\n\n  getY(index: number) {\n    return this.node.position.y + this.node.height + (this.FONT_SIZE * (index + 1));\n  }\n}\n","<svg:text\n  font-family=\"sans-serif\"\n  [attr.font-size]=\"FONT_SIZE\"\n  class=\"movable\">\n  <svg:tspan\n    *ngFor=\"let textLine of textLines; let i = index;\"\n    [attr.x]=\"centerX\"\n    [attr.y]=\"getY(i)\"\n    dominant-baseline=\"middle\"\n    text-anchor=\"middle\">\n    {{textLine}}\n  </svg:tspan>\n</svg:text>\n","import { Component, OnInit } from '@angular/core';\nimport {Edge} from \"../../model/edge\";\nimport {DragDropCreationService} from \"../services/drag-drop-creation.service\";\nimport {Node} from \"../../model/node/node\";\n\n@Component({\n  selector: '[drag-drop-preview]',\n  templateUrl: './drag-drop-preview.component.html',\n  styleUrls: ['./drag-drop-preview.component.scss']\n})\nexport class DragDropPreviewComponent {\n  current: Node | Edge | undefined = undefined;\n\n  constructor(dragDropCreationService: DragDropCreationService) {\n    dragDropCreationService.selectedObservable.subscribe(value => this.current = value);\n  }\n\n  toEdge() {\n    return this.current instanceof Edge ? this.current as Edge : undefined;\n  }\n\n  toNode() {\n    return this.current instanceof Node ? this.current as Node : undefined;\n  }\n\n  get x(): number {\n    if (this.current === undefined) {\n      return -1;\n    } else if (this.current instanceof Node) {\n      return (this.current as Node).position.x;\n    } else {\n      return (this.current as Edge).getStartPosition().x;\n    }\n  }\n\n  get y(): number {\n    if (this.current === undefined) {\n      return -1;\n    } else if (this.current instanceof Node) {\n      return (this.current as Node).position.y;\n    } else {\n      return (this.current as Edge).getStartPosition().y;\n    }\n  }\n\n  get width(): number {\n    if (this.current === undefined) {\n      return -1;\n    } else if (this.current instanceof Node) {\n      return (this.current as Node).width;\n    } else {\n      let edge = this.current as Edge;\n      return edge.getEndPosition().x - edge.getStartPosition().x;\n    }\n  }\n\n  get height(): number {\n    if (this.current === undefined) {\n      return -1;\n    } else if (this.current instanceof Node) {\n      return (this.current as Node).height;\n    } else {\n      let edge = this.current as Edge;\n      return edge.getEndPosition().y - edge.getStartPosition().y;\n    }\n  }\n}\n","<svg:g *ngIf=\"toEdge()\" edge-render-dispatch [edge]=\"toEdge()!\"></svg:g>\n\n<svg:g *ngIf=\"toNode()\" node-render-dispatch [node]=\"toNode()!\"></svg:g>\n","import {Component, Input} from '@angular/core';\nimport {Edge, LineType} from \"../../../model/edge\";\n\n@Component({\n  selector: '[edge-render-dispatch]',\n  templateUrl: './edge-render-dispatch.component.html',\n  styleUrls: ['./edge-render-dispatch.component.scss']\n})\nexport class EdgeRenderDispatchComponent {\n  @Input() edge!: Edge;\n  @Input() styleObject?: {[key: string]: string | number} = {\n    'stroke': 'black',\n    'stroke-width': 2\n  };\n\n  isLine() {\n    return this.edge.lineType === LineType.Line;\n  }\n\n  isArc() {\n    return this.edge.lineType === LineType.Arc;\n  }\n}\n","<svg:g *ngIf=\"isLine()\" line-render-component [edge]=\"edge\" [styleObject]=\"styleObject\"/>\n<svg:g *ngIf=\"isArc()\" arc-render-component [edge]=\"edge\" [styleObject]=\"styleObject\"/>\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {UploadModalComponent} from \"../upload-modal/upload-modal.component\";\nimport {SaveModalComponent} from \"../save-modal/save-modal.component\";\nimport {Diagram} from \"../../model/diagram\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {CopyPasteService} from \"../services/copy-paste.service\";\nimport {CachingService} from \"../services/caching/caching.service\";\nimport {DiagramContainerService} from \"../services/diagram-container.service\";\nimport {DiagramManagementModalComponent} from \"../diagram-management-modal/diagram-management-modal.component\";\nimport {DiagramComponent} from \"../diagram/diagram.component\";\nimport {ZoomService} from \"../services/zoom.service\";\nimport {ClearDiagramModalComponent} from \"../clear-diagram-modal/clear-diagram-modal.component\";\nimport {ShapesetManagementModalComponent} from \"../shapeset-management-modal/shapeset-management-modal.component\";\nimport {HelpModalComponent} from \"../help-modal/help-modal.component\";\nimport {DeletionService} from \"../services/deletion.service\";\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements AfterViewInit {\n  get NAV_HEIGHT() { return DiagramComponent.NAV_HEIGHT; }\n  isAuthenticated = true;\n\n  constructor(private modalService: NgbModal,\n              private copyPasteService: CopyPasteService,\n              private cachingService: CachingService,\n              private diagramContainer: DiagramContainerService,\n              private zoomService: ZoomService,\n              private deletionService: DeletionService) { }\n\n  ngAfterViewInit() {\n    let showHelpOnStart = localStorage.getItem(HelpModalComponent.LOCAL_STORAGE_KEY);\n    if (showHelpOnStart !== 'false') {\n      this.help();\n    }\n  }\n\n  copy() {\n    this.copyPasteService.doCopy();\n  }\n\n  paste() {\n    this.copyPasteService.doPaste();\n  }\n\n  upload() {\n    this.modalService.open(UploadModalComponent, {size: 'xl'});\n  }\n\n  save() {\n    this.modalService.open(SaveModalComponent);\n  }\n\n  undo() {\n    let result = this.cachingService.undo();\n    if (result !== null) {\n      this.diagramContainer.set(result as Diagram);\n    }\n  }\n\n  redo() {\n    let result = this.cachingService.redo();\n    console.log(result)\n    if (result !== null) {\n      this.diagramContainer.set(result as Diagram);\n    }\n  }\n\n  openDiagramManagementModal() {\n    this.modalService.open(DiagramManagementModalComponent, {size: 'xl'});\n  }\n\n  zoomIn() {\n    this.zoomService.updateZoomFactor(true);\n  }\n\n  zoomOut() {\n    this.zoomService.updateZoomFactor(false);\n\n  }\n\n  help() {\n    this.modalService.open(HelpModalComponent, {size: ' xl'});\n  }\n\n  settings() {\n\n  }\n\n  login() {\n    this.isAuthenticated = !this.isAuthenticated;\n  }\n\n  openClearDiagramPopUp() {\n    this.modalService.open(ClearDiagramModalComponent);\n  }\n\n  openShapeSetSelector() {\n    this.modalService.open(ShapesetManagementModalComponent);\n  }\n\n  delete() {\n    this.deletionService.deleteSelected();\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light pb-0 pt-0\">\n  <div class=\"collapse navbar-collapse\" style=\"height: 50px;\">\n    <ul class=\"navbar-nav mr-auto pb-0 pt-0\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"openClearDiagramPopUp()\" ngbTooltip=\"Clear Diagram\" placement=\"bottom\">\n          <fa-icon [icon]=\"['fas', 'file']\"></fa-icon>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"upload()\" ngbTooltip=\"Open\" placement=\"bottom\">\n          <fa-icon [icon]=\"['fas', 'folder-open']\"></fa-icon>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"save()\" ngbTooltip=\"Save\" placement=\"bottom\">\n          <fa-icon [icon]=\"['fas', 'save']\"></fa-icon>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"copy()\" ngbTooltip=\"Copy (ctrl+c)\" placement=\"bottom\">\n          <fa-icon [icon]=\"['fas', 'copy']\"></fa-icon>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"paste()\" ngbTooltip=\"Paste (ctrl+v)\" placement=\"bottom\">\n          <fa-icon [icon]=\"['fas', 'paste']\"></fa-icon>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"undo()\" ngbTooltip=\"Undo (ctrl+z)\" placement=\"bottom\">\n          <fa-icon [icon]=\"['fas', 'undo']\"></fa-icon>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"redo()\" ngbTooltip=\"Redo (ctrl+y)\" placement=\"bottom\">\n          <fa-icon [icon]=\"['fas', 'redo']\"></fa-icon>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"zoomOut()\" ngbTooltip=\"Zoom Out\" placement=\"bottom\">\n          <fa-icon [icon]=\"['fas', 'search-minus']\"></fa-icon>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"zoomIn()\" ngbTooltip=\"Zoom In\" placement=\"bottom\">\n          <fa-icon [icon]=\"['fas', 'search-plus']\"></fa-icon>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"delete()\" ngbTooltip=\"Delete Selected\" placement=\"bottom\">\n          <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"openShapeSetSelector()\" ngbTooltip=\"Shape Set Selection\" placement=\"bottom\">\n          <fa-icon [icon]=\"['fas', 'list']\"></fa-icon>\n        </a>\n      </li>\n    </ul>\n  </div>\n\n  <ul class=\"navbar-nav ml-auto pb-0 pt-0\">\n    <li class=\"nav-item\" *ngIf=\"isAuthenticated\">\n      <a class=\"nav-link\" href=\"#\" (click)=\"openDiagramManagementModal()\" ngbTooltip=\"Manage Diagrams\" placement=\"bottom\">\n        <fa-icon [icon]=\"['fas', 'tasks']\"></fa-icon>\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" href=\"#\" (click)=\"login()\" ngbTooltip=\"Login\" placement=\"bottom\">\n        <fa-icon *ngIf=\"isAuthenticated\" [icon]=\"['fas', 'user']\"></fa-icon>\n        <fa-icon *ngIf=\"!isAuthenticated\" [icon]=\"['fas', 'user-slash']\"></fa-icon>\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" href=\"#\" (click)=\"settings()\" ngbTooltip=\"Settings\" placement=\"bottom\">\n        <fa-icon [icon]=\"['fas', 'cog']\"></fa-icon>\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" href=\"#\" (click)=\"help()\" ngbTooltip=\"Help\" placement=\"bottom\">\n        <fa-icon [icon]=\"['fas', 'question']\"></fa-icon>\n      </a>\n    </li>\n  </ul>\n</nav>\n","<svg:g *ngIf=\"node\">\n  <svg:ellipse *ngFor=\"let point of node.getAllResizePoints(); let i = index;\"\n    [attr.cx]=\"node.position.x + point.x\"\n    [attr.cy]=\"node.position.y + point.y\"\n    rx=\"5\"\n    ry=\"5\"\n    style=\"fill:red;stroke:black;stroke-width:2;fill-opacity:1;stroke-opacity:0.9\"\n    (mousedown)=\"handleClick($event, i);\">\n  </svg:ellipse>\n</svg:g>\n\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Node} from \"../../../model/node/node\";\nimport {EdgeCreationService} from \"../../services/edge-creation.service\";\nimport {ResizeService} from \"../../services/resize.service\";\nimport {Position} from \"../../../model/position\";\nimport {SelectionService} from \"../../services/selection.service\";\n\n@Component({\n  selector: '[clickable-resize-points]',\n  templateUrl: './clickable-resize-points.component.html',\n  styleUrls: ['./clickable-resize-points.component.scss']\n})\nexport class ClickableResizePointsComponent {\n  @Input() node?: Node;\n\n  constructor(private resizeService: ResizeService, private selectionService: SelectionService) {\n  }\n\n  handleClick($event: MouseEvent, resizePointIndex: number) {\n    if (this.node === undefined) {\n      throw new Error(\"You are clicking on clickable resize points that have no associated node. \" +\n        \"This should be impossible\");\n    }\n    this.selectionService.setNode(this.node!);\n    this.resizeService.activate(this.node, resizePointIndex);\n  }\n\n  public getPosition(attachmentNumber: number): Position | undefined {\n    return this.node?.getPositionOfAttachment(attachmentNumber) ;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionService} from \"../../services/selection.service\";\nimport {Node} from \"../../../model/node/node\";\nimport {Edge} from \"../../../model/edge\";\n\n@Component({\n  selector: '[selected-node-highlight]',\n  templateUrl: './selected-node-highlight.component.html',\n  styleUrls: ['./selected-node-highlight.component.scss']\n})\nexport class SelectedNodeHighlightComponent {\n  selectedNodes: Array<Node> = [];\n\n  constructor(private selectionService: SelectionService) {\n    selectionService.selectedObservable.subscribe(newList => {\n      this.selectedNodes = newList.filter(elem => elem instanceof Node).map(node => <Node> node);\n    });\n  }\n}\n","<!--We offset the selection border to avoid overlap with the actual border of the element as this causes weird rendering. -->\n<svg:g *ngFor=\"let node of selectedNodes\">\n  <svg:rect\n            [attr.x]=\"node.position.x - 1\"\n            [attr.y]=\"node.position.y - 1\"\n            [attr.width]=\"node.width + 2\"\n            [attr.height]=\"node!.height + 2\"\n            style=\"fill: none; stroke-width: 1; stroke: red; stroke-opacity: 0.5; stroke-dasharray: 4;\"\n  />\n\n  <svg:g clickable-resize-points [node]=\"node\"/>\n</svg:g>\n","/**\n * Determines whether a given point lies on a given line segment within some margin of error.\n * The margin of error is there because the user can not perfectly click on the line.\n * @param point Point for which it will be checked whether it lies on the segment.\n * @param start Start of the line segment.\n * @param end End of the line segment.\n * @returns True if the point approximately lies on the line segment, false otherwise.\n */\nimport {Position} from \"../../../model/position\";\n\nexport function liesOnSegment(point: Position, start: Position, end: Position): boolean {\n  let actualSegment: Position = Position.subtract(end, start);\n  let ourSegment: Position = Position.subtract(point, start);\n  let angle: number = Math.atan2(-actualSegment.y, actualSegment.x);\n  let rotationMatrix: number[][] = [[Math.cos(angle), Math.sin(angle)],[-Math.sin(angle), Math.cos(angle)]];\n  let baseVector: number[] = matrixVectorMult(rotationMatrix, [actualSegment.x, actualSegment.y]);\n  let transformedPoint: number[] = matrixVectorMult(rotationMatrix, [ourSegment.x, ourSegment.y]);\n  return (Math.abs(transformedPoint[1]) < 10 && (transformedPoint[0] >= 0) && (transformedPoint[0] <= baseVector[0]));\n}\n\nexport function matrixVectorMult(matrix: number[][], vector: number[]): number[] {\n  return [matrix[0][0] * vector[0] + matrix[1][0] * vector[1], matrix[0][1] * vector[0] + matrix[1][1] * vector[1]]\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ClassNode} from \"../../model/node/class-node\";\nimport {Position} from \"../../model/position\";\nimport {Edge, EndStyle, LineType} from \"../../model/edge\";\nimport {Node} from \"../../model/node/node\";\nimport {RectangleNode} from \"../../model/node/rectangle-node\";\nimport {DragDropCreationService} from \"../services/drag-drop-creation.service\";\nimport {DomSanitizer, SafeHtml} from \"@angular/platform-browser\";\nimport {EllipseNode} from \"../../model/node/ellipse-node\";\nimport {DiamondNode} from \"../../model/node/diamond-node\";\nimport {HourglassNode} from \"../../model/node/hourglass-node\";\nimport {ActorNode} from \"../../model/node/actor-node\";\nimport {ForkRejoinNode} from \"../../model/node/fork-rejoin-node\";\nimport {EdgeCreationService} from \"../services/edge-creation.service\";\nimport {group} from \"@angular/animations\";\nimport {element} from \"protractor\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {Label} from \"../../model/label\";\nimport {DiagramContainerService} from \"../services/diagram-container.service\";\nimport {DeletionService} from \"../services/deletion.service\";\nimport {CourseSet, ShapeSet} from \"../shapeset-management-modal/shapeset-management-modal.component\";\nimport {ShapeSetContainerService} from \"../services/shape-set-container.service\";\nimport {DiagramComponent} from \"../diagram/diagram.component\";\nimport {CachingService} from \"../services/caching/caching.service\";\n\n@Component({\n  selector: 'creation-sidebar',\n  templateUrl: './creation-sidebar.component.html',\n  styleUrls: ['./creation-sidebar.component.scss']\n})\nexport class CreationSidebarComponent implements OnInit {\n  public static readonly WIDTH: number = 300;\n  private selectedKeys: [string, string] | undefined;\n  private selectedElement: Edge | Node | undefined = undefined;\n  edgeCreationIsActive: boolean = false;\n  shapeSets: CourseSet;\n  selectedType: 'node' | 'edge' | 'neither' | 'nothing' = 'nothing';\n\n  constructor(private dragDropCreationService: DragDropCreationService,\n              private diagramContainerService: DiagramContainerService,\n              private edgeCreationService: EdgeCreationService,\n              private selectionService: SelectionService,\n              private deletionService: DeletionService,\n              private cachingService: CachingService,\n              shapeSetContainerService: ShapeSetContainerService) {\n    selectionService.selectedObservable.subscribe(list => {\n      if (list.length === 1) {\n        if (list[0] instanceof Node) {\n          this.selectedType = 'node';\n          return;\n        } else if (list[0] instanceof Edge) {\n          this.selectedType = 'edge';\n          return;\n        }\n      } else if (list.length === 0) {\n        this.selectedType = 'nothing';\n        return;\n      }\n\n      this.selectedType = 'neither';\n    })\n\n    edgeCreationService.activityObservable.subscribe(active => {\n      this.edgeCreationIsActive = active;\n      if (!active) {\n        this.selectedKeys = undefined;\n      }\n    });\n\n    selectionService.selectedObservable.subscribe(selectedList => {\n      if (selectedList.length === 1 && !(selectedList[0] instanceof Label)) {\n        this.selectedElement = selectedList[0];\n      } else {\n        this.selectedElement = undefined;\n      }\n    });\n    this.shapeSets = shapeSetContainerService.shapeSets.getValue();\n    shapeSetContainerService.observable.subscribe(shapeSets => this.shapeSets = shapeSets);\n  }\n\n  ngOnInit(): void {\n    let height: number = window.innerHeight - DiagramComponent.NAV_HEIGHT;\n    let left: number = window.innerWidth - CreationSidebarComponent.WIDTH;\n    document.getElementById(\"creation-side-bar\")!.style.overflow = \"auto\";\n    document.getElementById(\"creation-side-bar\")!.style.height = height + \"px\";\n    document.getElementById(\"creation-side-bar\")!.style.width = CreationSidebarComponent.WIDTH + \"px\";\n    document.getElementById(\"creation-side-bar\")!.style.position = \"absolute\";\n    document.getElementById(\"creation-side-bar\")!.style.left = left + \"px\";\n    document.getElementById(\"creation-side-bar\")!.style.top = 50 + \"px\";\n\n  }\n\n  get styleObject() {\n    return {\n      width: CreationSidebarComponent.WIDTH,\n      height: window.innerHeight - DiagramComponent.NAV_HEIGHT,\n      left: window.innerWidth - CreationSidebarComponent.WIDTH\n    }\n  }\n\n  get groupKeys() {\n    return Object.keys(this.shapeSets);\n  }\n\n  Object = Object;\n\n  handleGenericMouseUp(): void {\n    if (this.dragDropCreationService.isActive()) {\n      this.dragDropCreationService.cancel();\n    }\n  }\n\n  handleEdgeMouseUp(groupKey: string, elementKey: string) {\n    if (this.selectedKeys !== undefined && this.selectedKeys[0] === groupKey &&\n      this.selectedKeys[1] === elementKey) {\n      this.edgeCreationService.activate(this.shapeSets[groupKey].edges[elementKey])\n    }\n  }\n\n  handleMouseDown(groupKey: string, elementKey: string, type: 'node' | 'edge'): void {\n    if (this.selectedElement === undefined) {\n      if (type === 'node') {\n        this.dragDropCreationService.activate(this.shapeSets[groupKey].nodes[elementKey]);\n      } else {\n        this.dragDropCreationService.activate(this.shapeSets[groupKey].edges[elementKey]);\n        this.selectedKeys = [groupKey, elementKey];\n      }\n    } else if (type === 'node' && this.selectedElement instanceof Node) {\n      let old = <Node> this.selectedElement;\n      let newN = this.shapeSets[groupKey].nodes[elementKey].getDeepCopy();\n      newN.position = old.position;\n      newN.width = old.width;\n      newN.height = old.height;\n      newN.text = old.text;\n\n      this.diagramContainerService.get().edges.forEach(edge => {\n        if (edge.startNode === old) {\n          edge.startNode = newN;\n        }\n\n        if (edge.endNode === old) {\n          edge.endNode = newN;\n        }\n      });\n\n      this.deletionService.deleteNode(old, false);\n      this.diagramContainerService.get().nodes.push(newN);\n      this.cachingService.save();\n      setTimeout(() => this.selectionService.setNode(newN), 50);\n\n    } else if (type === 'edge' && this.selectedElement instanceof Edge) {\n      let edge = <Edge> this.selectedElement;\n      let newEdge = this.shapeSets[groupKey].edges[elementKey].getDeepCopy();\n      newEdge.startPosition = edge.startPosition;\n      newEdge.endPosition = edge.endPosition;\n      newEdge.startNode = edge.startNode;\n      newEdge.endNode = edge.endNode;\n      newEdge.startLabel = edge.startLabel;\n      newEdge.middleLabel = edge.middleLabel;\n      newEdge.endLabel = edge.endLabel;\n      newEdge.middlePositions = edge.middlePositions;\n      if (newEdge.lineType === LineType.Arc && newEdge.middlePositions.length !== 1) {\n        newEdge.setDefaultMiddlePointOnArc();\n      }\n      let edges = this.diagramContainerService.get().edges;\n      edges[edges.indexOf(edge)] = newEdge;\n      this.cachingService.save();\n      // The new node should be selected.\n      // For some reason if we select it without delay,\n      // it does not update the edge attribute of the component quick enough.\n      setTimeout(() => this.selectionService.setEdge(newEdge), 50);\n    }\n  }\n\n  isSelected(groupKey: string, edgeKey: string) {\n    return this.selectedKeys !== undefined && this.selectedKeys[0] === groupKey && this.selectedKeys[1] === edgeKey;\n  }\n\n  getStyles() {\n    return {\n      left: window.innerWidth - CreationSidebarComponent.WIDTH,\n      position: \"absolute\",\n      top: 50\n    }\n  }\n\n  getEdgeCursor() {\n    switch (this.selectedType) {\n      case \"edge\":\n      case \"nothing\":\n        return 'pointer';\n      case \"node\":\n      case \"neither\":\n        return \"disabled\";\n    }\n  }\n\n  getNodeCursor() {\n    switch (this.selectedType) {\n      case \"node\":\n      case \"nothing\":\n        return 'pointer';\n      case \"edge\":\n      case \"neither\":\n        return \"disabled\";\n    }\n  }\n}\n\n","<div id=\"creation-side-bar\" [ngStyle]=\"getStyles()\" (mouseup)=\"handleGenericMouseUp()\">\n  <ngb-accordion [closeOthers]=\"true\">\n    <ngb-panel *ngFor=\"let diagramGroup of groupKeys\" title=\"{{diagramGroup}}\">\n      <ng-template ngbPanelContent>\n        <ul class=\"list-group\">\n          <a href=\"#\"\n             class=\"list-group-item list-group-item-action\"\n             [ngClass]=\"{'selected': isSelected(diagramGroup, edgeKey) && edgeCreationIsActive}\"\n             [ngStyle]=\"{'cursor': (selectedType === 'edge' || selectedType === 'nothing') ? 'pointer' : 'not-allowed'}\"\n             *ngFor=\"let edgeKey of Object.keys(shapeSets[diagramGroup].edges)\"\n             (mousedown)=\"handleMouseDown(diagramGroup, edgeKey, 'edge')\"\n             (mouseup)=\"handleEdgeMouseUp(diagramGroup, edgeKey)\"\n             (dragstart)=\"false\">\n            <div class=\"d-flex w-100 justify-content-between\">\n              <h6 class=\"mb-1 w-100 text-center\">{{edgeKey}}</h6>\n            </div>\n            <div class=\"w-100\">\n              <svg height=\"40\" width=\"196\">\n                <svg:g edge-render-dispatch [edge]=\"shapeSets[diagramGroup].edges[edgeKey]\"/>\n              </svg>\n            </div>\n          </a>\n\n          <a href=\"#\"\n             class=\"list-group-item list-group-item-action flex-column align-items-start\"\n             *ngFor=\"let nodeKey of Object.keys(shapeSets[diagramGroup].nodes)\"\n             (mousedown)=\"handleMouseDown(diagramGroup, nodeKey, 'node')\"\n             (dragstart)=\"false\"\n             [ngStyle]=\"{'cursor': (selectedType === 'node' || selectedType === 'nothing') ? 'pointer' : 'not-allowed'}\"\n          >\n            <div class=\"d-flex w-100 justify-content-between text-center\">\n              <h6 class=\"mb-1 w-100 text-center\">{{nodeKey}}</h6>\n            </div>\n            <div class=\"w-100\">\n              <svg [attr.height]=\"shapeSets[diagramGroup].nodes[nodeKey].height + 2 * shapeSets[diagramGroup].nodes[nodeKey].position.y\"\n                   width=\"300\">\n                <g node-render-dispatch [node]=\"shapeSets[diagramGroup].nodes[nodeKey]\"></g>\n              </svg>\n            </div>\n          </a>\n        </ul>\n      </ng-template>\n    </ngb-panel>\n  </ngb-accordion>\n</div>\n","// import {AttachmentDirection, Node, NodeFormatter, Shape} from \"../node/Node\";\n// import {Position} from \"../position\";\n// import {Edge, EdgeFormatter, EndStyle, LineStyle, LineType} from \"../edge\";\nimport {Diagram} from \"../diagram\";\nimport {EllipseNode} from \"../node/ellipse-node\";\nimport {Position} from \"../position\";\nimport {Edge} from \"../edge\";\n//\nexport let fsm: Diagram;\nlet n1 = new EllipseNode(100, 100, new Position(50, 10));\nlet n2 = new EllipseNode(100, 100, new Position(250, 10));\nlet e1 = new Edge(3, 2, n1, n2);\ne1.addMiddleLabel('a, b, c');\nfsm = new Diagram([n1, n2], [e1])\n//\n// const n1: Node = {\n//   texts: ['n1'],\n//   formatter: new NodeFormatter(100, 100, new Position(100, 100), Shape.Ellipse)\n// }\n// const n2: Node = {\n//   texts: ['n2'],\n//   formatter: new NodeFormatter(100, 100, new Position(300, 100), Shape.Ellipse)\n// }\n// const n3: Node = {\n//   texts: ['n3'],\n//   formatter: new NodeFormatter(100, 100, new Position(500, 100), Shape.Ellipse)\n// }\n//\n// const e1: Edge = {\n//   startNode: n1,\n//   endNode: n2\n// }\n// e1.formatter = new EdgeFormatter(AttachmentDirection.North, AttachmentDirection.North, n1, n2);\n// e1.formatter.lineType = LineType.Arc;\n// e1.formatter.lineStyle = LineStyle.Dotted;\n// e1.formatter.middlePositions = [new Position(250, 50)];\n// e1.formatter.endStyle = EndStyle.SmallFilledArrow;\n//\n// e1.middleLabel = \"transition 1\";\n//\n// const e2: Edge = {\n//   startNode: n1,\n//   endNode: n2\n// }\n// e2.formatter = new EdgeFormatter(AttachmentDirection.South, AttachmentDirection.South, n2, n3);\n// e2.formatter.lineType = LineType.Arc;\n// e2.formatter.lineStyle = LineStyle.Dashed;\n// e2.formatter.middlePositions = [new Position(450, 250)];\n// e2.formatter.endStyle = EndStyle.SmallFilledArrow;\n// e2.middleLabel = \"transition 2\"\n//\n// let edgeFormatter = new EdgeFormatter(new Position(10, 150), new Position(100, 150));\n// edgeFormatter.endStyle = EndStyle.SmallFilledArrow;\n// edgeFormatter.lineStyle = LineStyle.Dashed;\n//\n// fsm = {\n//   nodes: [n1, n2, n3],\n//   edges: [e1, e2],\n//   unstructuredEdges: [edgeFormatter]\n// }\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ActorNode} from \"../../../model/node/actor-node\";\nimport {Position} from \"../../../model/position\";\n\n@Component({\n  selector: '[actor-node-render]',\n  templateUrl: './actor-node-render.component.html',\n  styleUrls: ['./actor-node-render.component.scss']\n})\nexport class ActorNodeRenderComponent {\n  @Input() node!: ActorNode;\n  pathStyle = {\n    'stroke': 'black',\n    'stroke-width': 2,\n    'fill': 'none',\n    'stroke-opacity': 0.75\n  };\n\n  get ellipseRadius(): number {\n    return this.node.width / 4;\n  }\n\n  get armsPath(): string {\n    let left = this.addPos(new Position(0, 0.75 * this.node.width));\n    let right = this.addPos(new Position(this.node.width, 0.75 * this.node.width));\n\n    return `M${left.toString(' ', '')} L${right.toString(' ', '')}`;\n  }\n\n  get spinePath(): string {\n    let up = this.addPos(new Position(this.node.width / 2, 0.5 * this.node.width));\n    let down = this.addPos(new Position(this.node.width / 2, 1.25 * this.node.width));\n\n    return `M${up.toString(' ', '')} L${down.toString(' ', '')}`;\n  }\n\n  get leftLegPath(): string {\n    let up = this.addPos(new Position(this.node.width / 2, 1.25 * this.node.width));\n    let down = this.addPos(new Position(this.node.width / 4, this.node.height));\n\n    return `M${up.toString(' ', '')} L${down.toString(' ', '')}`;\n  }\n\n  get rightLegPath(): string {\n    let up = this.addPos(new Position(this.node.width / 2, 1.25 * this.node.width));\n    let down = this.addPos(new Position(3 * this.node.width / 4, this.node.height));\n\n    return `M${up.toString(' ', '')} L${down.toString(' ', '')}`;\n  }\n\n  private addPos(p: Position) {\n    return Position.add(p, new Position(this.node.position.x, this.node.position.y));\n  }\n}\n","<svg:ellipse [attr.cx]=\"node.position.x + node.width / 2\"\n             [attr.cy]=\"node.position.y + node.width / 4\"\n             [attr.rx]=\"ellipseRadius\"\n             [attr.ry]=\"ellipseRadius\"\n             style=\"fill: black; stroke: black; stroke-width: 2 stroke-opacity: 0.75; fill-opacity: 0.25\"\n/>\n\n\n<svg:path [attr.d]=\"armsPath + spinePath + leftLegPath + rightLegPath\" [ngStyle]=\"pathStyle\"/>\n<svg:g below-node-text [node]=\"node\"/>\n","import {Component, EventEmitter, Inject, OnInit, Output, AfterContentInit} from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Diagram} from \"../../model/diagram\";\nimport {deserialiseDiagram} from \"../../serialisation/deserialise/deserialise-diagram\";\nimport {SerialisedDiagram} from \"../../serialisation/serialised-data-structures/serialised-diagram\";\nimport {UploadService} from \"../services/upload.service\";\nimport { DOCUMENT } from '@angular/common'\nimport {DiagramContainerService} from \"../services/diagram-container.service\";\nimport {fsm} from \"../../model/examples/fsm\";\nimport {LocalStorageService} from \"../services/caching/local-storage.service\";\nimport {DiagramManagementModalComponent} from \"../diagram-management-modal/diagram-management-modal.component\";\n\n@Component({\n  selector: 'app-upload-modal',\n  templateUrl: './upload-modal.component.html',\n  styleUrls: ['./upload-modal.component.scss']\n})\nexport class UploadModalComponent {\n  private file?: File;\n  selectedDiagram?: Diagram = fsm;\n  active: number = 1;\n\n  constructor(public modal: NgbActiveModal,\n              private diagramContainer: DiagramContainerService,\n              private localStorageService: LocalStorageService){}\n\n  onChange(event: any) {\n    this.file = event!.target!.files[0];\n  }\n\n  onClick() {\n    if (this.file === undefined) {\n      alert(\"You have to upload a file first.\");\n    }\n\n    this.file?.text()\n      .then((diagramString: string) => {\n        let diagramJSON = JSON.parse(diagramString);\n        let diagram = deserialiseDiagram(diagramJSON as SerialisedDiagram);\n        this.diagramContainer.set(diagram);\n      })\n      .catch((err) => {\n        console.log(err)\n        alert('The file you are trying to upload can not be converted to a diagram.');\n      });\n  }\n\n  get keyDiagramPairs() {\n    return this.localStorageService.getKeyDiagramPairs();\n  }\n\n  setLocalStorageDiagram(index: number) {\n    this.selectedDiagram = this.keyDiagramPairs[index][1];\n  }\n\n  removeLocalStorage(index: number) {\n    this.localStorageService.removeKey(this.keyDiagramPairs[index][0])\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\" id=\"modal-title\">Open Diagram</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"flex-row d-flex\">\n\n    <div class=\"flex-grow-1 mr-2\">\n      <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\n        <li [ngbNavItem]=\"1\">\n          <a ngbNavLink>Upload File</a>\n          <ng-template ngbNavContent>\n              <div>\n                <p>Upload a <code>.utml</code> file to resume the diagram creation process.</p>\n                <input id=\"upload-button\" class=\"form-control form-control-file\" type=\"file\" (change)=\"onChange($event)\">\n              </div>\n          </ng-template>\n        </li>\n        <li [ngbNavItem]=\"2\">\n          <a ngbNavLink>Browser Cache</a>\n          <ng-template ngbNavContent>\n            <table class=\"table table-hover\">\n              <thead>\n              <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\"></th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr *ngFor=\"let pair of keyDiagramPairs; let i = index;\" (click)=\"setLocalStorageDiagram(i)\">\n                <td>{{pair[0]}}</td>\n                <td class=\"icon\"><button class=\"btn btn-outline-danger text-center\" style=\"width: 50px\" (click)=removeLocalStorage(i)>\n                  <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\n                </button></td>\n              </tr>\n              </tbody>\n            </table>\n          </ng-template>\n        </li>\n        <li [ngbNavItem]=\"3\">\n          <a ngbNavLink>URL</a>\n          <ng-template ngbNavContent>\n            <p>Type in the URL of the diagram you want to open.</p>\n            <input type=\"text\" class=\"form-control form-text\">\n          </ng-template>\n        </li>\n      </ul>\n      <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n    </div>\n\n    <div class=\"preview-container border-left\">\n      <svg width=\"500\" height=\"700\">\n        <g *ngIf=\"selectedDiagram\" diagram-preview [diagram]=\"selectedDiagram!\"></g>\n      </svg>\n    </div>\n\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.close('Ok click')\">Cancel</button>\n  <div (click)=\"onClick()\">\n    <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"modal.close('Ok click')\">Open</button>\n  </div>\n</div>\n","import {Position} from \"./position\";\nimport {Node} from \"./node/node\";\nimport {EdgeLocation, Label, PositionCallback} from \"./label\";\nimport {SerialisedEdge} from \"../serialisation/serialised-data-structures/serialised-edge\";\n\nexport class Edge {\n  public startNode?: Node;\n  public endNode?: Node;\n\n  public startPosition: Position | number;\n  public middlePositions: Position[] = [];\n  public endPosition: Position | number;\n\n  public lineType: LineType = LineType.Line;\n  public lineStyle: LineStyle = LineStyle.Filled;\n  public startStyle: EndStyle = EndStyle.None;\n  public endStyle: EndStyle = EndStyle.None;\n\n  public startLabel?: Label;\n  public middleLabel?: Label;\n  public endLabel?: Label;\n\n  constructor(startPosition: Position | number,\n              endPosition: Position | number,\n              startNode: Node | undefined = undefined,\n              endNode: Node | undefined = undefined) {\n    this.startPosition = startPosition;\n    this.endPosition = endPosition;\n    this.startNode = startNode;\n    this.endNode = endNode;\n  }\n\n  public addStartLabel(value: string = 'start') {\n    let offset = Position.subtract(this.getEndPosition(), this.getStartPosition());\n    offset = Position.multiply(20 / offset.getLength(), offset);\n    this.startLabel = new Label(value, EdgeLocation.START, offset, this.labelAnchors);\n  }\n\n  public addMiddleLabel(value: string = 'middle') {\n    this.middleLabel = new Label(value, EdgeLocation.MIDDLE, Position.zero(), this.labelAnchors);\n  }\n\n  public addEndLabel(value: string = 'end') {\n    let offset = Position.subtract(this.getStartPosition(), this.getEndPosition());\n    offset = Position.multiply(20 / offset.getLength(), offset);\n    this.endLabel = new Label(value, EdgeLocation.END, offset, this.labelAnchors);\n  }\n\n  public getStartPosition(): Position {\n    return Edge.getPosition(this.startNode, this.startPosition);\n  }\n\n  public getEndPosition(): Position {\n    return Edge.getPosition(this.endNode, this.endPosition);\n  }\n\n  public getAllPoints(): Position[] {\n    let result: Position[] = [];\n    result.push(this.getStartPosition());\n    result.push(...this.middlePositions);\n    result.push(this.getEndPosition());\n    return result;\n  }\n\n  public get labelAnchors(): Array<PositionCallback> {\n    return [\n      () => this.getStartPosition(),\n      () => {\n        if (this.lineType === LineType.Arc) {\n          // todo @PLATON: What is the middle of the arc?\n          return this.middlePositions[0];\n        } else {\n          if (this.middlePositions.length === 0) {\n            return Position.multiply(0.5, Position.add(this.getStartPosition(), this.getEndPosition()));\n          } else if (this.middlePositions.length % 2 === 1) {\n            return this.middlePositions[Math.floor(this.middlePositions.length / 2)];\n          } else {\n            return Position.multiply(0.5, Position.add(\n              this.middlePositions[this.middlePositions.length / 2],\n              this.middlePositions[this.middlePositions.length / 2 - 1]\n            ));\n          }\n        }\n      },\n      () => this.getEndPosition(),\n    ];\n  }\n\n  private static getPosition(node: Node | undefined, positionOrDirection: Position | number) {\n    if (positionOrDirection instanceof Position) {\n      return positionOrDirection;\n    } else if (node === undefined) {\n      console.error(\"Trying to position an edge according to number but node is not set.\");\n      return new Position(0, 0);\n    } else {\n      if (node) {\n        return node.getPositionOfAttachment(positionOrDirection)\n      } else {\n        // todo: error handling\n        console.error(\"The node to which this edge is connected has no formatter!\");\n        return new Position(0, 0);\n      }\n    }\n  }\n\n  /**\n   * Returns a point string that can be used to draw a polyline or path depending on the line type\n   */\n  public getPointString(): string {\n    if (this.lineType == LineType.Line) {\n      let result: string = \"\";\n      result += this.getStartPosition().toString();\n      for (let position of this.middlePositions) {\n        result += position.toString();\n      }\n      result += this.getEndPosition().toString();\n      return result;\n    } else if (this.lineType == LineType.Arc) {\n      if (this.middlePositions.length != 1) {\n        throw new Error(`An Arc typed edge should have exactly 1 middle position. Edge ${this} has\n        ${this.middlePositions.length}.`);\n      }\n      let start: Position = this.getStartPosition();\n      let middle: Position = this.middlePositions[0];\n      let end: Position = this.getEndPosition();\n\n      let A: number = Position.getDistance(end, middle);\n      let B: number = Position.getDistance(middle, start);\n      let C: number = Position.getDistance(start, end);\n\n      let angle: number = Math.acos((A * A + B * B - C * C) / (2 * A * B));\n\n      //calc radius of circle\n      let K: number = .5 * A * B * Math.sin(angle);\n      let r: number = A * B * C / 4 / K;\n      r = Math.round(r * 1000) / 1000;\n\n      //large arc flag\n      let laf: number = +(Math.PI / 2 > angle);\n\n      //sweep flag\n      let saf: number = +((end.x - start.x) * (middle.y - start.y) - (end.y - start.y) * (middle.x - start.x) < 0);\n\n      return ['M', start.x, start.y, 'A', r, r, 0, laf, saf, end.x, end.y].join(' ');\n\n    } else {\n      throw new Error(`EdgeFormatter ${this} has type ${this.lineType} for which points can not be computed.`);\n    }\n  }\n\n  /**\n   * Returns the a string which will be assigned to 'marker-start' attribute on the edge tag.\n   * The result contains the id of a certain marker. Markers are defined in the 'arrow-marker' compontent.\n   */\n  public getStartMarker(): string {\n    switch (this.startStyle) {\n      case EndStyle.None:\n        return \"none\";\n      case EndStyle.SmallFilledArrow:\n        return \"url(#start-small-filled-arrow)\";\n      case EndStyle.FilledDiamond:\n        return \"url(#start-filled-diamond)\";\n      case EndStyle.UnfilledDiamond:\n        return \"url(#start-unfilled-diamond)\";\n      case EndStyle.LargeUnfilledArrow:\n        return \"url(#start-big-unfilled-arrow)\";\n    }\n    return \"none\";\n  }\n\n  /**\n   * Returns the a string which will be assigned to 'marker-end' attribute on the edge tag.\n   * The result contains the id of a certain marker. Markers are defined in the 'arrow-marker' compontent.\n   */\n  public getEndMarker(): string {\n    switch (this.endStyle) {\n      case EndStyle.None:\n        return \"none\";\n      case EndStyle.SmallFilledArrow:\n        return \"url(#end-small-filled-arrow)\";\n      case EndStyle.FilledDiamond:\n        return \"url(#end-filled-diamond)\";\n      case EndStyle.UnfilledDiamond:\n        return \"url(#end-unfilled-diamond)\";\n      case EndStyle.LargeUnfilledArrow:\n        return \"url(#end-big-unfilled-arrow)\";\n    }\n    return \"none\";\n  }\n\n  /**\n   * Returns a string to be assigned to 'dash-array' attribute.\n   * The result will be determined based upon the lineStyle field.\n   */\n  public getLineStyleString(): string {\n    switch (this.lineStyle) {\n      case LineStyle.Filled:\n        return \"none\";\n      case LineStyle.Dashed:\n        return \"12, 2\"\n      case LineStyle.Dotted:\n        return \"4, 4\"\n    }\n\n    return \"none\";\n  }\n\n  public setDefaultMiddlePointOnArc(): void {\n    // Arcs require a middle point for their rendering.\n    // By default we place this in the middle between start and end and then plus 0.25 of the vector perpendicular to\n    // end - start.\n    if (this.lineType !== LineType.Arc) {\n      throw new Error(\"This method should only be called on arcs.\");\n    }\n\n    let start = this.getStartPosition();\n    let end = this.getEndPosition();\n    let between = Position.subtract(end, start)\n    let betweenPerpendicular = new Position(-between.y, between.x)\n    let middle = Position.multiply(0.5, Position.add(start, end));\n    let position = Position.add(middle, Position.multiply(0.25, betweenPerpendicular))\n    this.middlePositions = [position];\n  }\n\n  public serialise(): SerialisedEdge {\n    return {\n      startPosition: this.startPosition,\n      endPosition: this.endPosition,\n      startLabel: this.startLabel?.serialise(),\n      middleLabel: this.middleLabel?.serialise(),\n      endLabel: this.endLabel?.serialise(),\n      startStyle: this.startStyle,\n      endStyle: this.endStyle,\n      lineStyle: this.lineStyle,\n      lineType: this.lineType,\n      middlePositions: this.middlePositions.map(p => p.serialise()),\n    }\n  }\n\n  public getDeepCopy(): Edge {\n    let result = new Edge(this.startPosition, this.endPosition, this.startNode, this.endNode);\n    result.middlePositions = this.middlePositions.map(pos => pos.getDeepCopy());\n\n\n    result.startLabel = this.startLabel?.getDeepCopy();\n    result.middleLabel = this.middleLabel?.getDeepCopy();\n    result.endLabel = this.endLabel?.getDeepCopy();\n    result.startStyle = this.startStyle;\n    result.endStyle = this.endStyle;\n    result.lineStyle = this.lineStyle;\n    result.lineType = this.lineType;\n    return result;\n  }\n}\n\nexport enum LineType {\n  Arc,\n  Line\n}\n\nexport enum LineStyle {\n  Filled,\n  Dotted,\n  Dashed\n}\n\nexport enum EndStyle {\n  None,\n  SmallFilledArrow,\n  FilledDiamond,\n  UnfilledDiamond,\n  LargeUnfilledArrow\n}\n\n// export interface Edge {\n//   startNode?: Node;\n//   endNode?: Node;\n//   startPosition: Position;\n//   endPosition: Position;\n//   points: Position[];\n//   label?: string;\n//   arrowStyle: EndStyle;\n//   edgeStyle: LineStyle;\n// }\n","import {Position} from \"../../../model/position\";\nimport {Edge} from \"../../../model/edge\";\nimport {Injectable} from \"@angular/core\";\nimport {liesOnSegment} from \"./lies-on-segment\";\nimport {SnapService} from \"../snap.service\";\nimport {CachingService} from \"../caching/caching.service\";\n\n@Injectable({\n  'providedIn': 'root'\n})\nexport class FixedPointRepositioner {\n  private position?: Position;\n  private edge?: Edge;\n\n  constructor(private snapService: SnapService, private cachingService: CachingService) {\n  }\n\n  public isActive(): boolean {\n    return this.position !== undefined && this.edge !== undefined;\n  }\n\n  public activate(edge: Edge, position: Position): void {\n    this.edge = edge;\n    this.position = position;\n  }\n\n  public update(newPosition: Position) {\n    if (!this.isActive()) {\n      throw new Error(\"Updating an unactivated repositioner.\");\n    }\n\n    newPosition = this.snapService.snapIfApplicable(newPosition, 5);\n\n    this.position!.x = newPosition.x;\n    this.position!.y = newPosition.y;\n  }\n\n  public deactivate(): void {\n    if (!this.isActive()) {\n      throw new Error(\"Deactivated an inactive repositioner.\");\n    }\n\n    // Snap to line segment if the fixed point now lies approximately\n    // on the line segment of its predecessor and successor.\n    let allPoints = this.edge!.getAllPoints();\n    let foundIndex: number = allPoints.indexOf(this.position!);\n    if (0 < foundIndex && foundIndex < allPoints.length - 1) {\n      if (liesOnSegment(this.position!, allPoints[foundIndex - 1], allPoints[foundIndex + 1])) {\n        // Remove the found index from the middle position array of the edge.\n        // Since the allPoints contains the start and the middlePositions does not we subtract 1.\n        this.edge!.middlePositions.splice(foundIndex - 1, 1);\n      }\n    }\n\n    this.edge = undefined;\n    this.position = undefined;\n    this.cachingService.save();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SerialisedDiagram} from \"../../../serialisation/serialised-data-structures/serialised-diagram\";\nimport {Diagram} from \"../../../model/diagram\";\nimport {SizeBoundDoublyLinkedList} from \"./SizeBoundDoublyLinkedList\";\nimport {deserialiseDiagram} from \"../../../serialisation/deserialise/deserialise-diagram\";\nimport {DiagramContainerService} from \"../diagram-container.service\";\nimport {LocalStorageService} from \"./local-storage.service\";\nimport {KeyboardEventCallerService} from \"../keyboard-event-caller.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service responsible for caching changes to the diagram object to localStorage and the redo/undo data structure.\n */\nexport class CachingService {\n  /** Key of the serialised version of the diagram that is stored in local storage. */\n  public static readonly LOCAL_STORAGE_KEY = 'diagram-cache';\n  private readonly MAX_SIZE: number = 25;\n  private readonly list: SizeBoundDoublyLinkedList<SerialisedDiagram>;\n  private diagram: Diagram;\n\n  constructor(diagramContainerService: DiagramContainerService,\n              private localStorageService: LocalStorageService,\n              keyboardEventCallerService: KeyboardEventCallerService) {\n    this.diagram = diagramContainerService.get();\n    diagramContainerService.diagramObservable.subscribe(diagram => this.diagram = diagram);\n    this.list = new SizeBoundDoublyLinkedList<SerialisedDiagram>(this.MAX_SIZE, this.diagram.serialise());\n\n    keyboardEventCallerService.addCallback(['z', 'keydown', 'ctrl'], (ignored) => {\n      let result = this.undo();\n      if (result !== null) {\n        diagramContainerService.set(result!);\n      }\n    });\n\n    keyboardEventCallerService.addCallback(['y', 'keydown', 'ctrl'], (ignored) => {\n      let result = this.redo();\n      if (result !== null) {\n        diagramContainerService.set(result!);\n      }\n    });\n  }\n\n  /**\n   * Save the current version of the diagram to localStorage and the redo/undo structure.\n   * @throws Error if diagram is not set.\n   */\n  public save(): void {\n    console.log('Caching')\n    if (this.diagram === undefined) {\n      throw new Error('You can not save whilst the diagram is not set!');\n    }\n\n    let serialisedDiagram = this.diagram.serialise();\n    this.list.add(serialisedDiagram);\n    // Todo: Make it so similar changes are merged. I.e., typing a word into a node counts as one undo/redo action.\n  }\n\n  /**\n   * Return the previous diagram from the redo/undo data structure if possible.\n   * @returns the previous version of the diagram, null if not available.\n   */\n  public undo(): Diagram | null {\n    if (this.diagram === undefined || this.list === undefined) {\n      throw new Error('You can not undo whilst the diagram is not set!');\n    }\n\n    let result = this.list.undo();\n    if (result === null) {\n      return null;\n    } else {\n      return deserialiseDiagram(result as SerialisedDiagram);\n    }\n  }\n\n  /**\n   * Return the diagram version after the current version from the redo/undo data structure if possible.\n   * @returns the next version if possible, null if not.\n   */\n  public redo(): Diagram | null {\n    if (this.diagram === undefined || this.list === undefined) {\n      throw new Error('You can not redo whilst the diagram is not set!');\n    }\n\n    let result = this.list.redo();\n    if (result === null) {\n      return null;\n    } else {\n      return deserialiseDiagram(result as SerialisedDiagram);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {DiagramContainerService} from \"../diagram-container.service\";\nimport {Diagram} from \"../../../model/diagram\";\nimport {deserialiseDiagram} from \"../../../serialisation/deserialise/deserialise-diagram\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  private currentID?: number;\n  public static readonly CACHE_PREFIX = 'diagram-cache-'\n  private get currentKey() {\n    return LocalStorageService.CACHE_PREFIX + this.currentID!;\n  }\n\n  // This setup must happen after the DOM is created. Therefore this logic can not be in the constructor.\n  // Setup is now called in ngAfterInit of the diagram component.\n  public setup() {\n    let allKeys = this.getAllDiagramKeys();\n    let allIDs = allKeys.map(key => parseInt(key.substr(LocalStorageService.CACHE_PREFIX.length)));\n\n    let currentHighest = 0;\n    console.log(allIDs);\n    for (let id of allIDs) {\n      if (id > currentHighest) {\n        currentHighest = id;\n      }\n    }\n\n    this.currentID = currentHighest + 1;\n  }\n\n  constructor(private diagramContainer: DiagramContainerService) {\n\n  }\n\n  public getAllDiagramKeys(): string[] {\n    let result = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      let key = localStorage.key(i) as string;\n      if (key.startsWith(LocalStorageService.CACHE_PREFIX)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  public getKeyDiagramPairs(): Array<[string, Diagram]> {\n    let result: Array<[string, Diagram]> = [];\n\n    for (let key of this.getAllDiagramKeys()) {\n      try {\n        result.push([key, deserialiseDiagram(JSON.parse(localStorage.getItem(key)!))])\n      } catch (ignored) {}\n    }\n\n    return result;\n  }\n\n  public removeKey(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  public save(): void {\n    console.log('Saving')\n    console.log(this.currentKey)\n    console.log(JSON.stringify(this.diagramContainer.get().serialise()))\n    localStorage.setItem(this.currentKey, JSON.stringify(this.diagramContainer.get().serialise()));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: '[arrow-marker]',\n  templateUrl: './arrow-marker.component.html',\n  styleUrls: ['./arrow-marker.component.scss']\n})\nexport class ArrowMarkerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg:marker id=\"end-small-filled-arrow\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n  <svg:path  d=\"M0,0 L0,6 L9,3 z\" fill=\"#000\" />\n</svg:marker>\n\n<svg:marker id=\"start-small-filled-arrow\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"\" markerUnits=\"strokeWidth\">\n  <svg:path  d=\"M0,0 L0,6 L9,3 z\" fill=\"#000\" />\n</svg:marker>\n\n<svg:marker id=\"end-big-unfilled-arrow\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"4\" orient=\"auto\" markerUnits=\"strokeWidth\">\n  <svg:path d=\"M0,0 L0,8 L9,4 z\" fill=\"white\" stroke=\"black\" stroke-width=\"0.5px\" />\n</svg:marker>\n\n<svg:marker id=\"start-big-unfilled-arrow\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"4\" orient=\"auto-start-reverse\" markerUnits=\"strokeWidth\">\n  <svg:path d=\"M0,0 L0,8 L9,4 z\" fill=\"white\" stroke=\"black\" stroke-width=\"0.5px\" />\n</svg:marker>\n<!--Need start and end diamonds because the relative Positioning does not work.-->\n<svg:marker id=\"start-filled-diamond\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto-start-reverse\" markerUnits=\"strokeWidth\">\n  <svg:path d=\"M 0 3 L 4.5 0 L 9 3 L 4.5 6 z\" fill=\"black\" stroke=\"black\" stroke-width=\"0.5px\"/>\n</svg:marker>\n\n<svg:marker id=\"end-filled-diamond\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n  <svg:path d=\"M 0 3 L 4.5 0 L 9 3 L 4.5 6 z\" fill=\"black\" stroke=\"black\" stroke-width=\"0.5px\"/>\n</svg:marker>\n\n<svg:marker id=\"start-unfilled-diamond\" viewbox=\"0 0 11 11\" markerUnits=\"strokeWidth\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto-start-reverse\" >\n  <svg:path d=\"M 0 3 L 4.5 0 L 9 3 L 4.5 6 z\" fill=\"white\" stroke=\"black\" stroke-width=\"0.5px\"/>\n</svg:marker>\n\n<svg:marker id=\"end-unfilled-diamond\" viewbox=\"0 0 11 11\" markerUnits=\"strokeWidth\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto\" >\n  <svg:path d=\"M 0 3 L 4.5 0 L 9 3 L 4.5 6 z\" fill=\"white\" stroke=\"black\" stroke-width=\"0.5px\"/>\n</svg:marker>\n\n\n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-special-character-selector',\n  templateUrl: './special-character-selector.component.html',\n  styleUrls: ['./special-character-selector.component.scss']\n})\nexport class SpecialCharacterSelectorComponent {\n  @Output() clickChar: EventEmitter<string> = new EventEmitter<string>();\n  active: number = 1;\n\n  readonly LC_GREEK1 = 'αβγδεζηθικλμν';\n  readonly LC_GREEK2 = 'ξοπρςστυφχψω';\n  readonly UC_GREEK1 = 'ΑΒΓΔΕΖΗΘΙΚΛΜΝ';\n  readonly UC_GREEK2 = 'ΞΟΠΡΣΤΥΦΧΨΩ';\n  readonly MATH1 = '∀∁∂∃∄∅∆∇∈∉'\n  readonly MATH2 = '∊∋∌∍∎∏∐∑−∓';\n\n  constructor() { }\n\n  handleClick(char: string) {\n    this.clickChar.emit(char);\n  }\n}\n","<div class=\"w-100\">\n  <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\n    <li [ngbNavItem]=\"1\">\n      <a ngbNavLink>Lowercase Greek</a>\n      <ng-template ngbNavContent>\n        <special-character-row [characters]=\"LC_GREEK1\" [charEmitter]=\"clickChar\"></special-character-row>\n        <special-character-row [characters]=\"LC_GREEK2\" [charEmitter]=\"clickChar\"></special-character-row>\n      </ng-template>\n    </li>\n    <li [ngbNavItem]=\"2\">\n      <a ngbNavLink>Uppercase Greek</a>\n      <ng-template ngbNavContent>\n        <div>\n          <special-character-row [characters]=\"UC_GREEK1\" [charEmitter]=\"clickChar\"></special-character-row>\n          <special-character-row [characters]=\"UC_GREEK2\" [charEmitter]=\"clickChar\"></special-character-row>\n        </div>\n      </ng-template>\n    </li>\n    <li [ngbNavItem]=\"3\">\n      <a ngbNavLink>Mathematics</a>\n      <ng-template ngbNavContent>\n        <special-character-row [characters]=\"MATH1\" [charEmitter]=\"clickChar\"></special-character-row>\n        <special-character-row [characters]=\"MATH2\" [charEmitter]=\"clickChar\"></special-character-row>\n      </ng-template>\n    </li>\n  </ul>\n  <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n</div>\n","<div *ngIf=\"node\">\n  <div class=\"form-group row px-3\">\n    <label class=\"w-25 col-form-label\">Width</label>\n    <div class=\"w-75\">\n      <input class=\"w-100\" type=\"number\" [(ngModel)]=\"node.width\">\n    </div>\n  </div>\n\n  <div class=\"form-group row px-3\">\n    <label class=\"w-25 col-form-label\">Height</label>\n    <div class=\"w-75\">\n      <input class=\"w-100\" type=\"number\" [(ngModel)]=\"node.height\">\n    </div>\n  </div>\n\n  <div class=\"form-group row px-3\">\n    <label class=\"w-25 col-form-label\" >Node Text<br><span class=\"text-secondary\">('\\n' = new line)</span></label>\n    <div class=\"w-75\">\n      <textarea class=\"form-control\" rows=\"5\" class=\"w-100\" [(ngModel)]=\"node.text\"></textarea>\n    </div>\n  </div>\n\n  <div class=\"form-group row px-3\">\n    <label class=\"w-25 col-form-label\" >Double Border</label>\n    <div class=\"w-75\">\n      <input type=\"checkbox\" [(ngModel)]=\"node.hasDoubleBorder\"></div>\n  </div>\n\n\n  <div  class=\"form-group row px-3\" *ngFor=\"let key of node.styleKeys\">\n    <label class=\"w-25 col-form-label\">{{key}}</label>\n    <div class=\"w-75\">\n      <input class=\"w-100\" type=\"text\" [(ngModel)]=\"node.styleObject[key]\">\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnChanges, OnInit, SimpleChange, SimpleChanges} from '@angular/core';\nimport {DeletionService} from \"../../services/deletion.service\";\nimport {Node} from \"../../../model/node/node\";\nimport {CachingService} from \"../../services/caching/caching.service\";\n\n@Component({\n  selector: 'app-node-editor',\n  templateUrl: './node-editor.component.html',\n  styleUrls: ['./node-editor.component.scss']\n})\nexport class NodeEditorComponent {\n  @Input() node?: Node;\n}\n","import {RectangleNode} from \"./rectangle-node\";\nimport {Position} from \"../position\";\n\nexport class ForkRejoinNode extends RectangleNode {\n  constructor(width: number, height: number, position: Position) {\n    super(width, height, position);\n    this.styleObject['fill'] = 'black';\n    this.styleObject['fill-opacity'] = '1';\n  }\n\n  public getAllOffsets(): Position[] {\n    let bigDimension = Math.max(this.width, this.height);\n    const POINT_AMOUNT = 5;\n\n    let result: Position[] = [];\n    for (let offset = 0; offset <= bigDimension; offset += (bigDimension / (POINT_AMOUNT - 1))) {\n      if (this.width > this.height) {\n        result.push(new Position(offset, 0), new Position(offset, this.height));\n      } else {\n        result.push(new Position(0, offset), new Position(this.width, offset));\n      }\n    }\n\n    return result;\n  }\n\n  public getNodeTypeName(): string {\n    return 'ForkRejoinNode';\n  }\n\n  public getDeepCopy(): ForkRejoinNode {\n    return new ForkRejoinNode(this.width, this.height, this.position.getDeepCopy());\n  }\n}\n","import {SerialisedLabel} from \"../serialised-data-structures/serialised-label\";\nimport {EdgeLocation, Label} from \"../../model/label\";\nimport {deserialisePosition} from \"./deserialise-position\";\nimport {Position} from \"../../model/position\";\n\nexport function deserialiseLabel(serialisedLabel: SerialisedLabel): Label {\n  // todo: fix serialisation of labels\n  return new Label(\n    serialisedLabel.value,\n    serialisedLabel.edgeLocation as EdgeLocation,\n    deserialisePosition(serialisedLabel.offset)\n  );\n}\n","export class Lifeline {\n  public horizontalPosition: number;\n  public name: string;\n\n  public static readonly RENDERING_CONSTANTS = {\n    'actorHeight': 75,\n    'actorWidth': 150,\n    'actorYOffset': 20,\n    'actorBetweenOffset': 20,\n    'activeBlockWidth': 16\n  }\n\n\n  constructor(horizontalPosition: number, name: string) {\n    this.horizontalPosition = horizontalPosition;\n    this.name = name;\n  }\n\n  public connections: number[] = [];\n}\n","import {EventEmitter, Injectable} from \"@angular/core\";\nimport {Node} from \"../../model/node/node\";\nimport {Diagram} from \"../../model/diagram\";\nimport {Edge} from \"../../model/edge\";\nimport {CachingService} from \"./caching/caching.service\";\nimport {SelectionService} from \"./selection.service\";\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\nimport {EditService} from \"./edit.service\";\nimport {DiagramContainerService} from \"./diagram-container.service\";\nimport {Label} from \"../../model/label\";\n\n@Injectable({\n  providedIn: \"root\"\n})\n/**\n * Service for deleting edges, nodes and unstructured edges.\n * This deletion happens both in the underlying data structure and in the corresponding components.\n * Before this service can be used the Diagram object is acts upon should be set using setDiagram.\n */\nexport class DeletionService {\n  private diagram: Diagram;\n  private selected: Array<Edge | Node | Label> = [];\n\n  constructor(private cachingService: CachingService,\n              private selectionService: SelectionService,\n              keyboardEventCallerService: KeyboardEventCallerService,\n              diagramContainerService: DiagramContainerService,\n              private editService: EditService) {\n    this.diagram = diagramContainerService.get();\n    diagramContainerService.diagramObservable.subscribe(d => this.diagram = d);\n    selectionService.selectedObservable.subscribe(value => this.selected = value);\n\n    keyboardEventCallerService.addCallback(['Delete', 'keydown', 'any'], ignored => this.deleteSelected());\n  }\n\n  /**\n   * Delete a node and any connected edges from the diagram data structure and its component from the DOM.\n   * @param node Node to be deleted.\n   */\n  public deleteNode(node: Node, cache: boolean = true) {\n    this.diagram.edges.forEach(edge => {\n      if (edge.startNode === node) {\n        edge.startPosition = edge.getStartPosition();\n        edge.startNode = undefined;\n      }\n      if (edge.endNode === node) {\n        edge.endPosition = edge.getEndPosition();\n        edge.endNode = undefined;\n      }\n    });\n\n    const index = this.diagram.nodes.indexOf(node);\n    if (index === -1) {\n      throw new Error(\"Trying to delete a node that can not be found in the list of nodes!\");\n    } else {\n      this.diagram.nodes.splice(index, 1);\n    }\n\n    if (this.selected.includes(node)) {\n      this.selectionService.deselect();\n    }\n    if (cache) {\n      this.cachingService.save();\n    }\n  }\n\n  /**\n   * Delete an edge from the diagram data structure and its component from the DOM.\n   * @param edge Edge to be deleted.\n   */\n  public deleteEdge(edge: Edge, cache: boolean = true) {\n    const index = this.diagram!.edges.indexOf(edge);\n\n    if (index === -1) {\n      throw new Error(\"Trying to delete an edge that can not be found in the list of edges!\");\n    } else {\n      this.diagram.edges.splice(index, 1);\n    }\n\n    if (this.selected.includes(edge)) {\n      this.selectionService.deselect();\n    }\n    if (cache) {\n      this.cachingService.save();\n    }\n  }\n\n  public deleteLabel(label: Label, cache: boolean = true) {\n    for (let edge of this.diagram.edges) {\n      if (edge.startLabel === label) {\n        edge.startLabel = undefined;\n      } else if (edge.middleLabel === label) {\n        edge.middleLabel = undefined;\n      } else if (edge.endLabel === label) {\n        edge.endLabel = undefined;\n      }\n    }\n\n    if (cache) {\n      this.cachingService.save();\n    }\n  }\n\n  public deleteSelected() {\n    this.selected.forEach(selectedElem => {\n      if (selectedElem instanceof Node) {\n        if (!this.editService.isActive()) {\n          this.deleteNode(selectedElem as Node, false);\n        }\n      } else if (selectedElem instanceof Edge) {\n        this.deleteEdge(selectedElem as Edge, false);\n      } else if (selectedElem instanceof Label) {\n        this.deleteLabel(selectedElem as Label, false);\n      }\n    });\n    this.cachingService.save();\n  }\n}\n","import {Position} from \"../../model/position\";\n// import {FormattedElement} from \"./reposition.service\";\nimport {Injectable} from \"@angular/core\";\nimport {Deactivatable} from \"./deactivatable\";\nimport {SnapService} from \"./snap.service\";\nimport {Node} from \"../../model/node/node\";\nimport {CachingService} from \"./caching/caching.service\";\nimport {MousePositionTransformService} from \"./mouse-position-transform.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResizeService implements Deactivatable {\n  private node?: Node;\n  private startPosition?: Position;\n  private resizePointIndex?: number;\n  constructor(private snapService: SnapService,\n              private cachingService: CachingService,\n              private mousePositionTransformService: MousePositionTransformService) { }\n\n  public isActive(): boolean {\n    return this.node !== undefined;\n  }\n\n  public activate(current: Node, resizePointIndex: number): void {\n    this.node = current;\n    this.startPosition = current.position;\n    this.resizePointIndex = resizePointIndex;\n  }\n\n\n  public update(endPosition: Position): void {\n    if (!this.isActive()) {\n      throw new Error('Calling update while the node and startPosition are undefined. ' +\n        'Service was probably not activated.');\n    }\n\n    switch (this.resizePointIndex) {\n      case 0: // up\n        this.handleUp(endPosition);\n        break;\n      case 1: //up, right\n        this.handleRight(endPosition)\n        this.handleUp(endPosition);\n        break;\n      case 2:  //right\n        this.handleRight(endPosition);\n        break;\n      case 3: // down,right\n        this.handleRight(endPosition);\n        this.handleDown(endPosition)\n        break;\n      case 4:\n        this.handleDown(endPosition);\n        break;\n      case 5:\n        this.handleDown(endPosition);\n        this.handleLeft(endPosition);\n        break;\n      case 6:\n        this.handleLeft(endPosition);\n        break;\n      case 7:\n        this.handleLeft(endPosition);\n        this.handleUp(endPosition);\n    }\n  }\n\n  private handleUp(endPosition: Position): void {\n    this.node!.height = Math.round((this.node!.height - this.snapService.snapIfApplicable(Position.subtract(endPosition, this.node!.position), 10).y)/10) * 10;\n    this.node!.position.y = this.snapService.snapIfApplicable(endPosition,10).y;\n  }\n\n  private handleRight(endPosition: Position): void {\n    this.node!.width = this.snapService.snapIfApplicable(Position.subtract(endPosition, this.node!.position), 10).x;\n  }\n\n  private handleDown(endPosition: Position): void {\n    this.node!.height = this.snapService.snapIfApplicable(Position.subtract(endPosition, this.node!.position), 10).y;\n  }\n\n  private handleLeft(endPosition: Position): void {\n    this.node!.width = Math.round((this.node!.width - this.snapService.snapIfApplicable(Position.subtract(endPosition, this.node!.position), 10).x)/10) * 10;\n    this.node!.position.x = this.snapService.snapIfApplicable(endPosition,10).x;\n  }\n\n  public deactivate(): void {\n    if (this.isActive()) {\n      this.cachingService.save();\n    }\n    this.node = undefined;\n    this.startPosition = undefined;\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\" id=\"modal-title\">Advanced node formatting</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div *ngIf=\"node\">\n    <div class=\"form-group row px-3\">\n      <label class=\"w-25 col-form-label\">Width</label>\n      <div class=\"w-75\">\n        <input class=\"w-100 form-control\" type=\"number\" [(ngModel)]=\"node.width\" (ngModelChange)=\"cache()\">\n      </div>\n    </div>\n    <div class=\"form-group row px-3\">\n      <label class=\"w-25 col-form-label\">Height</label>\n      <div class=\"w-75\">\n        <input class=\"w-100 form-control\" type=\"number\" [(ngModel)]=\"node.height\" (ngModelChange)=\"cache()\">\n      </div>\n    </div>\n    <div class=\"form-group row px-3\">\n      <label class=\"w-25 col-form-label\" >Node Text</label>\n      <div class=\"w-75\">\n        <textarea #nodeText class=\"form-control from-control-text w-70\" rows=\"4\" [(ngModel)]=\"node.text\" (ngModelChange)=\"cache()\"></textarea>\n      </div>\n    </div>\n    <div class=\"w-100\">\n      <app-special-character-selector (clickChar)=\"addChar($event)\"></app-special-character-selector>\n    <div class=\"form-group row px-3\">\n      <label class=\"w-25 col-form-label\" >Double Border</label>\n      <div class=\"w-75\">\n        <input class=\"form-control form-check\" type=\"checkbox\" [(ngModel)]=\"node.hasDoubleBorder\" (ngModelChange)=\"cache()\"></div>\n    </div>\n\n\n<!--    <div  class=\"form-group row px-3\" *ngFor=\"let key of node.styleKeys\">-->\n<!--      <label class=\"w-25 col-form-label\">{{key}}</label>-->\n<!--      <div class=\"w-75\">-->\n<!--        <input class=\"w-100\" type=\"text\" [(ngModel)]=\"node.styleObject[key]\" (ngModelChange)=\"cache()\">-->\n<!--      </div>-->\n<!--    </div>-->\n    <div class=\"form-group row px-3\">\n      <label class=\"w-25 col-form-label\">Color</label>\n      <div class=\"w-75\">\n        <input type=\"color\" class=\"w-100\" [(ngModel)]=\"node.styleObject['fill']\">\n      </div>\n    </div>\n    <div class=\"form-group row px-3\">\n      <label class=\"w-25 col-form-label\">Opacity</label>\n      <div class=\"w-75\">\n        <input type=\"range\" class=\"w-100\" min=\"0\" max=\"1\" step=0.05 [(ngModel)]=\"node.styleObject['fill-opacity']\" >\n      </div>\n    </div>\n  </div>\n\n</div>\n<div class=\"modal-footer\">\n  <div (click)=\"modal.close('Ok click')\">\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\">Delete</button>\n  </div>\n  <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('Ok click')\">Save</button>\n</div>\n\n\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {Node} from \"../../model/node/node\";\nimport {DeletionService} from \"../services/deletion.service\";\nimport {CachingService} from \"../services/caching/caching.service\";\n\n@Component({\n  selector: 'app-formatting-modal',\n  templateUrl: './formatting-modal.component.html',\n  styleUrls: ['./formatting-modal.component.scss']\n})\nexport class FormattingModalComponent {\n  public node?: Node;\n  @ViewChild('nodeText') nodeTextElemRef!: ElementRef;\n\n  constructor(public modal: NgbActiveModal,\n              private selectionService: SelectionService,\n              private deletionService: DeletionService,\n              private cachingService: CachingService) {\n    this.node = this.selectionService.getNode();\n    selectionService.deselect();\n  }\n\n  delete(): void {\n    if (this.node) {\n      this.deletionService.deleteNode(this.node);\n      this.node = undefined;\n    } else {\n      throw new Error(\"Trying to delete an node from the node edit menu whilst no node is selected.\");\n    }\n  }\n\n  cache() {\n    this.cachingService.save();\n  }\n\n  addChar(char: string) {\n    if (this.node) {\n      this.node.text += char;\n    }\n  }\n}\n\n\n\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Position} from \"../../model/position\";\nimport {DiagramComponent} from \"../diagram/diagram.component\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZoomService {\n  private x: number = 0;\n  private y: number = 0;\n  private width: number = window.innerWidth || document.body.clientWidth;\n  private height: number = window.innerHeight - DiagramComponent.NAV_HEIGHT || document.body.clientHeight - DiagramComponent.NAV_HEIGHT;\n  private currentZoomFactor: number = 1;\n  private zoomStep: number = 1.1;\n  private zoomExponent = 0;\n  public updateEmitter: EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  public getViewBox(): string {\n    return \"\" + this.x + \" \" + this.y + \" \" + this.width * this.currentZoomFactor + \" \" + this.height * this.currentZoomFactor;\n  }\n\n  public getCurrentZoomFactor(): number {\n    return this.currentZoomFactor;\n  }\n\n  public updateZoomFactor(zoomIn: boolean): void{\n    if (zoomIn) {\n      this.zoomExponent--;\n    } else {\n      this.zoomExponent++;\n    }\n    this.currentZoomFactor = Math.pow(this.zoomStep, this.zoomExponent);\n    this.updateEmitter.emit();\n  }\n\n  public setXY(x: number, y: number) {\n    this.x = max(0, this.x + x);\n    this.y = max(0, this.y + y);\n    this.updateEmitter.emit();\n  }\n\n  public getXY(): Position {\n    return new Position(this.x, this.y);\n  }\n\n  public getZoomedWidth(): number {\n    return this.width * this.currentZoomFactor;\n  }\n\n  public getZoomedHeight(): number {\n    return this.height * this.currentZoomFactor;\n  }\n\n  public reset() {\n    this.zoomExponent = 0;\n    this.currentZoomFactor = Math.pow(this.zoomStep, this.zoomExponent);\n    this.updateEmitter.emit();\n    this.x = 0;\n    this.y = 0;\n  }\n}\n\nfunction max(a: number, b: number): number {\n  return a < b ? b : a;\n}\n","import {Node} from \"./node\";\nimport {Position} from \"../position\";\n\nexport class EllipseNode extends Node {\n  constructor(width: number, height: number, position: Position) {\n    super(width, height, position);\n  }\n\n  protected getAllOffsets(): Position[] {\n    return [\n      new Position(this.width / 2, 0),\n      new Position(this.width / 2, this.height),\n      new Position(0, this.height / 2),\n      new Position(this.width, this.height / 2)\n    ];\n  }\n\n  public getDeepCopy(): Node {\n    let result =  new EllipseNode(this.width, this.height, this.position.getDeepCopy());\n    result.text = this.text;\n    result.hasDoubleBorder = this.hasDoubleBorder;\n    return result;\n  }\n\n  public getNodeTypeName(): string {\n    return 'EllipseNode';\n  }\n}\n","<div class=\"d-flex btn-group\" role=\"group\" aria-label=\"Basic example\">\n  <a *ngFor=\"let char of charArray\"\n     type=\"button\"\n     class=\"btn btn-outline-secondary flex-grow-1 mb-1\"\n     (click)=\"callback(char)\">\n    {{char}}\n  </a>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'special-character-row',\n  templateUrl: './special-character-row.component.html',\n  styleUrls: ['./special-character-row.component.scss']\n})\nexport class SpecialCharacterRowComponent {\n  @Input() characters!: string;\n  @Input() charEmitter!: EventEmitter<string>;\n\n  get charArray() {\n    let result = [];\n    for (let i = 0; i < this.characters.length; i++) {\n      result.push(this.characters.charAt(i));\n    }\n    return result;\n  }\n\n  callback(char: string) {\n    this.charEmitter.emit(char);\n  }\n}\n","import {Injectable, Renderer2, RendererFactory2} from '@angular/core';\nimport {Node} from \"../../model/node/node\";\nimport {Edge} from \"../../model/edge\";\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\nimport {Label} from \"../../model/label\";\nimport {CachingService} from \"./caching/caching.service\";\nimport {SelectionService} from \"./selection.service\";\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditService {\n  private readonly editElement: BehaviorSubject<Node | Label | undefined> = new BehaviorSubject<Node|Label|undefined>(undefined);\n  public readonly editElementObservable = this.editElement.asObservable();\n\n  private rowIndex?: number;\n  private charIndex?: number;\n\n  constructor(private selectionService: SelectionService, private cachingService: CachingService) {\n  }\n\n  public isActive(): boolean {\n    return this.editElement.getValue() !== undefined;\n  }\n\n  public activate(editElement: Label | Node) {\n    this.editElement.next(editElement);\n    this.rowIndex = 0;\n    this.charIndex = 0;\n  }\n\n  public includeCursor(s: string) {\n    let rows = s.split('\\\\n');\n    rows = rows.map((row, index) => {\n      if (index === this.rowIndex) {\n        return row.slice(0, this.charIndex!) + '|' + row.slice(this.charIndex!)\n      }\n      return row;\n    });\n    return rows.join('\\\\n');\n  }\n\n  private setValue(s: string) {\n    if (!this.isActive()) { throw new Error(\"Can not get when unactivated. \") }\n    let element = this.editElement.getValue()\n    if (element instanceof Node) {\n      element.text = s;\n    } else if (element instanceof Label) {\n      element.value = s;\n    }\n  }\n\n  private get value(): string {\n    if (!this.isActive()) { throw new Error(\"Can not get when unactivated. \") }\n    let value = this.editElement.getValue();\n    return value instanceof Node ? value.text : value!.value;\n  }\n\n  public handleKeyPressed(key: string, controlPressed: boolean): void {\n    if (!this.isActive()) {\n      throw new Error();\n    }\n    console.log(key)\n    if (key.length === 1) {\n      this.addChar(key);\n    } else if (key === 'Escape' || (key === 'Enter' && controlPressed)) {\n      this.deactivate();\n      this.selectionService.deselect();\n    } else if (key === 'Backspace') {\n      this.backspace();\n    } else if (key === 'Enter') {\n      this.addLine();\n    } else if (key === 'ArrowUp') {\n      this.previousRowIfPossible();\n    } else if (key === 'ArrowDown') {\n      this.nextRowIfPossible();\n    } else if (key === 'ArrowRight') {\n      this.nextCharIfPossible();\n    } else if (key === 'ArrowLeft') {\n      this.previousCharIfPossible();\n    }\n  }\n\n  private get rows(): string[] {\n    return this.value.split('\\\\n');\n  }\n\n  private get lineAmount(): number {\n    return this.rows.length;\n  }\n\n  private nextRowIfPossible() {\n    if (this.rowIndex! >= (this.lineAmount - 1)) {\n      return;\n    }\n\n    this.rowIndex!++;\n    this.charIndex = this.rows[this.rowIndex!].length;\n  }\n\n  private previousRowIfPossible() {\n    if (this.rowIndex! <= 0) {\n      return;\n    }\n\n    this.rowIndex!--;\n    this.charIndex = this.rows[this.rowIndex!].length;\n  }\n\n  private previousCharIfPossible() {\n    if (this.charIndex! !== 0) {\n      this.charIndex!--;\n    }\n  }\n\n  private nextCharIfPossible() {\n    if (this.charIndex! !== this.rows[this.rowIndex!].length) {\n      this.charIndex!++;\n    }\n  }\n\n  private addLine() {\n    if (this.rowIndex! === this.lineAmount - 1) {\n      this.setValue(this.value + '\\\\n');\n    } else {\n      this.setValue([\n        this.rows.slice(0, this.rowIndex! + 1),\n        '',\n        this.rows.slice(this.rowIndex! + 1)\n      ].join('\\\\n'));\n    }\n\n    this.rowIndex!++;\n    this.charIndex = 0;\n  }\n\n  private backspace() {\n    // Remove row if it is empty, unless it is the last row.\n    if (this.rowIndex! !== 0 && this.rows[this.rowIndex!].length === 0 && this.rows.length !== 1) {\n      let newRows = this.rows.map(x => x);\n      newRows.splice(this.rowIndex!, 1);\n      this.setValue(newRows.join('\\\\n'));\n      this.rowIndex!--;\n      this.charIndex = this.rows[this.rowIndex!].length;\n      console.log(newRows);\n    } else if (this.charIndex! !== 0) {\n      console.log('lower')\n      let newRows = this.rows.map((row, index) => {\n        if (index === this.rowIndex!) {\n          return row.substr(0, this.charIndex! - 1) + row.substr(this.charIndex!);\n        }\n        return row;\n      });\n      console.log(newRows)\n      this.charIndex!--;\n\n      this.setValue(newRows.join('\\\\n'));\n    }\n  }\n\n  private addChar(char: string) {\n    let newRows = this.rows.map((row, index) => {\n      if (index === this.rowIndex!) {\n        return row.substr(0, this.charIndex!) + char + row.substr(this.charIndex!);\n      }\n      return row;\n    });\n    console.log(newRows)\n    this.charIndex!++;\n    this.setValue(newRows.join('\\\\n'));\n  }\n\n  public deactivate() {\n    this.charIndex = undefined;\n    this.rowIndex = undefined;\n    this.editElement.next(undefined);\n    this.cachingService.save();\n  }\n}\n","<svg:path *ngIf=\"edge\"\n          [attr.d]=\"edge.getPointString()\"\n          fill=\"none\"\n          [ngStyle]=\"styleObject || {}\"\n          [attr.marker-end]=\"edge.getEndMarker()\"\n          [attr.marker-start]=\"edge.getStartMarker()\"\n          [attr.stroke-dasharray]=\"edge.getLineStyleString()\">\n</svg:path>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Edge} from \"../../../model/edge\";\n\n@Component({\n  selector: '[arc-render-component]',\n  templateUrl: './arc-render.component.html',\n})\nexport class ArcRenderComponent {\n  @Input() edge!: Edge\n  @Input() styleObject?: { [key: string]: string | number };\n}\n","import {SerialisedClassNode, SerialisedNode} from \"../serialised-data-structures/serialised-node\";\nimport {Node} from \"../../model/node/node\";\nimport {RectangleNode} from \"../../model/node/rectangle-node\";\nimport {deserialisePosition} from \"./deserialise-position\";\nimport {Position} from \"../../model/position\";\nimport {EllipseNode} from \"../../model/node/ellipse-node\";\nimport {DiamondNode} from \"../../model/node/diamond-node\";\nimport {ForkRejoinNode} from \"../../model/node/fork-rejoin-node\";\nimport {ClassNode} from \"../../model/node/class-node\";\nimport {ActorNode} from \"../../model/node/actor-node\";\nimport {HourglassNode} from \"../../model/node/hourglass-node\";\n\nfunction deserialiseGeneric(serialisedNode: SerialisedNode, constructor: GenericNodeConstructor): Node {\n  let result = new constructor(serialisedNode.width, serialisedNode.height,\n    deserialisePosition(serialisedNode.position));\n  result.styleObject = serialisedNode.styleObject;\n  result.text = serialisedNode.text;\n  result.hasDoubleBorder = serialisedNode.hasDoubleBorder;\n  return result;\n}\n\nfunction deserialiseClassNode(serialisedClassNode: SerialisedClassNode): ClassNode {\n  let result = new ClassNode(serialisedClassNode.width, serialisedClassNode.height,\n    deserialisePosition(serialisedClassNode.position));\n  result.text = serialisedClassNode.text;\n  result.firstLine = serialisedClassNode.firstLine;\n  result.secondLine = serialisedClassNode.secondLine;\n  result.styleObject = serialisedClassNode.styleObject;\n  return result;\n}\n\nexport function deserialiseNode(serialisedNode: SerialisedNode): Node {\n  switch (serialisedNode.type) {\n    case 'RectangleNode':\n      return deserialiseGeneric(serialisedNode, RectangleNode);\n    case 'EllipseNode':\n      return deserialiseGeneric(serialisedNode, EllipseNode);\n    case 'DiamondNode':\n      return deserialiseGeneric(serialisedNode, DiamondNode);\n    case 'ActorNode':\n      return deserialiseGeneric(serialisedNode, ActorNode);\n    case 'HourglassNode':\n      return deserialiseGeneric(serialisedNode, HourglassNode);\n    case 'ForkRejoinNode':\n      return deserialiseGeneric(serialisedNode, ForkRejoinNode);\n    case 'ClassNode':\n      return deserialiseClassNode(serialisedNode as SerialisedClassNode);\n  }\n\n  throw new Error(\"Node of unknown type and the node can therefore not be deserialised.\");\n}\n\ntype GenericNodeConstructor = {\n  new (width: number, height: number, position: Position): Node;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {DiagramContainerService} from \"../services/diagram-container.service\";\nimport {Diagram} from \"../../model/diagram\";\n\n@Component({\n  selector: 'app-clear-diagram-modal',\n  templateUrl: './clear-diagram-modal.component.html',\n  styleUrls: ['./clear-diagram-modal.component.scss']\n})\nexport class ClearDiagramModalComponent {\n\n  constructor(public modal: NgbActiveModal,\n              private diagramContainer: DiagramContainerService) { }\n\n  clearDiagram(): void {\n    this.diagramContainer.set(new Diagram());\n  }\n}\n","<div class=\"modal-header alert-danger text-center\">\n  <h4 class=\"modal-title\" id=\"modal-title\">Delete Entire Diagram</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <p>Are you sure you want to delete this diagram? This action is not reversible.</p>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\"\n          ngbAutofocus\n          class=\"btn btn-outline-secondary\"\n          (click)=\"modal.close('Ok click')\">\n    Cancel\n  </button>\n  <button type=\"button\"\n          ngbAutofocus\n          class=\"btn btn-outline-danger\"\n          (click)=\"modal.close('Ok click'); clearDiagram()\">\n    Delete\n  </button>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {HourglassNode} from \"../../../model/node/hourglass-node\";\nimport {Position} from \"../../../model/position\";\n\n@Component({\n  selector: '[hourglass-node-render]',\n  templateUrl: './hourglass-node-render.component.html',\n})\nexport class HourglassNodeRenderComponent {\n  @Input() node!: HourglassNode;\n\n  getPoints() {\n    return [\n      Position.zero(),\n      new Position(this.node.width, 0),\n      new Position(0, this.node.height),\n      new Position(this.node.width, this.node.height),\n      Position.zero()\n    ].map(pos => Position.add(pos, this.node.position))\n     .map(pos => pos.toString(',', ' ')).join();\n  }\n}\n","<svg:polyline [ngStyle]=\"node.styleObject\"\n              [attr.points]=\"getPoints()\"/>\n<svg:g below-node-text [node]=\"node\"/>\n","import {AfterViewInit, Component} from '@angular/core';\nimport {RepositionService} from \"../services/reposition.service\";\nimport {Mode, ModeService} from \"../services/mode.service\";\nimport {EdgeCreationService} from \"../services/edge-creation.service\";\nimport {DeletionService} from \"../services/deletion.service\";\nimport {CreationTypeSelectionService} from \"../services/creation-type-selection.service\";\nimport {Node} from \"../../model/node/node\";\nimport {ResizeService} from \"../services/resize.service\";\nimport {deserialiseDiagram} from \"../../serialisation/deserialise/deserialise-diagram\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {CachingService} from \"../services/caching/caching.service\";\nimport {SerialisedDiagram} from \"../../serialisation/serialised-data-structures/serialised-diagram\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {Diagram} from \"../../model/diagram\";\nimport {Edge} from \"../../model/edge\";\nimport {Position} from \"../../model/position\";\nimport {CopyPasteService} from \"../services/copy-paste.service\";\nimport {DragDropCreationService} from \"../services/drag-drop-creation.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {UploadService} from \"../services/upload.service\";\nimport {DragSelectionService} from \"../services/drag-selection.service\";\nimport {ZoomService} from \"../services/zoom.service\";\nimport {MousePositionTransformService} from \"../services/mouse-position-transform.service\";\nimport {DiagramContainerService} from \"../services/diagram-container.service\";\nimport {LocalStorageService} from \"../services/caching/local-storage.service\";\nimport {LensOffsetService} from \"../services/lens-offset.service\";\nimport {LabelRepositionService} from \"../services/label-reposition.service\";\nimport {AppComponent} from \"../app.component\";\nimport {FixedPointRepositioner} from \"../services/edge-reposition/fixed-point-repositioner\";\nimport {StartEndRepositioner} from \"../services/edge-reposition/start-end-repositioner\";\nimport {liesOnSegment} from \"../services/edge-reposition/lies-on-segment\";\n\n@Component({\n  selector: 'app-diagram',\n  templateUrl: './diagram.component.html',\n  styleUrls: ['./diagram.component.scss']\n})\nexport class DiagramComponent implements AfterViewInit {\n  public static readonly NAV_HEIGHT = 50;\n  public diagram: Diagram;\n  public width?: number;\n  public height?: number;\n  mode: Mode;\n\n  constructor(private sanitizer: DomSanitizer,\n              private diagramContainer: DiagramContainerService,\n              private repositionService: RepositionService,\n              private fixedPointRepositioner: FixedPointRepositioner,\n              private startEndRepositioner: StartEndRepositioner,\n              private modeService: ModeService,\n              private edgeCreationService: EdgeCreationService,\n              private deletionService: DeletionService,\n              private creationTypeSelectionService: CreationTypeSelectionService,\n              private resizeService: ResizeService,\n              private cachingService: CachingService,\n              private selectionService: SelectionService,\n              private copyPasteService: CopyPasteService,\n              private dragDropCreationService: DragDropCreationService,\n              private modalService: NgbModal,\n              private uploadService: UploadService,\n              private dragSelectionService: DragSelectionService,\n              public zoomService: ZoomService,\n              private localStorageService: LocalStorageService,\n              private mousePositionTransformService: MousePositionTransformService,\n              private lensOffsetService: LensOffsetService,\n              private labelRepositionService: LabelRepositionService,\n              private appComponent: AppComponent) {\n\n\n    this.width = window.innerWidth;\n    this.height = window.innerHeight - DiagramComponent.NAV_HEIGHT;\n    document.documentElement.style.overflow = 'hidden';  // firefox, chrome\n    // document.body.scroll = \"no\"; // ie only\n    this.diagram = diagramContainer.get();\n    diagramContainer.diagramObservable.subscribe(diagram => this.diagram = diagram);\n\n    this.modeService.modeObservable.subscribe((mode: Mode) => this.mode = mode);\n    this.mode = modeService.getLatestMode();\n\n    edgeCreationService.newEdgeEmitter.subscribe((newEdge: Edge) => {\n      this.diagram.edges.push(newEdge);\n      this.cachingService.save();\n    });\n\n    copyPasteService.pasteEmitter.subscribe((nodeOrEdge: Node | Edge) => {\n      if (nodeOrEdge instanceof Node) {\n        this.diagram.nodes.push(nodeOrEdge as Node);\n      } else {\n        this.diagram.edges.push(nodeOrEdge as Edge);\n      }\n      this.cachingService.save();\n    });\n\n    dragDropCreationService.createdEmitter.subscribe((edgeOrNode: Edge | Node) => {\n      if (edgeOrNode instanceof Edge) {\n        this.diagram.edges.push(edgeOrNode);\n      } else {\n        this.diagram.nodes.push(edgeOrNode);\n      }\n\n      this.cachingService.save();\n    });\n  }\n\n  ngAfterViewInit() {\n    if (this.diagram) {\n      this.localStorageService.setup();\n    }\n  }\n\n  handleMouseUp(event: MouseEvent): void {\n    if (this.repositionService.isActive()) {\n      this.repositionService.deactivate();\n    } else if (this.fixedPointRepositioner.isActive()) {\n      this.fixedPointRepositioner.deactivate()\n    } else if (this.resizeService.isActive()) {\n      this.resizeService.deactivate()\n    } else if (this.dragDropCreationService.isActive()) {\n      this.dragDropCreationService.create();\n    } else if (this.edgeCreationService.isActive()) {\n      this.edgeCreationService.cancel();\n    } else if (this.dragSelectionService.isActive()) {\n      this.dragSelectionService.deactivate();\n    } else if (this.lensOffsetService.isActive()) {\n      this.lensOffsetService.deactivate();\n    } else if (this.labelRepositionService.isActive()) {\n      this.labelRepositionService.deactivate();\n    } else if (this.startEndRepositioner.isActive()) {\n      this.startEndRepositioner.deactivate();\n    }\n  }\n\n  handleMouseMove(event: MouseEvent) {\n    let fullyTransformed = this.mousePositionTransformService.transformPosition(new Position(event.x, event.y));\n    let zoomedPos = this.mousePositionTransformService.transFormZoomAndMenubar(new Position(event.x, event.y))\n\n    if (this.repositionService.isActive()) {\n      this.repositionService.update(fullyTransformed); //works\n    } else if (this.fixedPointRepositioner.isActive()) {\n      this.fixedPointRepositioner.update(fullyTransformed); //works\n    } else if (this.edgeCreationService.isActive()) {\n      this.edgeCreationService.endPreview = fullyTransformed; //works\n    } else if (this.resizeService.isActive()) {\n      this.resizeService.update(fullyTransformed); //works\n    } else if (this.dragDropCreationService.isActive()) {\n      this.dragDropCreationService.update(fullyTransformed); //works\n    } else if (this.dragSelectionService.isActive()) {\n      this.dragSelectionService.update(fullyTransformed); //idk\n    } else if (this.lensOffsetService.isActive()) {\n      this.lensOffsetService.update(zoomedPos); //works\n    } else if (this.labelRepositionService.isActive()) {\n      this.labelRepositionService.update(fullyTransformed);\n    } else if (this.startEndRepositioner.isActive()) {\n      this.startEndRepositioner.update(fullyTransformed);\n    }\n  }\n\n  handleDoubleClick(event: MouseEvent) {\n  }\n\n  handleKeyPressed(event: KeyboardEvent): void {\n    const SELECT_KEY = \"1\";\n    const CREATE_KEY = \"2\";\n    const MOVE_KEY = \"3\";\n\n    if (event.ctrlKey) {\n      switch (event.key) {\n        case SELECT_KEY :\n          this.modeService.setMode(Mode.Select);\n          break;\n        case CREATE_KEY:\n          this.modeService.setMode(Mode.Create);\n          break;\n        case MOVE_KEY:\n          this.modeService.setMode(Mode.Move);\n          break;\n      }\n    }\n  }\n\n  restore() {\n    let result: null | string = localStorage.getItem(CachingService.LOCAL_STORAGE_KEY);\n    if (result === null) {\n      alert('No diagram stored in local storage');\n    } else {\n      try {\n        let diagram: Diagram = deserialiseDiagram(JSON.parse(result as string) as SerialisedDiagram);\n        this.diagramContainer.set(diagram);\n      } catch (e) {\n        alert('Could not restore diagram from local storage');\n      }\n    }\n  }\n\n  handleMouseDown(event: MouseEvent) {\n    let pos = this.mousePositionTransformService.transformPosition(new Position(event.x, event.y));\n    if (event.shiftKey) {\n      this.dragSelectionService.activate(pos);\n    } else if (event.ctrlKey) {\n      // Check that no node or edge was double clicked.\n      for (let node of this.diagram.nodes) {\n        let nodeStart = node.position.getDeepCopy();\n        let nodeEnd = Position.add(node.position, new Position(node.width, node.height));\n        if (Position.liesBetween(nodeStart, pos, nodeEnd)) {\n          return;\n        }\n      }\n\n      for (let edge of this.diagram.edges) {\n        let allPoints = edge.getAllPoints();\n        for (let i = 0; i < allPoints.length - 1; i++) {\n          if (liesOnSegment(pos, allPoints[i], allPoints[i + 1])) {\n            return;\n          }\n        }\n      }\n\n      this.lensOffsetService.activate(this.mousePositionTransformService.transFormZoomAndMenubar(new Position(event.x, event.y)));\n    }\n  }\n}\n","<div (keyup)=\"handleKeyPressed($event)\">\n\n  <app-nav-bar></app-nav-bar>\n\n  <div style=\"overflow: hidden\">\n    <svg [attr.width]=\"width\"\n         [attr.height]=\"height\"\n         [attr.viewBox]=\"zoomService.getViewBox()\"\n         (mousedown)=\"handleMouseDown($event)\"\n         (mouseup)=\"handleMouseUp($event)\"\n         (mousemove)=\"handleMouseMove($event)\"\n         (dblclick)=\"handleDoubleClick($event)\"\n         id=\"diagram\"\n         style=\"overflow: hidden\">\n      <g grid-overlay></g>\n      <g drag-drop-preview></g>\n      <g new-edge-preview></g>\n      <defs arrow-marker></defs>\n\n      <g *ngFor=\"let node of diagram.nodes\" node-component [node]=\"node\"/>\n\n      <g *ngFor=\"let edge of diagram.edges; let i = index\"\n         edge-component [(edge)]=\"diagram.edges[i]\" (edgeChange)=\"diagram.edges[i]=$event\"></g>\n\n      <g selected-node-highlight/>\n      <g drag-select-preview/>\n    </svg>\n  </div>\n\n  <creation-sidebar id=\"menu-side\"></creation-sidebar>\n  <hint-overlay></hint-overlay>\n</div>\n\n<canvas id=\"canvas\" viewbox></canvas>\n","import { Injectable } from '@angular/core';\nimport {SelectionService} from \"./selection.service\";\nimport {SnapService} from \"./snap.service\";\nimport {Label} from \"../../model/label\";\nimport {Position} from \"../../model/position\";\nimport {CachingService} from \"./caching/caching.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelRepositionService {\n  private startPosition: Position | undefined = undefined;\n  private label?: Label;\n\n  constructor(private snapService: SnapService,\n              private cachingService: CachingService) {\n  }\n\n  public activate(position: Position, label: Label) {\n    this.startPosition = position;\n    this.label = label;\n  }\n\n  public update(position: Position) {\n    if (this.isActive()) {\n      let diff = (Position.subtract(position, this.startPosition!));\n      this.label!.position = (Position.add(this.startPosition!, diff));\n      this.label!.position.y;\n    } else {\n      throw new Error('Service should be active!');\n    }\n  }\n\n  public deactivate() {\n    if (this.isActive()) {\n      this.cachingService.save();\n    }\n    this.label = undefined;\n    this.startPosition = undefined;\n  }\n\n  public isActive() {\n    return this.startPosition !== undefined && this.label !== undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\nimport {Diagram} from \"../../model/diagram\";\nimport {fsm} from \"../../model/examples/fsm\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiagramContainerService {\n  // private readonly diagramSubject: BehaviorSubject<Diagram> = new BehaviorSubject<Diagram>(new Diagram());\n  private readonly diagramSubject: BehaviorSubject<Diagram> = new BehaviorSubject<Diagram>(fsm);\n  public readonly diagramObservable = this.diagramSubject.asObservable();\n\n  public set(diagram: Diagram) {\n    this.diagramSubject.next(diagram);\n  }\n\n  public get() {\n    return this.diagramSubject.getValue();\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\nimport {Edge, LineType} from \"../../model/edge\";\nimport {Node} from \"../../model/node/node\";\nimport {Position} from \"../../model/position\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {SnapService} from \"./snap.service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DragDropCreationService {\n  private selected: BehaviorSubject<Node | Edge | undefined> = new BehaviorSubject<Node|Edge|undefined>(undefined);\n  public readonly selectedObservable: Observable<Node | Edge | undefined> = this.selected.asObservable();\n  public readonly createdEmitter: EventEmitter<Node | Edge> = new EventEmitter<Node|Edge>();\n\n  constructor(keyboardEventCaller: KeyboardEventCallerService, private snapService: SnapService) {\n    // Todo: Allow keyboard event caller to have multiple callbacks.\n    keyboardEventCaller.addCallback(['Escape', 'keydown', 'any'], (ignored) => this.cancel());\n  }\n\n  public isActive(): boolean {\n    return this.selected.getValue() !== undefined;\n  }\n\n  public activate(prototype: Edge | Node): void {\n    if (this.isActive()) {\n      throw new Error('Trying to activate the DragDropCreationService but it already is active.');\n    }\n    let copy = prototype.getDeepCopy();\n    if (copy instanceof Node) {\n      let node = copy as Node;\n      node.position = new Position(-node.width, -node.height);\n    } else {\n      let edge = copy as Edge;\n      edge.startPosition = new Position(-100, -100);\n      edge.endPosition = Position.zero();\n    }\n    this.selected.next(copy.getDeepCopy());\n  }\n\n  public update(position: Position): void {\n    if(!this.isActive()) {\n      throw new Error('Trying to update the DragDropService while it is not active');\n    }\n\n    if (this.selected.getValue() instanceof Node) {\n      let node = this.selected.getValue() as Node;\n      // Calculations to make the mouse the center of the object, in stead of the top-right.\n      node.position = this.snapService.snapIfApplicable(Position.subtract(position, new Position(node.width / 2, node.height / 2)));\n    } else {\n      let edge = this.selected.getValue() as Edge;\n      edge.startPosition = position;\n      const OFFSET = 100;\n      edge.endPosition = Position.add(new Position(OFFSET, OFFSET), position);\n\n      if (edge.lineType === LineType.Arc) {\n        edge.middlePositions = [];\n        edge.setDefaultMiddlePointOnArc();\n      }\n    }\n  }\n\n  public cancel() {\n    this.selected.next(undefined);\n  }\n\n  public create() {\n    let value = this.selected.getValue();\n    if (value instanceof Edge && (value as Edge).lineType === LineType.Arc) {\n      (value as Edge).middlePositions = [];\n      (value as Edge).setDefaultMiddlePointOnArc();\n    } else if (value instanceof Node) {\n      value.width = Math.ceil(value.width / 10) * 10;\n      value.height = Math.ceil(value.height / 10) * 10;\n    }\n    this.createdEmitter.emit(value);\n    this.selected.next(undefined);\n  }\n\n  public getSelected() {\n    return this.selected.getValue();\n  }\n\n}\n\n","<svg:g *ngFor=\"let edge of diagram.edges\" edge-render-dispatch [edge]=\"edge\"></svg:g>\n<svg:g *ngFor=\"let node of diagram.nodes\" node-render-dispatch [node]=\"node\"></svg:g>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Diagram} from \"../../model/diagram\";\n\n@Component({\n  selector: '[diagram-preview]',\n  templateUrl: './diagram-preview.component.html',\n  styleUrls: ['./diagram-preview.component.scss']\n})\nexport class DiagramPreviewComponent {\n  @Input() diagram!: Diagram;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sequence-edge',\n  templateUrl: './sequence-edge.component.html',\n  styleUrls: ['./sequence-edge.component.scss']\n})\nexport class SequenceEdgeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>sequence-edge works!</p>\n","<svg:line *ngIf=\"edgeCreationService.startHasBeenSelected()\"\n          [attr.x1]=\"edgeCreationService.startPreview!.x\"\n          [attr.y1]=\"edgeCreationService.startPreview!.y\"\n          [attr.x2]=\"edgeCreationService.endPreview!.x\"\n          [attr.y2]=\"edgeCreationService.endPreview!.y\"\n          style=\"stroke:rgb(255,0,0);stroke-width:2\">\n</svg:line>\n\n","import { Component, OnInit } from '@angular/core';\nimport {EdgeCreationService} from \"../services/edge-creation.service\";\nimport {ModeService} from \"../services/mode.service\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {Position} from \"../../model/position\";\n\n@Component({\n  selector: '[new-edge-preview]',\n  templateUrl: './new-edge-preview.component.html',\n  styleUrls: ['./new-edge-preview.component.scss']\n})\nexport class NewEdgePreviewComponent {\n  constructor(public edgeCreationService: EdgeCreationService) {\n\n  }\n\n  edgeCreationIsActive(): boolean {\n    return this.edgeCreationService.isActive();\n  }\n\n  getPoints(): string | undefined {\n    let start: undefined | string  = this.edgeCreationService.startPreview?.toString(',', ' ');\n    let end: undefined | string  = this.edgeCreationService.endPreview?.toString(',', ' ');\n    console.log(start)\n    console.log(end)\n    if (start === undefined || end === undefined) {\n      return undefined;\n    }\n    console.log(start)\n    console.log(end)\n    return `${start} ${end}`;\n  }\n\n}\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Diagram} from \"../../model/diagram\";\nimport {deserialiseDiagram} from \"../../serialisation/deserialise/deserialise-diagram\";\nimport {SerialisedDiagram} from \"../../serialisation/serialised-data-structures/serialised-diagram\";\n\n@Component({\n  selector: 'app-diagram-import',\n  templateUrl: './diagram-import.component.html',\n  styleUrls: ['./diagram-import.component.scss']\n})\nexport class DiagramImportComponent {\n  private file?: File;\n  @Output() diagramEmitter: EventEmitter<Diagram> = new EventEmitter<Diagram>();\n\n  constructor() { }\n\n  onChange(event: any) {\n    this.file = event!.target!.files[0];\n  }\n\n  onClick() {\n    if (this.file === undefined) {\n      alert(\"You have to upload a file first.\");\n    }\n\n    this.file?.text()\n      .then((diagramString: string) => {\n        let diagramJSON = JSON.parse(diagramString);\n        let diagram = deserialiseDiagram(diagramJSON as SerialisedDiagram);\n        this.diagramEmitter.emit(diagram);\n      })\n      .catch(() => {\n        alert('The file you are trying to upload can not be converted to a diagram.');\n      });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-4\"></div>\n  <div class=\"col-md-2\">\n    <input class=\"form-control-file\" type=\"file\" (change)=\"onChange($event)\">\n  </div>\n\n  <div class=\"col-md-2\">\n    <button class=\"btn btn-outline-success\" (click)=\"onClick()\">\n      Upload\n    </button>\n  </div>\n  <div class=\"col-md-4\"></div>\n</div>\n","<svg:pattern id=\"smallGrid\" width=\"10\" height=\"10\" patternUnits=\"userSpaceOnUse\">\n  <path d=\"M 10 0 L 0 0 0 10\" fill=\"none\" stroke=\"gray\" stroke-width=\"0.5\"/>\n</svg:pattern>\n<svg:pattern id=\"grid\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\">\n  <rect width=\"100\" height=\"100\" fill=\"url(#smallGrid)\"/>\n  <path d=\"M 100 0 L 0 0 0 100\" fill=\"none\" stroke=\"gray\" stroke-width=\"1\"/>\n</svg:pattern>\n\n<svg:rect *ngIf=\"active\" [attr.x]=\"x\" [attr.y]=\"y\" [attr.width]=\"width\" [attr.height]=\"height\" fill=\"url(#grid)\"></svg:rect>\n","import { Component, OnInit } from '@angular/core';\nimport {ZoomService} from \"../services/zoom.service\";\nimport {SettingsContainerService} from \"../services/settings-container.service\";\n\n@Component({\n  selector: '[grid-overlay]',\n  templateUrl: './grid-overlay.component.html',\n  styleUrls: ['./grid-overlay.component.scss']\n})\nexport class GridOverlayComponent {\n  x!: number;\n  y!: number;\n  width!: number;\n  height!: number\n  active = true;\n\n  constructor(zoomService: ZoomService, settingsContainerService: SettingsContainerService) {\n    this.active = settingsContainerService.grid.getValue();\n    settingsContainerService.grid.asObservable().subscribe(grid => this.active = grid);\n\n    let callback = () => {\n      this.width = zoomService.getZoomedWidth();\n      this.height = zoomService.getZoomedHeight();\n      let xy = zoomService.getXY();\n      this.x = xy.x;\n      this.y = xy.y;\n    };\n    callback();\n\n    zoomService.updateEmitter.subscribe(callback);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Class that is responsible for using keyboard event to specific callbacks.\n * The keyboard events supplied by app.components.ts.\n * The callbacks are added by other services or components who want to trigger certain actions based on keyboard events.\n */\nexport class KeyboardEventCallerService {\n  private keys: Array<KeyTuple> = [];\n  private callbacks: Array<Array<KeyboardCallback>> = [];\n\n  constructor() {\n  }\n\n  public addCallback(key: KeyTuple, callback: KeyboardCallback) {\n    let index = this.keys.findIndex(elem => key[0] === elem[0] && key[1] === elem[1] && key[2] === elem[2]);\n\n    if (index === -1) {\n      this.keys.push(key);\n      this.callbacks.push([callback]);\n    } else {\n      this.callbacks[index].push(callback);\n    }\n  }\n\n  public executeCallbacks(key: KeyTuple, event: KeyboardEvent) {\n    for (let i = 0; i < this.keys.length; i++) {\n      if ((this.keys[i][0] == key[0]) &&\n        (this.keys[i][1] == key[1]) &&\n        (this.keys[i][2] === key[2] || this.keys[i][2] === 'any')) {\n        this.callbacks[i].forEach(f => f(event));\n      }\n    }\n  }\n}\n\ntype KeyTuple = [string, KeyboardEventType, DownButton]\ntype KeyboardCallback = (event: KeyboardEvent) => void;\ntype KeyboardEventType = 'keydown' | 'keyup';\nexport type DownButton = 'none' | 'ctrl' | 'shift' | 'alt' | 'any';\n","<svg:g>\n  <svg:ellipse [attr.cx]=\"node!.position.x + node!.width / 2\"\n               [attr.cy]=\"node!.position.y + node!.height / 2\"\n               [attr.rx]=\"node!.width / 2\"\n               [attr.ry]=\"node!.height / 2\"\n               [ngStyle]=\"node!.styleObject\"\n  >\n  </svg:ellipse>\n</svg:g>\n\n\n<!-- Double border if applicable -->\n<svg:ellipse *ngIf=\"node?.hasDoubleBorder\"\n             [attr.cx]=\"node!.position.x + node!.width / 2\"\n             [attr.cy]=\"node!.position.y + node!.height / 2\"\n             [attr.rx]=\"node!.width / 2 - 6\"\n             [attr.ry]=\"node!.height / 2 - 6\"\n             style=\"fill:none;stroke:black;stroke-width:2;fill-opacity:0;stroke-opacity:0.9\"\n>\n</svg:ellipse>\n\n<svg:g basic-node-text [node]=\"node\"></svg:g>\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {EllipseNode} from \"../../../model/node/ellipse-node\";\nimport {EditService} from \"../../services/edit.service\";\n\n@Component({\n  selector: '[ellipse-node-render]',\n  templateUrl: './ellipse-node-render.component.html',\n  styleUrls: ['./ellipse-node-render.component.scss']\n})\nexport class EllipseNodeRenderComponent {\n  @Input() node!: EllipseNode;\n\n}\n","import {RectangleNode} from \"./rectangle-node\";\nimport {SerialisedClassNode, SerialisedNode} from \"../../serialisation/serialised-data-structures/serialised-node\";\nimport {Node} from \"./node\";\n\nexport class ClassNode extends RectangleNode {\n  public firstLine: number = 0;\n  public secondLine: number | undefined = undefined;\n\n  public getNodeTypeName(): string {\n    return 'ClassNode'\n  }\n\n  public serialise(): SerialisedClassNode {\n    let result: any = super.serialise();\n    result.firstLine = this.firstLine;\n    result.secondLine = this.secondLine;\n    return result as SerialisedClassNode;\n  }\n\n  public getDeepCopy(): Node {\n    let result = new ClassNode(this.width, this.height, this.position.getDeepCopy());\n    result.text = this.text;\n    result.styleObject = this.styleObject;\n    result.firstLine = this.firstLine;\n    result.secondLine = this.secondLine;\n    return result as Node;\n  }\n}\n","import {RectangleNode} from \"./rectangle-node\";\n\nexport class HourglassNode extends RectangleNode {\n  public getNodeTypeName(): string {\n    return 'HourglassNode';\n  }\n\n  public getDeepCopy() {\n    return new HourglassNode(this.width, this.height, this.position.getDeepCopy());\n  }\n}\n","import {Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild} from '@angular/core';\nimport {Position} from \"../../model/position\";\nimport {Edge, EndStyle, LineStyle, LineType} from \"../../model/edge\";\nimport {Label} from \"../../model/label\";\nimport {EdgeCreationService} from \"../services/edge-creation.service\";\nimport {Mode, ModeService} from \"../services/mode.service\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {ModeAwareComponent} from \"../mode-aware-component\";\nimport {DeletionService} from \"../services/deletion.service\";\nimport {CachingService} from \"../services/caching/caching.service\";\nimport {EdgeFormattingModalComponent} from \"../edge-formatting-modal/edge-formatting-modal.component\";\nimport {FormattingModalComponent} from \"../formatting-modal/formatting-modal.component\";\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ZoomService} from \"../services/zoom.service\";\nimport {DiagramComponent} from \"../diagram/diagram.component\";\nimport {MousePositionTransformService} from \"../services/mouse-position-transform.service\";\n\n@Component({\n  selector: '[edge-component]',\n  templateUrl: './edge.component.html',\n  styleUrls: ['./edge.component.scss'],\n})\nexport class EdgeComponent implements OnDestroy {\n  @Input() edge!: Edge;\n  @Output() edgeChange = new EventEmitter<Edge>();\n  isSelected: boolean = false;\n  styleObject: {[key: string]: string | number} = {\n    'stroke': 'black',\n    'stroke-width': 2\n  }\n  cursor: 'pointer' | 'move' = 'pointer';\n\n  constructor(private selectionService: SelectionService,\n              private deletionService: DeletionService,\n              private cachingService: CachingService,\n              private modalService: NgbModal,\n              private mousePositionTransformService: MousePositionTransformService) {\n    selectionService.selectedObservable.subscribe(selectedList => {\n      console.log(selectedList)\n      this.isSelected = selectedList.includes(this.edge);\n      if (this.isSelected) {\n        this.styleObject['stroke'] = 'red';\n        this.cursor = 'move';\n      } else {\n        this.styleObject['stroke'] = 'black';\n        this.cursor = 'pointer';\n      }\n    });\n  }\n\n  public handleMouseDown(event: MouseEvent): void {\n    // On clicking an edge, the edge will be selected.\n    // If the edge is already selected, there is no need to select it again.\n    if (!this.isSelected) {\n      this.selectionService.setEdge(this.edge);\n    }\n  }\n\n  public handleDoubleClick(event: MouseEvent) {\n    // If you double click with ctrl pressed a formatting popup should open.\n    // Otherwise it should create a label.\n    // Depending on the mouse position either a start, middle or end label is added.\n    this.selectionService.setEdge(this.edge);\n    if (event.ctrlKey) {\n      if (this.selectionService.isEdge()) {\n        this.modalService.open(EdgeFormattingModalComponent);\n      }\n    } else {\n      let mousePosition = this.mousePositionTransformService.transformPosition(new Position(event.x, event.y));\n      const DISTANCE_THRESHOLD = 25;\n      if (Position.getDistance(mousePosition, this.edge.getStartPosition()) <= DISTANCE_THRESHOLD\n        && this.edge.startLabel === undefined) {\n        this.edge.addStartLabel();\n      } else if (Position.getDistance(mousePosition, this.edge.getEndPosition()) <= DISTANCE_THRESHOLD\n        && this.edge.endLabel === undefined) {\n        this.edge.addEndLabel();\n      } else if (this.edge.middleLabel === undefined) {\n        this.edge.addMiddleLabel();\n      }\n    }\n  }\n\n  public isLine(): boolean {\n    return this.edge?.lineType === LineType.Line || false;\n  }\n\n  public isArc(): boolean {\n    return this.edge?.lineType === LineType.Arc || false;\n  }\n\n  ngOnDestroy(): void {\n    console.log(\"Edge component is being destroyed.\");\n  }\n\n  delete() {\n    this.modalService.dismissAll();\n    this.deletionService.deleteEdge(this.edge);\n  }\n}\n","<svg:g edge-render-dispatch\n       [edge]=\"edge!\"\n       [styleObject]=\"styleObject\"/>\n\n\n\n<!-- Invisible, selectable to make the mouse down trigger easily accessible -->\n<svg:polyline *ngIf=\"edge && isLine()\"\n              [attr.points]=\"edge.getPointString()\"\n              style=\"stroke:rgb(0, 0, 0); stroke-width:15; stroke-opacity: 0;  fill:none;\"\n              (mousedown)=\"handleMouseDown($event)\"\n              (dblclick)=\"handleDoubleClick($event)\"\n              [ngStyle]=\"{'cursor': cursor}\"/>\n<svg:path *ngIf=\"edge && isArc()\"\n          [attr.d]=\"edge.getPointString()\"\n          fill=\"none\"\n          style=\"stroke-width: 15; stroke: black; stroke-opacity: 0\"\n          (mousedown)=\"handleMouseDown($event)\"\n          (dblclick)=\"handleDoubleClick($event)\"\n          [ngStyle]=\"{'cursor': cursor}\"/>\n\n<svg:g *ngIf=\"isSelected && isLine()\" clickable-new-points [edge]=\"edge\" pointer-events=\"visible\"/>\n<svg:g *ngIf=\"isSelected\" clickable-start-end-points [edge]=\"edge\"/>\n<svg:g *ngIf=\"isSelected\" clickable-middle-points [edge]=\"edge\"/>\n\n<svg:g *ngIf=\"edge && edge?.startLabel\"\n       label-component\n       [label]=\"edge.startLabel!\">\n</svg:g>\n\n<svg:g *ngIf=\"edge && edge?.middleLabel\"\n       label-component\n       [label]=\"edge.middleLabel!\">\n</svg:g>\n\n<svg:g *ngIf=\"edge && edge?.endLabel\"\n       label-component\n       [label]=\"edge.endLabel!\">\n</svg:g>\n","<svg:ellipse *ngFor=\"let point of node.getAllAttachmentPoints(); let i = index;\"\n  [attr.cx]=\"point.x\"\n  [attr.cy]=\"point.y\"\n  rx=\"5\"\n  ry=\"5\"\n  style=\"fill:green;stroke:black;stroke-width:2;fill-opacity:1;stroke-opacity:0.9;z-index:100;\"\n  (mouseup)=\"handleMouseUp($event, i)\"\n  (mousedown)=\"handleMouseDown($event, i)\"\n  (click)=\"handleMouseDown($event, i)\">\n</svg:ellipse>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Node} from \"../../../model/node/node\";\nimport {EdgeCreationService} from \"../../services/edge-creation.service\";\n\n@Component({\n  selector: '[clickable-attachment-points]',\n  templateUrl: './clickable-attachment-points.component.html',\n  styleUrls: ['./clickable-attachment-points.component.scss']\n})\nexport class ClickableAttachmentPointsComponent {\n  @Input() node!: Node;\n\n  constructor(private edgeCreationService: EdgeCreationService) {\n  }\n\n  handleMouseDown($event: MouseEvent, attachmentPoint: number) {\n    if (!this.edgeCreationService.startHasBeenSelected()) {\n      this.edgeCreationService.setStart(this.node, attachmentPoint);\n    }\n  }\n\n  handleMouseUp($event: MouseEvent, attachmentPoint: number) {\n    if (this.edgeCreationService.startHasBeenSelected()) {\n      this.edgeCreationService.setEnd(this.node, attachmentPoint);\n    }\n  }\n}\n","import {PolylineNode} from \"./polyline-node\";\nimport {Position} from \"../position\";\nimport {Node} from \"./node\";\n\nexport class DiamondNode extends PolylineNode {\n  constructor(width: number, height: number, position: Position) {\n    super(width, height, position);\n  }\n\n  protected getAllOffsets(): Position[] {\n    return [\n      new Position(this.width / 2, 0),\n      new Position(this.width / 2, this.height),\n      new Position(0, this.height / 2),\n      new Position(this.width, this.height / 2)\n    ];\n  }\n\n  getDeepCopy(): Node {\n    return new DiamondNode(this.width, this.height, this.position.getDeepCopy());\n  }\n\n  private getPoints(): Position[] {\n    return [\n      new Position(this.position.x + this.width / 2, this.position.y),\n      new Position(this.position.x + this.width, this.position.y + this.height / 2),\n      new Position(this.position.x + this.width / 2, this.position.y + this.height),\n      new Position(this.position.x, this.position.y + this.height / 2),\n      new Position(this.position.x + this.width / 2, this.position.y)\n    ];\n  }\n\n  getSVGPoints(): string {\n    let points: string[] = this.getPoints().map((pos: Position) => pos.toString());\n    return points.join();\n  }\n\n  getBorderSVGPoints(): string {\n    const OFFSET = 5;\n    return this.getPoints().map((pos: Position) => {\n      let centerX = this.position.x + this.width / 2;\n      let centerY = this.position.y + this.height / 2;\n      if (pos.x < centerX) {\n        pos.x += OFFSET;\n      } else if (pos.x > centerX) {\n        pos.x -= OFFSET;\n      }\n      if (pos.y < centerY) {\n        pos.y += OFFSET;\n      } else if (pos.y > centerY) {\n        pos.y -= OFFSET;\n      }\n\n      return pos;\n    }).map(pos => pos.toString()).join();\n  }\n\n  public getNodeTypeName(): string {\n    return 'DiamondNode';\n  }\n}\n","import {RepositionService} from \"../services/reposition.service\";\nimport {ModeService} from \"../services/mode.service\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {Node} from \"../../model/node/node\";\nimport {Position} from \"../../model/position\";\nimport {ModeAwareComponent} from \"../mode-aware-component\";\nimport {Component, Input} from \"@angular/core\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {DeletionService} from \"../services/deletion.service\";\nimport {CachingService} from \"../services/caching/caching.service\";\nimport {FormattingModalComponent} from \"../formatting-modal/formatting-modal.component\";\nimport {MousePositionTransformService} from \"../services/mouse-position-transform.service\";\nimport {EditService} from \"../services/edit.service\";\nimport {EdgeCreationService} from \"../services/edge-creation.service\";\nimport {StartEndRepositioner} from \"../services/edge-reposition/start-end-repositioner\";\nimport {KeyboardEventCallerService} from \"../services/keyboard-event-caller.service\";\n\n@Component({\n  templateUrl: './node.component.html',\n  selector: '[node-component]'\n})\nexport class NodeComponent extends ModeAwareComponent {\n  @Input() node!: Node;\n  hoveringNearby: boolean = false;\n  isSelected: boolean = false;\n  isInEditMode: boolean = false;\n  edgeCreationIsActive: boolean = false;\n\n  constructor(private repositionService: RepositionService,\n              modeService: ModeService,\n              private selectionService: SelectionService,\n              private modalService: NgbModal,\n              private deletionService: DeletionService,\n              private cachingService: CachingService,\n              private mousePositionTransformService: MousePositionTransformService,\n              private editService: EditService,\n              edgeCreationService: EdgeCreationService,\n              public startEndRepositioner: StartEndRepositioner) {\n    super(modeService);\n    selectionService.selectedObservable.subscribe(selectedList => {\n      this.isSelected = selectedList.includes(this.node);\n    });\n\n    edgeCreationService.activityObservable.subscribe(b => this.edgeCreationIsActive = b);\n  }\n\n  public handleMouseDown(event: MouseEvent) {\n    if (this.edgeCreationIsActive) {\n      return;\n    }\n\n    // If the node is already selected, we do not want to select it again.\n    // This is because there are multiple selected nodes sometimes\n    // and this allows you to move multiple at the same time.\n    if (!this.isSelected) {\n      this.selectionService.setNode(this.node);\n    } else {\n      this.repositionService.activate(this.mousePositionTransformService.transformPosition(new Position(event.clientX, event.clientY)));\n    }\n  }\n\n  public handleDoubleClick(event: MouseEvent) {\n    if (this.repositionService.isActive()) {\n      this.repositionService.deactivate();\n    }\n\n    if (event.ctrlKey) {\n      this.editService.deactivate();\n      if (this.selectionService.isNode()) {\n        this.modalService.open(FormattingModalComponent);\n      }\n    } else {\n      this.isInEditMode = true;\n      this.editService.deactivate();\n      this.editService.activate(this.node);\n    }\n  }\n\n  delete(): void {\n    this.modalService.dismissAll();\n    this.deletionService.deleteNode(this.node);\n  }\n\n  save(): void {\n    this.cachingService.save();\n  }\n}\n","<svg:g node-render-dispatch\n       [node]=\"node\"\n       (mousedown)=\"handleMouseDown($event)\"\n       (dblclick)=\"handleDoubleClick($event)\"\n       [ngStyle]=\"{'cursor': isSelected ? 'move' : 'pointer'}\"/>\n\n<svg:g *ngIf=\"edgeCreationIsActive\" clickable-attachment-points [node]=\"node\"></svg:g>\n\n<svg:g *ngIf=\"startEndRepositioner.isActive()\">\n  <svg:ellipse *ngFor=\"let point of node.getAllAttachmentPoints(); let i = index;\"\n               [attr.cx]=\"point.x\"\n               [attr.cy]=\"point.y\"\n               rx=\"5\"\n               ry=\"5\"\n               style=\"fill:green;stroke:black;stroke-width:2;fill-opacity:1;stroke-opacity:0.9;z-index:100;\">\n  </svg:ellipse>\n</svg:g>\n","import {AfterViewInit, Component, Renderer2} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {DownButton, KeyboardEventCallerService} from \"./services/keyboard-event-caller.service\";\nimport {EditService} from \"./services/edit.service\";\nimport {Diagram} from \"../model/diagram\";\nimport {ActivatedRoute, Router, RoutesRecognized} from \"@angular/router\";\nimport {deserialiseDiagram} from \"../serialisation/deserialise/deserialise-diagram\";\nimport {DiagramContainerService} from \"./services/diagram-container.service\";\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  public userFullName: string | undefined;\n  public userDiagrams: Diagram[] | undefined;\n  public loadDiagramId: Number | undefined;\n\n  constructor(private renderer: Renderer2, private keyboardEventCallbackMap: KeyboardEventCallerService, private route: ActivatedRoute, private router: Router, private editService: EditService, private diagramContainer: DiagramContainerService, private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    // @ts-ignore\n    this.router.events.subscribe(val => {\n      if (val instanceof RoutesRecognized) {\n        // @ts-ignore\n        this.loadDiagramId = Number.parseInt(val.state.root.firstChild.params.id);\n        console.log(this.loadDiagramId)\n        // @ts-ignore\n        if(this.loadDiagramId){\n          this.http.get(\"api/diagram/visible\",{params: new HttpParams().set(\"id\", String(this.loadDiagramId))}).subscribe(\n            (data:any) => {\n              if(data.serialisedDiagram) {\n                this.diagramContainer.set(deserialiseDiagram(data.serialisedDiagram))\n              } else{\n                window.alert(\"Diagram could not be loaded\");\n                this.router.navigateByUrl(\"\");\n              }\n            },error =>  {\n              //TODO Open error modal or something\n              this.handleError(error)\n            })\n         }\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.renderer.listen('window', 'keydown', (event: KeyboardEvent) => {\n      if (event.key == \"Backspace\" && this.editService.isActive()) {\n        event.preventDefault();\n      }\n      let downButton = AppComponent.getDownButton(event);\n      if (this.editService.isActive()) {\n        this.editService.handleKeyPressed(event.key, event.ctrlKey);\n      } else {\n        this.keyboardEventCallbackMap.executeCallbacks([event.key, \"keydown\", downButton], event);\n      }\n    });\n\n    this.renderer.listen('window', 'keyup', (event: KeyboardEvent) => {\n      let downButton = AppComponent.getDownButton(event);\n      this.keyboardEventCallbackMap.executeCallbacks([event.key, \"keyup\", downButton], event);\n    });\n\n    this.isLoggedIn();\n  }\n\n  private static getDownButton(event: KeyboardEvent): DownButton {\n    let downButton: DownButton = 'none';\n    if (event.ctrlKey) {\n      downButton = 'ctrl';\n    } else if (event.shiftKey) {\n      downButton = 'shift';\n    } else if (event.altKey) {\n      downButton = 'alt';\n    }\n    return downButton;\n  }\n\n  private isLoggedIn() {\n    this.http.get(\"/me\",{  responseType: 'text'\n      }).subscribe(\n      (data:any) => {\n        if(data == null ){\n          this.userFullName = undefined;\n        } else{\n          this.userFullName = data\n        }\n      },error =>  {\n        //TODO Open error modal or something\n        this.handleError(error)\n      }\n    );\n\n  }\n\n  handleError(error: any) {\n    console.log(error)\n  }\n\n\n}\n","<router-outlet></router-outlet>\n<a *ngIf=\"!userFullName || userFullName == '' \" class=\"nav-link\" href=\"/login\">login</a>\n<p *ngIf=\"userFullName && userFullName != ''\">Welcome {{this.userFullName}}</p>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Edge} from \"../../model/edge\";\nimport {DeletionService} from \"../services/deletion.service\";\nimport {CachingService} from \"../services/caching/caching.service\";\n\n@Component({\n  selector: 'app-edge-editor',\n  templateUrl: './edge-editor.component.html',\n  styleUrls: ['./edge-editor.component.scss']\n})\nexport class EdgeEditorComponent {\n  @Input() edge?: Edge;\n}\n","import {Mode, ModeService} from \"./services/mode.service\";\n\nexport abstract class ModeAwareComponent {\n  protected mode: Mode;\n\n  protected constructor(modeService: ModeService) {\n    this.mode = modeService.getLatestMode();\n    modeService.modeObservable.subscribe(mode => this.mode = mode);\n  }\n\n  public isInCreateMode(): boolean {\n    return this.mode === Mode.Create;\n  }\n\n  public isInSelectMode(): boolean {\n    return this.mode === Mode.Select;\n  }\n\n  public isInMoveMode(): boolean {\n    return this.mode === Mode.Move;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Lifeline} from \"../../model/sequence-diagram/lifeline\";\n\n@Component({\n  selector: '[lifeline-node]',\n  templateUrl: './lifeline.component.html',\n  styleUrls: ['./lifeline.component.scss']\n})\nexport class LifelineComponent {\n  public readonly RENDERING = Lifeline.RENDERING_CONSTANTS;\n  @Input() lifeline?: Lifeline;\n\n  constructor() { }\n\n  getX(): number {\n    if (this.lifeline === undefined) {\n      throw new Error('Rendering a lifeline whilst it is not defined.');\n    }\n\n    return this.lifeline.horizontalPosition  * (Lifeline.RENDERING_CONSTANTS.actorWidth +\n      Lifeline.RENDERING_CONSTANTS.actorBetweenOffset) + Lifeline.RENDERING_CONSTANTS.actorBetweenOffset;\n  }\n\n  getCenterX(): number {\n    if (this.lifeline === undefined) {\n      throw new Error('Rendering a lifeline whilst it is not defined.');\n    }\n\n    return this.getX() + Lifeline.RENDERING_CONSTANTS.actorWidth / 2;\n  }\n\n  getStartY() {\n    if (this.lifeline === undefined) {\n      throw new Error('Rendering a lifeline whilst it is not defined.');\n    }\n\n    return Lifeline.RENDERING_CONSTANTS.actorYOffset + Lifeline.RENDERING_CONSTANTS.actorHeight;\n  }\n\n  getLineSegments(): number[][] {\n    if (this.lifeline === undefined || (this.lifeline?.connections.length % 2 !== 0 && this.lifeline?.connections.length >= 2)) {\n      throw new Error('Connections must contain an even amount and be at least 2.')\n    }\n\n    let result = [];\n\n    for (let i = 0; i < this.lifeline!.connections.length; i += 2) {\n      result.push([this.lifeline!.connections[i], this.lifeline!.connections[i + 1]]);\n    }\n\n    return result;\n  }\n\n  getActiveSegments(): number[][] {\n    if (this.lifeline === undefined || (this.lifeline?.connections.length % 2 !== 0 && this.lifeline?.connections.length >= 2)) {\n      throw new Error('Connections must contain an even amount and be at least 2.')\n    }\n\n    let result = [];\n\n    for (let i = 1; i !== this.lifeline!.connections.length - 1; i += 2) {\n      result.push([this.lifeline!.connections[i], this.lifeline!.connections[i + 1]]);\n    }\n\n    return result;\n  }\n}\n","<svg:rect *ngIf=\"lifeline\"\n  [attr.x]=\"getX()\"\n  [attr.y]=\"20\"\n  width=\"150\"\n  height=\"75\"\n  style=\"stroke: black; stroke-width: 1; fill: none;\"\n>\n</svg:rect>\n\n\n<svg:line *ngFor=\"let connection of getLineSegments()\"\n          [attr.x1]=\"getCenterX()\"\n          [attr.x2]=\"getCenterX()\"\n          [attr.y1]=\"connection[0]\"\n          [attr.y2]=\"connection[1]\"\n          style=\"stroke: black; stroke-width: 1\"\n          stroke-dasharray=\"12, 2\"\n></svg:line>\n\n<svg:rect *ngFor=\"let seg of getActiveSegments()\"\n  [attr.x]=\"getCenterX() - RENDERING.activeBlockWidth / 2\"\n  [attr.y]=\"seg[0]\"\n  [attr.width]=\"RENDERING.activeBlockWidth\"\n  [attr.height]=\"seg[1] - seg[0]\"\n  style=\"stroke: black; stroke-width: 1; fill: none;\"\n>\n</svg:rect>\n","import {AfterViewInit, Component, Input, OnInit} from '@angular/core';\nimport {ClassNode} from \"../../../model/node/class-node\";\nimport {EditService} from \"../../services/edit.service\";\nimport {KeyboardEventCallerService} from \"../../services/keyboard-event-caller.service\";\nimport {AbstractTextNode} from \"../abstract-text-node\";\n\n@Component({\n  selector: '[class-node-render]',\n  templateUrl: './class-node-render.component.html',\n  styleUrls: ['./class-node-render.component.scss']\n})\nexport class ClassNodeRenderComponent extends AbstractTextNode implements AfterViewInit {\n  @Input() node!: ClassNode;\n\n  constructor(editService: EditService) {\n    super(editService);\n  }\n\n  ngAfterViewInit() {\n    this.subscribeToEditService();\n  }\n}\n","<svg:g>\n  <svg:rect\n            [attr.x]=\"node.position.x\"\n            [attr.y]=\"node.position.y\"\n            [attr.width]=\"node.width\"\n            [attr.height]=\"node.height\"\n            [ngStyle]=\"node.styleObject\"\n  >\n  </svg:rect>\n\n\n  <svg:text *ngFor=\"let line of textLines; let i = index;\"\n            [attr.x]=\"node.position.x + node.width / 2\"\n            [attr.y]=\"node.position.y + i * 24 + 20\"\n            text-anchor=\"middle\"\n            style=\"font-size: 16px\">\n    {{line}}\n  </svg:text>\n\n  <svg:line [attr.x1]=\"node.position.x\"\n            [attr.x2]=\"node.position.x + node.width\"\n            [attr.y1]=\"node.position.y + (node.firstLine + 1) * 24\"\n            [attr.y2]=\"node.position.y + (node.firstLine + 1) * 24\"\n            style=\"stroke: black; stroke-width: 2px\">\n  </svg:line>\n</svg:g>\n","<svg:g *ngFor=\"let middlePos of edge.middlePositions; let i = index\">\n  <svg:ellipse [attr.cx]=\"middlePos.x\"\n               [attr.cy]=\"middlePos.y\"\n               [attr.rx]=\"RADIUS\"\n               [attr.ry]=\"RADIUS\"\n               style=\"fill: red; stroke-width: 2; stroke: red; fill-opacity: 0.5; stroke-opacity: 0.75; cursor: move\"\n               (mousedown)=\"handleMouseDown($event, i)\"\n  />\n</svg:g>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Edge} from \"../../../model/edge\";\nimport {Position} from \"../../../model/position\";\nimport {FixedPointRepositioner} from \"../../services/edge-reposition/fixed-point-repositioner\";\nimport {MousePositionTransformService} from \"../../services/mouse-position-transform.service\";\nimport {SelectionService} from \"../../services/selection.service\";\n\n@Component({\n  selector: '[clickable-middle-points]',\n  templateUrl: './clickable-middle-points.component.html',\n  styleUrls: ['./clickable-middle-points.component.scss']\n})\nexport class ClickableMiddlePointsComponent {\n  readonly RADIUS = 8;\n\n  @Input() edge!: Edge;\n\n  constructor(private fixedPointRepositioner: FixedPointRepositioner,\n              private selectionService: SelectionService) { }\n\n  handleMouseDown(event: MouseEvent, index: number): void {\n    this.selectionService.setEdge(this.edge);\n    let position = this.edge.middlePositions[index];\n    this.fixedPointRepositioner.activate(this.edge, position);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Edge} from \"../../model/edge\";\nimport {Node} from \"../../model/node/node\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\nimport {DeletionService} from \"./deletion.service\";\nimport {DiagramContainerService} from \"./diagram-container.service\";\nimport {Label} from \"../../model/label\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectionService {\n  private readonly selected: BehaviorSubject<Array<Node | Edge | Label>> = new BehaviorSubject<Array<Node | Edge | Label>>([]);\n  public readonly selectedObservable = this.selected.asObservable();\n\n  constructor(keyboardEventCallerService: KeyboardEventCallerService,\n              diagramContainerService: DiagramContainerService) {\n    keyboardEventCallerService.addCallback(['Escape', 'keydown', 'any'], (event => {\n      this.deselect();\n    }));\n\n    // When the diagram reference is updated, the references to nodes and edges are too.\n    // Therefore our selected objects may be de-synced. To prevent de-sync bugs,  we simply deselect.\n    diagramContainerService.diagramObservable.subscribe(ignored => {\n      this.deselect();\n    });\n  }\n\n  public add(value: Node | Edge | Label): void {\n    this.selected.getValue().push(value);\n    this.selected.next(this.selected.getValue().map(x => x));\n  }\n\n  public setNode(value: Node): void {\n    this.selected.next([value]);\n  }\n\n  public setEdge(value: Edge): void {\n    this.selected.next([value]);\n  }\n\n  public deselect(): void {\n    this.selected.next([]);\n  }\n\n  public isNode(): boolean {\n    let selected = this.selected.getValue();\n    return (selected.length === 1) && (selected[0] instanceof Node);\n  }\n\n  public isEdge(): boolean {\n    let selected = this.selected.getValue();\n    return (selected.length === 1) && (selected[0] instanceof Edge);\n  }\n\n  public getNode(): Node {\n    if (!this.isNode()) {\n      throw new Error(\"Requires a single node to be selected.\");\n    }\n    return <Node> this.selected.getValue()[0];\n  }\n\n  public getEdge(): Edge {\n    if (!this.isNode()) {\n      throw new Error(\"Requires a single edge to be selected.\");\n    }\n    return <Edge> this.selected.getValue()[0];\n  }\n\n  public setLabel(label: Label) {\n    this.selected.next([label]);\n  }\n}\n","import {Component, Input} from \"@angular/core\";\nimport {Edge} from \"../../../model/edge\";\n\n@Component({\n  selector: '[line-render-component]',\n  templateUrl: './line-render.component.html',\n})\nexport class LineRenderComponent {\n  @Input() edge!: Edge;\n  @Input() styleObject?: {[key: string]: string | number};\n}\n","<svg:polyline [attr.points]=\"edge.getPointString()\"\n              [ngStyle]=\"styleObject || {}\"\n              fill=\"none\"\n              [attr.marker-end]=\"edge.getEndMarker()\"\n              [attr.marker-start]=\"edge.getStartMarker()\"\n              [attr.stroke-dasharray]=\"edge.getLineStyleString()\">\n</svg:polyline>\n","<app-edge-editor *ngIf=\"currentEdge\" [edge]=\"currentEdge\"></app-edge-editor>\n\n<app-node-editor *ngIf=\"currentNode\" [node]=\"currentNode\"></app-node-editor>\n<!--<div *ngIf=\"currentNode && currentNode.formatter\">-->\n<!--  Width: <input type=\"number\" [(ngModel)]=\"currentNode.formatter.width\">-->\n<!--  Height: <input type=\"number\" [(ngModel)]=\"currentNode.formatter.height\">-->\n<!--  Shape:-->\n<!--  <select [(ngModel)]=\"currentNode.formatter.shape\">-->\n<!--    <option [ngValue]=\"0\">Rectangle</option>-->\n<!--    <option [ngValue]=\"1\">Ellipse</option>1-->\n<!--    <option [ngValue]=\"2\">Diamond</option>-->\n<!--  </select>-->\n\n<!--  <p>A node is selected! {{currentNode}}</p>-->\n<!--  <button type=\"button\" class=\"btn btn-danger\"(click)=\"deleteNode()\">Delete</button>-->\n\n<!--</div>-->\n\n","import {Component} from '@angular/core';\nimport {Edge, LineStyle} from \"../../model/edge\";\nimport {Node} from \"../../model/node/node\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {DeletionService} from \"../services/deletion.service\";\nimport {ModeService} from \"../services/mode.service\";\n\n@Component({\n  selector: 'app-selected-editor',\n  templateUrl: './selected-editor.component.html',\n  styleUrls: ['./selected-editor.component.scss']\n})\nexport class SelectedEditorComponent {\n  currentNode?: Node;\n  currentEdge?: Edge;\n\n  constructor(selectionService: SelectionService, private deletionService: DeletionService) {\n\n  }\n\n  private setAllUndefined(): void {\n    this.currentEdge = undefined;\n    this.currentNode = undefined;\n  }\n\n  deleteNode() {\n    if (this.currentNode) {\n      this.deletionService.deleteNode(this.currentNode);\n      this.currentNode = undefined;\n    } else {\n      throw new Error(\"Trying to delete a node whilst no node is selected.\");\n    }\n  }\n\n  deleteEdge() {\n    if (this.currentEdge) {\n      this.deletionService.deleteEdge(this.currentEdge);\n      this.currentEdge = undefined;\n    } else {\n      throw new Error(\"Trying to delete an edge whilst no edge is selected.\");\n\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DiagramComponent } from './diagram/diagram.component';\nimport { EdgeComponent } from './edge/edge.component';\nimport { ArrowMarkerComponent } from './arrow-marker/arrow-marker.component';\nimport {FormsModule} from \"@angular/forms\";\nimport { LabelComponent } from './label/label.component';\nimport {RepositionService} from \"./services/reposition.service\";\nimport {ModeSelectorComponent} from \"./mode-selector/mode-selector.component\";\nimport {ModeService} from \"./services/mode.service\";\nimport { NewEdgePreviewComponent } from './new-edge-preview/new-edge-preview.component';\nimport { SelectedEditorComponent } from './selected-editor/selected-editor.component';\nimport {DeletionService} from \"./services/deletion.service\";\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { EdgeEditorComponent } from './edge-editor/edge-editor.component';\nimport { NodeEditorComponent } from './node-compontents/node-editor/node-editor.component';\nimport { MoveMenuComponent } from './move-menu/move-menu.component';\nimport { ClickableAttachmentPointsComponent } from './node-compontents/clickable-attachment-points/clickable-attachment-points.component';\nimport {ClickableResizePointsComponent} from \"./node-compontents/clickable-resize-points/clickable-resize-points.component\";\nimport { ExportDiagramComponent } from './export-diagram/export-diagram.component';\nimport { BasicNodeTextComponent } from './node-compontents/basic-node-text/basic-node-text.component';\nimport { DiagramImportComponent } from './diagram-import/diagram-import.component';\nimport { LifelineComponent } from './lifeline/lifeline.component';\nimport { SequenceDiagramComponent } from './sequence-diagram/sequence-diagram.component';\nimport { SequenceEdgeComponent } from './sequence-edge/sequence-edge.component';\nimport { SelectedNodeHighlightComponent } from './node-compontents/selected-node-highlight/selected-node-highlight.component';\nimport { CreationSidebarComponent } from './creation-sidebar/creation-sidebar.component';\nimport { DragDropPreviewComponent } from './drag-drop-preview/drag-drop-preview.component';\nimport {LineRenderComponent} from \"./edge/line-render/line-render.component\";\nimport { ArcRenderComponent } from './edge/edge-render/arc-render.component';\nimport { ClassNodeRenderComponent } from './node-compontents/class-node/class-node-render.component';\nimport { RectangleNodeRenderComponent } from './node-compontents/rectangle-node/rectangle-node-render.component';\nimport { EllipseNodeRenderComponent } from './node-compontents/ellipse-node/ellipse-node-render.component';\nimport { DiamondNodeRenderComponent } from './node-compontents/diamond-node/diamond-node-render.component';\nimport { EdgeRenderDispatchComponent } from './edge/edge-render-dispatch/edge-render-dispatch.component';\nimport { NodeRenderDispatchComponent } from './node-compontents/node-render-dispatch/node-render-dispatch.component';\nimport {NodeComponent} from \"./node-compontents/node-component\";\nimport { FormattingModalComponent } from './formatting-modal/formatting-modal.component';\nimport { EdgeFormattingModalComponent } from './edge-formatting-modal/edge-formatting-modal.component';\nimport { UploadModalComponent } from './upload-modal/upload-modal.component';\nimport { SaveModalComponent } from './save-modal/save-modal.component';\nimport { DragSelectPreviewComponent } from './drag-select-preview/drag-select-preview.component';\nimport { HourglassNodeRenderComponent } from './node-compontents/hourglass-node/hourglass-node-render.component';\nimport { ActorNodeRenderComponent } from './node-compontents/actor-node/actor-node-render.component';\nimport { DiagramManagementModalComponent } from './diagram-management-modal/diagram-management-modal.component';\nimport { DiagramPreviewComponent } from './diagram-preview/diagram-preview.component';\nimport { BelowTextNodeComponent } from './node-compontents/below-text-node/below-text-node.component';\nimport {FaIconLibrary, FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {faEdit, faEye, faEyeSlash, faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  faCog,\n  faCopy, faFile,\n  faFolderOpen, faList,\n  faPaste, faQuestion,\n  faRedo,\n  faSave,\n  faSearchMinus,\n  faSearchPlus, faTasks,\n  faUndo, faUser, faUserSlash\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { SpecialCharacterSelectorComponent } from './special-character-selector/special-character-selector.component';\nimport { SpecialCharacterRowComponent } from './special-character-row/special-character-row.component';\nimport { GridOverlayComponent } from './grid-overlay/grid-overlay.component';\nimport { ClickableMiddlePointsComponent } from './edge/clickable-middle-points/clickable-middle-points.component';\nimport { ClickableNewPointsComponent } from './edge/clickable-new-points/clickable-new-points.component';\nimport { ClickableStartEndPointsComponent } from './edge/clickable-start-end-points/clickable-start-end-points.component';\nimport { ClearDiagramModalComponent } from './clear-diagram-modal/clear-diagram-modal.component';\nimport { ShapesetManagementModalComponent } from './shapeset-management-modal/shapeset-management-modal.component';\nimport { HelpModalComponent } from './help-modal/help-modal.component';\nimport { HintOverlayComponent } from './hint-overlay/hint-overlay.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DiagramComponent,\n    LineRenderComponent,\n    EdgeComponent,\n    ArrowMarkerComponent,\n    LabelComponent,\n    ModeSelectorComponent,\n    NewEdgePreviewComponent,\n    SelectedEditorComponent,\n    EdgeEditorComponent,\n    NodeEditorComponent,\n    MoveMenuComponent,\n    ClickableAttachmentPointsComponent,\n    ClickableResizePointsComponent,\n    ExportDiagramComponent,\n    BasicNodeTextComponent,\n    DiagramImportComponent,\n    LifelineComponent,\n    SequenceDiagramComponent,\n    SequenceEdgeComponent,\n    SelectedNodeHighlightComponent,\n    CreationSidebarComponent,\n    DragDropPreviewComponent,\n    ArcRenderComponent,\n    ClassNodeRenderComponent,\n    RectangleNodeRenderComponent,\n    EllipseNodeRenderComponent,\n    DiamondNodeRenderComponent,\n    EdgeRenderDispatchComponent,\n    NodeRenderDispatchComponent,\n    NodeComponent,\n    NodeComponent,\n    FormattingModalComponent,\n    EdgeFormattingModalComponent,\n    UploadModalComponent,\n    SaveModalComponent,\n    DragSelectPreviewComponent,\n    HourglassNodeRenderComponent,\n    ActorNodeRenderComponent,\n    DiagramManagementModalComponent,\n    DiagramPreviewComponent,\n    BelowTextNodeComponent,\n    NavBarComponent,\n    SpecialCharacterSelectorComponent,\n    SpecialCharacterRowComponent,\n    GridOverlayComponent,\n    ClickableMiddlePointsComponent,\n    ClickableNewPointsComponent,\n    ClickableStartEndPointsComponent,\n    ClearDiagramModalComponent,\n    ShapesetManagementModalComponent,\n    HelpModalComponent,\n    HintOverlayComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        NgbModule,\n        FontAwesomeModule\n    ],\n  providers: [RepositionService, ModeService, DeletionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(library: FaIconLibrary) {\n    library.addIcons(faTrashAlt, faEdit, faEye, faEyeSlash, faSave, faUndo, faRedo, faCopy, faPaste, faFolderOpen,\n      faSearchMinus, faSearchPlus, faQuestion, faCog, faUser, faTasks, faUserSlash, faList, faFile);\n  }\n}\n","import {ChangeDetectorRef, Component, Input, NgZone} from '@angular/core';\nimport {Mode, ModeService} from \"../services/mode.service\";\n\n@Component({\n  selector: 'app-mode-selector',\n  templateUrl: './mode-selector.component.html',\n  styleUrls: ['./mode-selector.component.scss']\n})\nexport class ModeSelectorComponent {\n  @Input() mode: Mode;\n  ModeType = Mode;\n  constructor(private modeService: ModeService) {\n    modeService.modeObservable.subscribe((mode: Mode) => this.mode = mode);\n    this.mode = modeService.getLatestMode();\n  }\n\n  inSelectMode(): boolean {\n    return this.mode === Mode.Select;\n  }\n\n  inCreateMode(): boolean {\n    return this.mode === Mode.Create;\n  }\n\n  inMoveMode(): boolean {\n    return this.mode === Mode.Move;\n  }\n\n  setMode(mode: Mode): void {\n    this.modeService.setMode(mode);\n  }\n}\n","<div class=\"row p-3\">\n  <ul class=\"nav nav-pills nav-fill w-100\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [ngClass]=\"{active: inSelectMode()}\" (click)=\"setMode(ModeType.Select)\" href=\"#\">Select (1)</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [ngClass]=\"{active: inCreateMode()}\" (click)=\"setMode(ModeType.Create)\" href=\"#\">Create (2)</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [ngClass]=\"{active: inMoveMode()}\" (click)=\"setMode(ModeType.Move)\"  href=\"#\">Move (3)</a>\n    </li>\n  </ul>\n</div>\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\nimport {RepositionService} from \"./reposition.service\";\nimport {Deactivatable} from \"./deactivatable\";\nimport {EdgeCreationService} from \"./edge-creation.service\";\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service responsible for determining in which mode the drawing tool resides.\n * If using the service, the mode should be read by subscribing to the modeObservable.\n * When a mode is switch any Deactivatable service is deactivated.\n * Note that you have to manually add your Deactivatable to the constructor.\n */\nexport class ModeService {\n  private deactivatables: Deactivatable[];\n  private mode: BehaviorSubject<Mode>;\n\n  /**\n   * Observable wrapper around the mode. You can use this to subscribe to mode updates.\n   */\n  public readonly modeObservable: Observable<Mode> = new Observable<Mode>();\n\n\n  constructor(repositionService: RepositionService,\n              edgeCreationService: EdgeCreationService,\n              keyboardEventCallerService: KeyboardEventCallerService) {\n    this.deactivatables = [repositionService, edgeCreationService];\n    this.mode = new BehaviorSubject<Mode>(Mode.Select);\n    this.modeObservable = this.mode.asObservable();\n\n    keyboardEventCallerService.addCallback(['Control', \"keydown\", 'any'], (event => {\n      this.setMode(Mode.Create);\n    }));\n    keyboardEventCallerService.addCallback(['Control', \"keyup\", 'any'], (event => {\n      this.setMode(Mode.Select);\n    }));\n\n    keyboardEventCallerService.addCallback(['Shift', \"keydown\", 'any'], (event => {\n      this.setMode(Mode.Move);\n    }));\n    keyboardEventCallerService.addCallback(['Shift', \"keyup\", 'any'], (event => {\n      this.setMode(Mode.Select);\n    }));\n\n  }\n\n  /**\n   * Sets the mode and multi-casts this update to all subscribed.\n   * In addition to this all deactivatables are deactivated.\n   * @param mode New mode value\n   */\n  public setMode(mode: Mode): void {\n    if (this.getLatestMode() !== mode) {\n      this.mode.next(mode);\n      this.deactivatables.forEach(d => d.deactivate());\n    }\n  }\n\n  /**\n   * Returns what the mode was set to in the last update.\n   * This should be used to initialise objects when they are creation.\n   * After creation they should rely on subscription to the observable for updates.\n   */\n  public getLatestMode(): Mode {\n    return this.mode.getValue();\n  }\n}\n\nexport enum Mode {\n  Select = 1,\n  Create = 2,\n  Move = 3\n}\n","import {Edge} from \"./edge\";\nimport {Node} from \"./node/node\";\nimport {SerialisedDiagram} from \"../serialisation/serialised-data-structures/serialised-diagram\";\nimport {Position} from \"./position\";\n\n\nexport class Diagram {\n  public edges: Edge[];\n  public nodes: Node[];\n\n\n  constructor(nodes: Node[] = [], edges: Edge[] = []) {\n    this.edges = edges;\n    this.nodes = nodes;\n  }\n\n  public getDimensions(): {\n    topY: number,\n    bottomY: number,\n    leftX: number,\n    rightX: number,\n    width: number,\n    height: number\n  } {\n    if (this.edges.length === 0 && this.nodes.length === 0) {\n      return {\n        topY: 0,\n        bottomY: 0,\n        leftX: 0,\n        rightX: 0,\n        width: 0,\n        height: 0\n      }\n    }\n\n    let result = {\n      topY: 5000,\n      bottomY: -5000,\n      leftX: 5000,\n      rightX: -5000,\n      height: 0,\n      width: 0,\n    }\n\n    const update = (x: number, y: number) => {\n      if (x >= result.rightX) { result.rightX = x; }\n      if (x <= result.leftX) { result.leftX = x; }\n      if (y >= result.bottomY) { result.bottomY = y; }\n      if (y <= result.topY) { result.topY = y; }\n    }\n\n    const updatePos = (pos: Position) => update(pos.x, pos.y);\n\n    this.nodes.forEach(node => {\n      updatePos(node.position);\n      updatePos(Position.add(new Position(node.width, node.height), node.position));\n    });\n\n    this.edges.forEach(edge => edge.getAllPoints().forEach(pos => updatePos(pos)));\n\n    result.height = result.bottomY - result.topY;\n    result.width = result.rightX - result.leftX;\n    return result;\n  }\n\n  public serialise(): SerialisedDiagram {\n    let serialisedNodes = this.nodes.map((node) => node.serialise());\n    let serialisedEdges = this.edges.map((edge) => edge.serialise());\n\n    for (let edgeIndex = 0; edgeIndex < this.edges.length; edgeIndex++) {\n      let serialisedEdge = serialisedEdges[edgeIndex];\n      let actualEdge = this.edges[edgeIndex];\n\n      if (actualEdge.startNode !== undefined) {\n        serialisedEdge.startNodeId = this.nodes.indexOf(actualEdge.startNode);\n      }\n\n      if (actualEdge.endNode !== undefined) {\n        serialisedEdge.endNodeId = this.nodes.indexOf(actualEdge.endNode);\n      }\n    }\n    return {\n      edges: serialisedEdges,\n      nodes: serialisedNodes\n    }\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {SelectionService} from \"./selection.service\";\nimport {Diagram} from \"../../model/diagram\";\nimport {Position} from \"../../model/position\";\nimport {DiagramContainerService} from \"./diagram-container.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * The drag selection service allow for click and drag selection of nodes and edges.\n * Nodes are selected if they are fully inside the selection area.\n * Edges are selected if both their end and start point lie in the selected area.\n */\nexport class DragSelectionService {\n  private _start?: Position;\n  private _end?: Position;\n  private _diagram: Diagram;\n  // emitted coordinates are in the form [start.x, start.y, end.x, end.y]\n  // if the dragSelectionService is deactivated [] is sent.\n  public readonly startEndChangeEmitter: EventEmitter<Array<number>> = new EventEmitter<Array<number>>();\n\n  constructor(private selectionService: SelectionService,\n              private diagramContainerService: DiagramContainerService) {\n    this._diagram = diagramContainerService.get();\n    diagramContainerService.diagramObservable.subscribe(diagram => this._diagram = diagram);\n  }\n\n  public isActive(): boolean {\n    return this._start !== undefined && this._end !== undefined;\n  }\n\n  public activate(position: Position): void {\n    this._start = position;\n    this._end = position;\n    this.selectionService.deselect();\n    this.startEndChangeEmitter.emit([this._start!.x, this._start!.y, this._end!.x, this._end!.y]);\n  }\n\n  public update(position: Position): void {\n    if (!this.isActive()) {\n      throw new Error('Service should be activated before it\\'s updated.');\n    }\n\n    this.selectionService.deselect();\n    this._end = position;\n\n    this._diagram?.nodes.forEach(node => {\n      let nodeStart = node.position.getDeepCopy();\n      let nodeEnd = Position.add(node.position, new Position(node.width, node.height));\n      console.log()\n      if (Position.liesBetween(this._start!, nodeStart, this._end!) &&\n        Position.liesBetween(this._start!, nodeEnd, this._end!)) {\n        this.selectionService.add(node);\n      }\n    });\n\n    this._diagram?.edges.forEach(edge => {\n      if (Position.liesBetween(this._start!, edge.getStartPosition(), this._end!) &&\n        Position.liesBetween(this._start!, edge.getEndPosition(), this._end!)) {\n        this.selectionService.add(edge);\n      }\n    });\n\n    this.startEndChangeEmitter.emit([this._start!.x, this._start!.y, this._end!.x, this._end!.y]);\n  }\n\n  public deactivate(): void {\n    this._start = undefined;\n    this._end = undefined;\n    this.startEndChangeEmitter.emit([]);\n  }\n\n  get start(): Position | undefined {\n    return this._start;\n  }\n\n  get end(): Position | undefined {\n    return this._end;\n  }\n}\n","import {Position} from '../position';\nimport {SerialisedNode} from \"../../serialisation/serialised-data-structures/serialised-node\";\nimport {Style} from \"@angular/cli/lib/config/schema\";\n\nexport abstract class Node {\n  private _width: number;\n  private _height: number;\n  private _position: Position;\n  private _text: string;\n  private _hasDoubleBorder: boolean;\n\n  get width(): number {\n    return this._width;\n  }\n\n  set width(value: number) {\n    this._width = value;\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  set height(value: number) {\n    this._height = value;\n  }\n\n  get position(): Position {\n    return this._position;\n  }\n\n  set position(value: Position) {\n    this._position = value;\n  }\n\n  get text(): string {\n    return this._text;\n  }\n\n  set text(value: string) {\n    this._text = value;\n  }\n\n  get hasDoubleBorder(): boolean {\n    return this._hasDoubleBorder;\n  }\n\n  set hasDoubleBorder(value: boolean) {\n    this._hasDoubleBorder = value;\n  }\n\n\n\n  protected constructor(width: number, height: number, position: Position) {\n    this._width = width;\n    this._height = height;\n    this._position = position;\n    this._text = \"\";\n    this._hasDoubleBorder = false;\n  }\n\n  public getTextLines(): string[] {\n    return this._text.split(\"\\\\n\");\n  }\n\n  public abstract getDeepCopy(): Node;\n\n  protected abstract getAllOffsets(): Position[];\n\n  /**\n   * Returns the node type name. This is used for serialisation.\n   */\n  public abstract getNodeTypeName(): string;\n\n  public getPositionOfAttachment(index: number): Position {\n    return this.getAllAttachmentPoints()[index];\n  }\n\n  public isValidAttachment(index: number): boolean {\n    return 0 <= index && index < this.getAllOffsets().length;\n  }\n\n  public getAllAttachmentPoints(): Position[] {\n   return this.getAllOffsets().map(offset => Position.add(offset, this._position));\n  }\n\n\n  public getAllResizePoints(): Position[] {\n    return [ new Position(this._width / 2, 0),//Up\n      new Position(this.width, 0), //up-right\n      new Position(this._width, this._height / 2), //Right\n      new Position(this.width, this.height), // right,down\n      new Position(this._width / 2, this._height), //Down\n      new Position(0, this._height), //Down,left\n      new Position(0, this._height / 2), // Left\n      new Position(0, 0), // up, left\n    ];\n  }\n\n  // Be careful with settings the fill to none as that will cause the body of the node to not be clickable.\n  public styleObject: {\n    [key: string]: number | string,\n  } = {\n    'fill': 'white',\n    'stroke': 'black',\n    'stroke-width': 2,\n    'fill-opacity': 1,\n    'stroke-opacity': 0.75,\n  };\n\n  public get styleKeys(): string[] {\n    return Object.keys(this.styleObject);\n  }\n\n  public serialise(): SerialisedNode {\n    return {\n      type: this.getNodeTypeName(),\n      width: this._width,\n      height: this._height,\n      position: this._position.serialise(),\n      text: this._text,\n      hasDoubleBorder: this._hasDoubleBorder,\n      styleObject: Node.copyStyleObject(this.styleObject)\n    }\n  }\n\n  public static copyStyleObject(obj: StyleObject): StyleObject {\n    return Object.entries(obj).reduce(\n      (obj, [key, value]) => {\n        obj[key] = value\n        return obj;\n      },\n      {} as StyleObject\n    );\n  }\n}\n\nexport type StyleObject = {\n  [key: string]: string | number;\n}\n\nexport enum AttachmentDirection {\n  North,\n  NorthEast,\n  East,\n  SouthEast,\n  South,\n  SouthWest,\n  West,\n  NorthWest\n}\n\n","import { Injectable } from '@angular/core';\nimport {Position} from \"../../model/position\";\nimport {ZoomService} from \"./zoom.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LensOffsetService {\n  private isInOffsetChangeMode: boolean = false;\n  private startPosition?: Position;\n  constructor(private zoomService: ZoomService) { }\n\n  public activate(position: Position): void {\n    this.isInOffsetChangeMode = true;\n    this.startPosition = position;\n  }\n\n  public isActive () {\n    return this.isInOffsetChangeMode;\n  }\n\n  public update(position: Position) {\n    if (this.isActive()) {\n      let difference = Position.subtract(this.startPosition!, position);\n      let x = difference.x;\n      let y = difference.y;\n      console.log(x + \",\" + y)\n      this.zoomService.setXY(x, y);\n      this.startPosition = position;\n    }\n  }\n\n\n  public deactivate(): void {\n    this.isInOffsetChangeMode = false;\n    this.startPosition = undefined;\n  }\n}\n","<svg:g *ngIf=\"diagram\">\n  <svg:g *ngFor=\"let lifeline of diagram.lifelines\"lifeline-node [lifeline]=\"lifeline\"></svg:g>\n</svg:g>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SequenceDiagram} from \"../../model/sequence-diagram/sequence-diagram\";\n\n@Component({\n  selector: '[sequence-diagram]',\n  templateUrl: './sequence-diagram.component.html',\n  styleUrls: ['./sequence-diagram.component.scss']\n})\nexport class SequenceDiagramComponent {\n  @Input() diagram?: SequenceDiagram;\n}\n","import {Component, ElementRef, ErrorHandler, OnInit, ViewChild} from '@angular/core';\nimport {Node} from \"../../model/node/node\";\nimport {NgbActiveModal, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {DeletionService} from \"../services/deletion.service\";\nimport {CachingService} from \"../services/caching/caching.service\";\nimport {cd} from \"../../model/examples/cd\";\nimport {fsm} from \"../../model/examples/fsm\";\nimport {Diagram} from \"../../model/diagram\";\nimport {deserialiseDiagram} from \"../../serialisation/deserialise/deserialise-diagram\";\nimport {DiagramContainerService} from \"../services/diagram-container.service\";\nimport {SerialisedDiagram} from \"../../serialisation/serialised-data-structures/serialised-diagram\";\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {catchError} from \"rxjs/operators\";\n\n\n\n@Component({\n  selector: 'app-diagram-management-modal',\n  templateUrl: './diagram-management-modal.component.html',\n  styleUrls: ['./diagram-management-modal.component.scss']\n})\nexport class DiagramManagementModalComponent implements OnInit, ErrorHandler{\n  @ViewChild('deleteModal') deleteModal!: ElementRef;\n  @ViewChild('editModal') editModal!: ElementRef;\n\n  dbEntries: Array<DatabaseDiagramEntry> | undefined;\n  selectedIndex = -1;\n\n  ngOnInit() {\n    this.http.get('/api/diagram/all/me').subscribe(\n      (data:any) => {\n        this.dbEntries =data\n      },error =>  {\n        //TODO Open error modal or something\n        this.handleError(error)\n      })\n  }\n\n  get selectedDiagram(): Diagram | undefined {\n    if(!this.dbEntries){\n      return;\n    }\n    return this.selectedIndex === -1  ? undefined : deserialiseDiagram(this.dbEntries[this.selectedIndex].serialisedDiagram);\n  }\n\n  constructor(public modal: NgbActiveModal,\n              private modalService: NgbModal,\n              private diagramContainer: DiagramContainerService, private http: HttpClient) {\n  }\n\n  setDiagram() {\n    if (this.selectedIndex !== -1 && this.dbEntries != undefined) {\n      this.diagramContainer.set(deserialiseDiagram(this.dbEntries[this.selectedIndex].serialisedDiagram));\n    }\n  }\n\n  triggerDeleteModal() {\n    this.modalService.open(this.deleteModal);\n  }\n\n  delete() {\n    if(this.dbEntries && this.dbEntries[this.selectedIndex]) {\n      this.http.delete('/api/diagram/',{params: new HttpParams().set(\"id\", String(this.dbEntries[this.selectedIndex].id))}).subscribe(\n        (data:any) => {\n            this.dbEntries = data; this.selectedIndex = -1;\n        },error =>  {\n          //TODO Open error modal or something\n          this.handleError(error)\n      })\n    }\n  }\n\n  save (){\n    // return axios.post('/api/diagram/',{serializedDiagram:\"diagram\"}).then(response => this.userFullName = response.data)\n  }\n  updateChanges() {\n    if(this.dbEntries && this.dbEntries[this.selectedIndex]){\n      this.http.put('/api/diagram/',this.dbEntries[this.selectedIndex]).subscribe(\n        (data:any) => {\n        },error =>  {\n          //TODO Open error modal or something\n          this.handleError(error)\n        })\n    }\n  }\n\n  triggerEditModal() {\n    this.modalService.open(this.editModal);\n  }\n\n  toggleVisibility() {\n    if (this.selectedIndex !== -1 && this.dbEntries) {\n      this.http.get('/api/diagram/toggle/visible',{params: new HttpParams().set(\"id\",String(this.dbEntries[this.selectedIndex].id))}).subscribe(\n        (data:any) => {\n        },error =>  {\n          //TODO Open error modal or something\n          this.handleError(error)\n        })\n    }\n  }\n\n  handleError(error: any) {\n    console.log(error)\n  }\n\n}\n\n// Todo: Match this up with the actual DB structure once it is known\nexport type DatabaseDiagramEntry = {\n  id: number,\n  title: string,\n  lastModified: Date,\n  visible: boolean,\n  serialisedDiagram: SerialisedDiagram\n}\n","<div class=\"modal-header text-center\">\n  <h4 class=\"modal-title\" id=\"modal-title\">Diagram Management</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"d-flex flex-row\">\n    <div class=\"flex-grow-1\">\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Last Modified</th>\n          <th scope=\"col\"></th>\n          <th scope=\"col\"></th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let dbEntry of dbEntries; index as i\"\n            (click)=\"selectedIndex = i\" class=\"clickable\"\n            [ngClass]=\"{selected: i === selectedIndex}\">\n          <td>{{dbEntry.title}}</td>\n          <td>{{dbEntry.lastModified | date:'dd/MM/yyyy'}}</td>\n          <td class=\"icon\">\n            <button class=\"btn btn-outline-secondary text-center\" style=\"width: 50px\" (click)=\"triggerEditModal()\"\n                    ngbTooltip=\"Edit Title\" placement=\"top\">\n              <fa-icon [icon]=\"['far', 'edit']\"></fa-icon>\n            </button>\n          </td>\n          <td class=\"icon\">\n            <button class=\"btn btn-outline-info text-center\"\n                    style=\"width: 50px\"\n                    (click)=\"toggleVisibility()\"\n                    ngbTooltip=\"Visibility\" placement=\"top\">\n              <fa-icon *ngIf=\"dbEntry.visible\" [icon]=\"['far', 'eye']\"></fa-icon>\n              <fa-icon *ngIf=\"!dbEntry.visible\" [icon]=\"['far', 'eye-slash']\"></fa-icon>\n            </button>\n          </td>\n          <td class=\"icon\">\n            <button class=\"btn btn-outline-danger text-center\" style=\"width: 50px\" (click)=\"triggerDeleteModal()\"\n                    ngbTooltip=\"Delete\" placement=\"top\">\n              <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    </div>\n\n    <div class=\"border-left\">\n      <svg width=\"500\" height=\"500\">\n        <g *ngIf=\"selectedDiagram\" [diagram]=\"selectedDiagram!\" diagram-preview ></g>\n      </svg>\n    </div>\n  </div>\n\n\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\"\n          ngbAutofocus\n          class=\"btn btn-outline-primary\"\n          (click)=\"modal.close('Ok click'); setDiagram()\">\n    Import Diagram\n  </button>\n</div>\n\n<ng-template #deleteModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-danger\" *ngIf=\"dbEntries\">Delete {{dbEntries[selectedIndex].title}}</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div *ngIf=\"dbEntries\">Are you sure you want to delete {{dbEntries[selectedIndex].title}}?</div>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.close()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"modal.close(); delete()\">Delete</button>\n  </div>\n</ng-template>\n\n<ng-template #editModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">Edit Title</h4>\n  </div>\n  <div class=\"modal-body\">\n    <input class=\"form-control\"*ngIf=\"dbEntries\"  [(ngModel)]=\"dbEntries[selectedIndex].title\" type=\"text\">\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"modal.close(); updateChanges();\">Save</button>\n  </div>\n</ng-template>\n","import {RectangleNode} from \"./rectangle-node\";\n\nexport class ActorNode extends RectangleNode {\n  getNodeTypeName(): string {\n    return 'ActorNode';\n  }\n\n  getDeepCopy(): ActorNode {\n    return new ActorNode(this.width, this.height, this.position.getDeepCopy());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsContainerService {\n  public readonly grid: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  constructor() { }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Diagram} from \"../../model/diagram\";\nimport {Edge} from \"../../model/edge\";\nimport {DiagramContainerService} from \"./diagram-container.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  public diagramEmitter: EventEmitter<Diagram> = new EventEmitter<Diagram>();\n  constructor(private diagramContainer: DiagramContainerService) { }\n\n  public emit(diagram: Diagram) {\n    this.diagramContainer.set(diagram);\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\" id=\"modal-title\">Save Diagram</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"form-group d-flex\">\n    <label for=\"filenameInput\">Name: </label>\n    <input type=\"text\" class=\"form-control flex-grow-1\" id=\"filenameInput\" [(ngModel)]=\"exportService.filename\">\n  </div>\n  <div class=\"d-flex justify-content-around\">\n    <button class=\"btn btn-outline-primary flex-grow-1 m-2\"\n            (click)=\"exportAsPNG()\"\n            ngbTooltip=\"Visual format which can easily be included in documents. Note you can not import a PNG in\nthis tool to edit it further.\"\n            placement=\"bottom\">\n      Save as PNG\n    </button>\n    <button class=\"btn btn-outline-primary flex-grow-1 m-2\"\n            (click)=\"exportAsJSON()\"\n            ngbTooltip=\"In this format you can upload this file to UTML and continue where you left off at a later time.\"\n            placement=\"bottom\">\n      Save as .UTML\n    </button>\n    <button *ngIf=\"isAuthenticated\"\n            class=\"btn btn-outline-primary flex-grow-1 m-2\"\n            (click)=\"saveToDB()\"\n            ngbTooltip=\"You can later resume editing this diagram and you can also make it visible to others using a\nunique URL.\"\n            placement=\"bottom\">\n      Save to Database\n    </button>\n  </div>\n</div>\n\n\n\n\n","import {Component, AfterContentInit} from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ExportService} from \"../services/export.service\";\nimport {Diagram} from \"../../model/diagram\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n\n@Component({\n  selector: 'app-save-modal',\n  templateUrl: './save-modal.component.html',\n  styleUrls: ['./save-modal.component.scss']\n})\nexport class SaveModalComponent implements AfterContentInit {\n  isAuthenticated: boolean = true;\n\n  constructor(public modal: NgbActiveModal,\n              public exportService: ExportService,\n              private selectionService: SelectionService,\n              private http: HttpClient) { }\n\n  ngAfterContentInit(): void {\n    this.selectionService.deselect();\n  }\n\n  exportAsPNG() {\n    this.exportService.exportAsPNG();\n    this.modal.close();\n  }\n\n  exportAsJSON() {\n    this.exportService.exportAsJSON()\n    this.modal.close();\n  }\n\n  saveToDB() {\n    this.http.post('/api/diagram/',this.exportService.getDiagramJSON(this.exportService.filename)).subscribe(\n        (data:any) => {\n          this.modal.close()\n        },error =>  {\n          //TODO Open error modal or something\n          this.handleError(error);\n    });\n  }\n  handleError(error: any) {\n    console.log(\"FIX ME\")\n    console.log(error)\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport {ZoomService} from \"./zoom.service\";\nimport {Position} from \"../../model/position\";\nconst MENUBAROFFSET: number = 50;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MousePositionTransformService {\n  constructor(private zoomService: ZoomService) { }\n\n  public transformPosition(position: Position): Position {\n    position.y -= MENUBAROFFSET;\n\n    position.x *= this.zoomService.getCurrentZoomFactor();\n    position.y *= this.zoomService.getCurrentZoomFactor();\n    position.x += this.zoomService.getXY().x;\n    position.y += this.zoomService.getXY().y;\n\n    return position;\n  }\n\n  public transFormZoomAndMenubar(position: Position): Position {\n    position.y -= MENUBAROFFSET;\n    position.x *= this.zoomService.getCurrentZoomFactor();\n    position.y *= this.zoomService.getCurrentZoomFactor();\n    return position;\n  }\n\n  //without zoom factor\n  public simpleTransform(position: Position): Position {\n    position.y -= MENUBAROFFSET;\n    return position;\n  }\n\n}\n","/**\n * Doubly linked list designed to be used for undo/redo functionality.\n * The size is limited by a certain amount.\n * If adding another node would exceed this amount, the first node in the list is removed.\n */\nexport class SizeBoundDoublyLinkedList<T> {\n  public readonly MAX_SIZE;\n  private _size: number;\n\n  private current: Node<T>;\n  private first: Node<T>;\n  private last: Node<T>\n\n  public get size(): number {\n    return this._size;\n  }\n\n  constructor(maxSize: number, initialElement: T) {\n    this.MAX_SIZE = maxSize;\n    this._size = 1;\n\n    this.current = new Node<T>(initialElement);\n    this.first = this.current;\n    this.last = this.current;\n  }\n\n  /**\n   * Undo a certain action.\n   * This means to set the new current state to state before the old current state.\n   * If you are at the first element of the list, this is not possible and null is returned.\n   * @returns The value of the node before the current node at the time of calling.\n   *          null if at the beginning of the list.\n   */\n  public undo(): T | null {\n    if (this.current.prev === null) {\n      return null;\n    }\n\n    this.current = this.current.prev;\n    return this.current.value;\n  }\n\n  /**\n   * Redo a certain action.\n   * This means to set the new current state to state after the old current state.\n   * If you are at the last element of the list, this is not possible and null is returned.\n   * @returns The value of the node after the current node at the time of calling.\n   *          null if at the end of the list.\n   */\n  public redo(): T | null {\n    if (this.current.next === null) {\n      return null;\n    }\n\n    this.current = this.current.next;\n    return this.current.value;\n  }\n\n  public add(value: T) {\n    // Update size.\n    // If it exceeds the max_size the start of the tree must be pruned.\n    // If not at the end of the tree, the end of the tree must be pruned.\n    if (this.current === this.last) {\n      this._size++;\n\n      if (this._size > this.MAX_SIZE) {\n        this.first = <Node<T>> this.first.next;\n        this.first.prev = null;\n        this._size--;\n      }\n    } else {\n      // Start at 2 to count start and the new node yet to be added.\n      let newSize = 2;\n      let temp: Node<T> = this.first;\n      while (temp !== this.current) {\n        newSize++;\n        temp = <Node<T>> temp.next;\n      }\n      this._size = newSize;\n    }\n\n    let newNode = new Node(value, this.current);\n    this.current.next = newNode;\n    newNode.prev = this.current;\n    this.current = newNode;\n    this.last = this.current;\n  }\n\n  public getCurrentValue(): T {\n    return this.current.value;\n  }\n\n  // Todo: Implement an couple these to buttons\n  // public canUndo(): boolean {\n  //   return this.current.prev !== null;\n  // }\n  //\n  // public canRedo(): boolean {\n  //   return this.current.next !== null;\n  // }\n}\n\nclass Node<T> {\n  public value: T;\n  public prev: Node<T> | null = null;\n  public next: Node<T> | null = null;\n\n  constructor(value: T, prev: Node<T> | null = null) {\n    this.value = value;\n    this.prev = prev;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Node} from \"../../../model/node/node\";\nimport {RectangleNode} from \"../../../model/node/rectangle-node\";\nimport {ClassNode} from \"../../../model/node/class-node\";\nimport {EllipseNode} from \"../../../model/node/ellipse-node\";\nimport {DiamondNode} from \"../../../model/node/diamond-node\";\nimport {HourglassNode} from \"../../../model/node/hourglass-node\";\nimport {ActorNode} from \"../../../model/node/actor-node\";\n\n@Component({\n  selector: '[node-render-dispatch]',\n  templateUrl: './node-render-dispatch.component.html',\n  styleUrls: ['./node-render-dispatch.component.scss']\n})\nexport class NodeRenderDispatchComponent {\n  @Input() node!: Node\n\n  isRectangle(node: Node): boolean {\n    return node instanceof RectangleNode && !(node instanceof ClassNode) && !(node instanceof HourglassNode)\n      && !(node instanceof ActorNode);\n  }\n\n  castToRectangle(node: Node): RectangleNode {\n    return <RectangleNode>node;\n  }\n\n  castToEllipse(node: Node): EllipseNode {\n    return <EllipseNode>node;\n  }\n\n  isEllipse(node: Node): boolean {\n    return node instanceof EllipseNode;\n  }\n\n  castToDiamond(node: Node): DiamondNode {\n    return <DiamondNode>node;\n  }\n\n  isDiamond(node: Node): boolean {\n    return node instanceof DiamondNode;\n  }\n\n  isClass(node: Node): boolean {\n    return node instanceof ClassNode;\n  }\n\n  castToClass(node: Node): ClassNode {\n    return <ClassNode>node;\n  }\n\n  isHourglass(node: Node): boolean {\n    return node instanceof HourglassNode;\n  }\n\n  castToHourglass(node: Node): HourglassNode {\n    return <HourglassNode>node;\n  }\n\n  isActor(node: Node): boolean {\n    return node instanceof ActorNode;\n  }\n\n  castToActor(node: Node): ActorNode {\n    return <ActorNode>node;\n  }\n}\n","<svg:g *ngIf=\"isRectangle(node)\" rectangle-node-render  [node]=\"castToRectangle(node)\"></svg:g>\n<svg:g *ngIf=\"isEllipse(node)\" ellipse-node-render  [node]=\"castToEllipse(node)\"></svg:g>\n<svg:g *ngIf=\"isDiamond(node)\" diamond-node-render  [node]=\"castToDiamond(node)\"></svg:g>\n<svg:g *ngIf=\"isClass(node)\" class-node-render  [node]=\"castToClass(node)\"></svg:g>\n<svg:g *ngIf=\"isHourglass(node)\" hourglass-node-render  [node]=\"castToHourglass(node)\"></svg:g>\n<svg:g *ngIf=\"isActor(node)\" actor-node-render  [node]=\"castToActor(node)\"></svg:g>\n\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {SelectionService} from \"./selection.service\";\nimport {Edge} from \"../../model/edge\";\nimport {Node} from \"../../model/node/node\";\nimport {KnownDeclaration} from \"@angular/compiler-cli/src/ngtsc/reflection\";\nimport {Position} from \"../../model/position\";\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\nimport {Label} from \"../../model/label\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CopyPasteService {\n  private clipboard: Array<Node | Edge> = [];\n  private selected: Array<Node | Edge> = [];\n  public readonly pasteEmitter: EventEmitter<Node | Edge> = new EventEmitter<Node|Edge>();\n\n  constructor(selectionService: SelectionService, keyboardEventCaller: KeyboardEventCallerService) {\n    selectionService.selectedObservable.subscribe(selected => {\n      let edges = selected.filter(e => e instanceof Edge).map(e => <Edge> e);\n      let nodes = selected.filter(e => e instanceof Node).map(e => <Node> e);\n      this.selected = [];\n      this.selected.push(...edges);\n      this.selected.push(...nodes);\n\n    });\n\n    keyboardEventCaller.addCallback(['c', 'keydown', 'ctrl'], (ignored: KeyboardEvent) => {\n      if (this.copyIsAvailable()) {\n        this.doCopy();\n      }\n    });\n\n    keyboardEventCaller.addCallback(['v', 'keydown', 'ctrl'], (ignored: KeyboardEvent) => {\n      if (this.pasteIsAvailable()) {\n        this.doPaste();\n      }\n    });\n  }\n\n  public doCopy(): void {\n    if (!this.copyIsAvailable()) {\n      throw new Error('Trying to copy whilst copy is not available.');\n    }\n\n    this.clipboard = this.selected;\n  }\n\n  public copyIsAvailable(): boolean {\n    return this.selected.length > 0;\n  }\n\n  public doPaste(): void {\n    const OFFSET = 25;\n    if (!this.pasteIsAvailable()) {\n      throw new Error('Trying to paste whilst copy is not available.');\n    }\n\n    this.clipboard.forEach(clipboardElem => {\n      if (clipboardElem instanceof Node) {\n        let copy = (<Node> clipboardElem).getDeepCopy();\n        copy.position.x += OFFSET;\n        copy.position.y += OFFSET;\n        this.pasteEmitter.emit(copy);\n      } else {\n        let copy = (<Edge> clipboardElem).getDeepCopy();\n        let startPos = copy.getStartPosition();\n        let endPos = copy.getEndPosition();\n        copy.startNode = undefined;\n        copy.endNode = undefined;\n        copy.startPosition = Position.add(new Position(OFFSET, OFFSET), startPos);\n        copy.endPosition = Position.add(new Position(OFFSET, OFFSET), endPos);\n        copy.middlePositions = copy.middlePositions.map(pos => Position.add(new Position(OFFSET, OFFSET), pos));\n        this.pasteEmitter.emit(copy);\n      }\n    });\n\n  }\n\n  public pasteIsAvailable(): boolean {\n    return this.clipboard.length > 0;\n  }\n}\n","<svg:rect [attr.x]=\"node.position.x\"\n          [attr.y]=\"node.position.y\"\n          [attr.width]=\"node.width\"\n          [attr.height]=\"node.height\"\n          [ngStyle]=\"node.styleObject\"\n>\n</svg:rect>\n\n<!-- Double border rendering if applicable. -->\n<svg:rect *ngIf=\"node.hasDoubleBorder\"\n          [attr.x]=\"node.position.x + 3\"\n          [attr.y]=\"node.position.y + 3\"\n          [attr.width]=\"node.width - 6\"\n          [attr.height]=\"node.height - 6\"\n          style=\"fill: none; fill-opacity: 0; stroke: black; stroke-opacity: 1\"\n>\n</svg:rect>\n\n<svg:g basic-node-text [node]=\"node\"></svg:g>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {RectangleNode} from \"../../../model/node/rectangle-node\";\n\n@Component({\n  selector: '[rectangle-node-render]',\n  templateUrl: './rectangle-node-render.component.html',\n  styleUrls: ['./rectangle-node-render.component.scss']\n})\nexport class RectangleNodeRenderComponent {\n  @Input() node!: RectangleNode;\n}\n","import {Component, Input} from '@angular/core';\nimport {Label} from \"../../model/label\";\nimport {Position} from \"../../model/position\";\nimport {RepositionService} from \"../services/reposition.service\";\nimport {ModeService} from \"../services/mode.service\";\nimport {ModeAwareComponent} from \"../mode-aware-component\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {LabelRepositionService} from \"../services/label-reposition.service\";\nimport {MousePositionTransformService} from \"../services/mouse-position-transform.service\";\nimport {EditService} from \"../services/edit.service\";\n\n@Component({\n  selector: '[label-component]',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss']\n})\nexport class LabelComponent {\n  @Input() label!: Label;\n  isSelected: boolean = false;\n  inEditMode = false;\n  constructor(private labelRepositionService: LabelRepositionService,\n              private selectionService: SelectionService,\n              private mousePositionTransformService: MousePositionTransformService,\n              private editService: EditService) {\n    selectionService.selectedObservable.subscribe(selectedList => {\n      this.isSelected = selectedList.includes(this.label);\n    });\n\n    this.editService.editElementObservable.subscribe(element => this.inEditMode = element === this.label);\n  }\n\n  handleDoubleClick(ignored: MouseEvent): void {\n    this.editService.activate(this.label);\n  }\n\n  textRows() : string[]{\n    return (this.inEditMode ? this.editService.includeCursor(this.label.value) : this.label.value).split('\\\\n');\n  }\n\n  public handleMouseDown(event: MouseEvent): void {\n    if (!this.isSelected) {\n      this.selectionService.setLabel(this.label);\n    } else {\n      this.labelRepositionService.activate(this.mousePositionTransformService.transformPosition(\n        new Position(event.x, event.y)), this.label);\n    }\n  }\n}\n","<svg:text *ngIf=\"label\"\n          [attr.x]=\"label.position.x\"\n          [attr.y]=\"label.position.y\"\n          (mousedown)=\"handleMouseDown($event)\"\n          (dblclick)=\"handleDoubleClick($event)\"\n          [ngStyle]=\"{'fill': isSelected ? 'red' : 'black', 'cursor': isSelected ? 'move' : 'pointer'}\"\n          dominant-baseline=\"middle\"\n          text-anchor=\"middle\">\n      <svg:tspan *ngFor=\"let labelLine of textRows(); let i = index\" [attr.x]=\"label.position.x\" dy=\"1.2em\">\n        {{labelLine}}\n      </svg:tspan>\n</svg:text>\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\nimport {Position} from \"../../model/position\";\nimport { EndStyle, LineType} from \"../../model/edge\";\nimport {Node} from \"../../model/node/node\";\nimport {DiamondNode} from \"../../model/node/diamond-node\";\nimport {EllipseNode} from \"../../model/node/ellipse-node\";\nimport {RectangleNode} from \"../../model/node/rectangle-node\";\nimport {ForkRejoinNode} from \"../../model/node/fork-rejoin-node\";\nimport {ClassNode} from \"../../model/node/class-node\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreationTypeSelectionService {\n  private readonly nodeTypes: Node[];\n  private currentNodeIndex: number;\n\n  private readonly edgeFormatterProperties: Object[];\n  private currentEdgeFormatterIndex: number;\n\n  constructor() {\n    this.nodeTypes = [\n      new RectangleNode(100, 100, new Position(0, 0)),\n      new EllipseNode(100, 100, new Position(0, 0)),\n      new DiamondNode(100, 100, new Position(0, 0)),\n      new ForkRejoinNode(20, 300, new Position(0, 0)),\n      new ClassNode(250, 100, new Position(0, 0))\n    ];\n    this.currentNodeIndex = 0;\n\n    this.edgeFormatterProperties = [\n      {},\n      {\"endStyle\": EndStyle.SmallFilledArrow},\n      {\"lineType\": LineType.Arc}\n    ];\n    this.currentEdgeFormatterIndex = 1;\n  }\n\n  public getAllEdgeFormatterProperties(): Object[] {\n    return this.edgeFormatterProperties;\n  }\n\n  public getCurrentEdgeIndex(): number {\n    return this.currentEdgeFormatterIndex;\n  }\n\n  public getSelectedProperty(): Object {\n    return this.edgeFormatterProperties[this.currentEdgeFormatterIndex];\n  }\n\n  public setEdgeFormatterProperty(index: number): void {\n    if (index < 0 || index >= this.edgeFormatterProperties.length) {\n      throw new Error(\"The provided index is not validf\");\n    }\n\n    this.currentEdgeFormatterIndex = index;\n  }\n\n  public getAllNodeTypes(): Node[] {\n    return this.nodeTypes;\n  }\n\n  public getSelectedNodeType(): Node {\n    return this.nodeTypes[this.currentNodeIndex].getDeepCopy();\n  }\n\n  public getCurrentNodeIndex(): number {\n    return this.currentNodeIndex;\n  }\n\n  public setNodeType(index: number): void {\n    if (index < 0 || index >= this.nodeTypes.length) {\n      throw new Error(\"The provided index is not validf\");\n    }\n    this.currentNodeIndex = index;\n  }\n\n  getNodeTypeName(index: number) {\n    return this.nodeTypes[index].getNodeTypeName();\n  }\n}\n","import {Edge} from \"../../../model/edge\";\nimport {Node} from \"../../../model/node/node\";\nimport {Position} from \"../../../model/position\";\nimport {Injectable} from \"@angular/core\";\nimport {SnapService} from \"../snap.service\";\nimport {DiagramContainerService} from \"../diagram-container.service\";\nimport {CachingService} from \"../caching/caching.service\";\n\n/**\n * Class responsible for repositioning the start and end points of an edge.\n * This class is meant to be used as a singleton, only a single instance should ever be created.\n * It is also responsible for updating the startNode and endNode properties of the edge if applicable.\n * Lastly it also snaps to attachmentPoints of nodes during updates if their distance is within the SNAP_DISTANCE\n */\n@Injectable({\n  'providedIn': 'root'\n})\nexport class StartEndRepositioner {\n  private nodes: Node[];\n  private readonly SNAP_DISTANCE: number = 25;\n  private edge?: Edge;\n  private isStart?: boolean;\n\n  constructor(private snapService: SnapService,\n              private cachingService: CachingService,\n              diagramContainerService: DiagramContainerService) {\n    this.nodes = diagramContainerService.get().nodes;\n    diagramContainerService.diagramObservable.subscribe(diagram => this.nodes = diagram.nodes);\n  }\n\n  /**\n   * Returns whether the StartEndRepositioner is currently active.\n   * @returns true if active, false otherwise.\n   */\n  public isActive(): boolean {\n    // return this.edge !== undefined && this.isStart !== undefined;\n    return this.edge !== undefined;\n  }\n\n  /**\n   * Activate the repositioner.\n   * @param edge The edge of which the start or end will be repositioned.\n   * @param isStart Set to true if you want to move the start, set to false if you want to move the end.\n   */\n  public activate(edge: Edge, isStart: boolean): void {\n    this.edge = edge;\n    this.isStart = isStart;\n  }\n\n  /**\n   * Update the start/end position to the provided position. Snaps to attachment point if within SNAP_DISTANCE.\n   * @param position\n   */\n  public update(position: Position): void {\n    let foundNode: undefined | Node = undefined;\n    let foundAttachment: undefined | number = undefined;\n\n    for (let node of this.nodes) {\n      let attachmentPoint = StartEndRepositioner.getAttachmentPoint(node, position, this.SNAP_DISTANCE);\n      if (attachmentPoint !== -1) {\n        foundNode = node;\n        foundAttachment = attachmentPoint;\n        break;\n      }\n    }\n\n    if (foundNode !== undefined && foundAttachment !== undefined) {\n      this.set(foundAttachment, foundNode);\n    } else {\n      this.set(position, undefined);\n    }\n  }\n\n  private set(position: Position | number, node: Node | undefined) {\n    if (position instanceof Position) {\n      position = this.snapService.snapIfApplicable(position, 5);\n    }\n\n    if (this.isStart) {\n      this.edge!.startPosition = position;\n      this.edge!.startNode = node;\n    } else {\n      this.edge!.endPosition = position;\n      this.edge!.endNode = node;\n    }\n  }\n\n  /**\n   * Deactivate the repositioner.\n   */\n  public deactivate(): void {\n    this.edge = undefined;\n    this.isStart = undefined;\n    this.cachingService.save();\n  }\n\n  /**\n   * Determine for a certain node on which attachmentPosition a given position lies.\n   * It can allow a certain error, as we can not expect users to be perfectly accurate.\n   * If no attachment point lies within the error, -1 is returned.\n   * @param node The node of which the attachmentPoints will be checked\n   * @param position The position which may lie on an attachment point.\n   * @param allowed_error The index of the attachment on which the given position approximately lies\n   *                      or -1 if it the position does not lie on any attachment points.\n   */\n  public static getAttachmentPoint(node: Node, position: Position, allowed_error: number): number {\n    let attachmentPoints = node.getAllAttachmentPoints();\n    for (let i = 0; i < attachmentPoints.length; i++) {\n      let attachmentPoint = attachmentPoints[i];\n      if (Position.getDistance(attachmentPoint, position) <= allowed_error) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Deactivatable} from \"./deactivatable\";\nimport {AttachmentDirection, Node} from \"../../model/node/node\";\nimport {Position} from \"../../model/position\";\nimport {Edge, LineType} from \"../../model/edge\";\nimport {CreationTypeSelectionService} from \"./creation-type-selection.service\";\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {SelectionService} from \"./selection.service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for creating edges between nodes.\n * The start node of the edge is specified in activate and the end node is specified by setEnd.\n * The service also provides a start and end preview that can be used to provide a preview.\n * Lastly the newEdgeEmitter emits the newly created Edge upon its creation.\n */\nexport class EdgeCreationService implements Deactivatable {\n  private active: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public activityObservable = this.active.asObservable();\n\n  factory: Edge | undefined = undefined;\n\n  private startNode?: Node;\n  private startAttachment?: number;\n\n  public endPreview?: Position;\n  public startPreview?: Position;\n\n  public newEdgeEmitter: EventEmitter<Edge> = new EventEmitter<Edge>();\n\n  constructor(private creationFormatterSelectionService: CreationTypeSelectionService,\n              private selectionService: SelectionService,\n              keyboardEventCallerService: KeyboardEventCallerService) {\n    keyboardEventCallerService.addCallback(['Escape', 'keydown', 'any'], (ignored) => this.deactivate())\n  }\n\n  public activate(factory: Edge): void {\n    this.selectionService.deselect();\n    this.factory = factory;\n    this.active.next(true);\n  }\n\n  public setStart(node: Node, attachment: number) {\n    this.startNode = node;\n    this.startAttachment = attachment;\n    this.endPreview = node.getPositionOfAttachment(attachment);\n    this.startPreview = node.getPositionOfAttachment(attachment);\n  }\n\n  public isActive(): boolean {\n    return this.active.getValue();\n  }\n\n  public startHasBeenSelected() {\n    return this.isActive() && this.startNode !== undefined;\n  }\n\n  public setEnd(endNode: Node, endAttachment: number) {\n    if (this.startNode === undefined || this.startAttachment === undefined) {\n      throw new Error('Trying to set the end before start is set.')\n    }\n\n    if (endNode === this.startNode && endAttachment === this.startAttachment) {\n      return this.cancel();\n    }\n\n    if (!this.isActive()) {\n      throw new Error(\"Trying to set end whilst it is inactive!\");\n    }\n\n    let edge = this.factory!.getDeepCopy();\n    edge.startNode = this.startNode;\n    edge.startPosition = this.startAttachment!;\n    edge.endNode = endNode;\n    edge.endPosition = endAttachment;\n\n    // Arcs must have 1 middle point, so we add it if needed.\n    if (edge.lineType === LineType.Arc) {\n      edge.setDefaultMiddlePointOnArc();\n    }\n\n    this.newEdgeEmitter.emit(edge);\n  }\n\n  public deactivate(): void {\n    this.cancel();\n    this.active.next(false);\n  }\n\n  cancel() {\n    this.startNode = undefined;\n    this.startAttachment = undefined;\n    this.endPreview = undefined;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Position} from \"../../model/position\";\nimport {Deactivatable} from \"./deactivatable\";\nimport {CachingService} from \"./caching/caching.service\";\nimport {SnapService} from \"./snap.service\";\nimport {SelectionService} from \"./selection.service\";\nimport {Node} from \"../../model/node/node\";\nimport {Edge} from \"../../model/edge\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RepositionService implements Deactivatable {\n  private startMousePosition?: Position;\n  private selectedNodes: Array<Node> = [];\n  private nodeStartPositions: Array<Position> = [];\n  private selectedEdges: Array<Edge> = [];\n  private edgeStartPositionsPoints: Array<undefined | Position> = [];\n  private edgeEndPositionsPoints: Array<undefined | Position> = [];\n  private edgeMiddlePositions: Array<Array<Position>> = [];\n\n\n\n  constructor(private snapService: SnapService,\n              private cachingService: CachingService,\n              selectionService: SelectionService) {\n    selectionService.selectedObservable.subscribe(selectedList => {\n      this.selectedNodes = selectedList.filter(n => n instanceof Node).map(n => <Node> n);\n      this.selectedEdges = selectedList.filter(e => e instanceof Edge).map(e => <Edge> e);\n    });\n  }\n\n  public isActive(): boolean {\n    return this.startMousePosition !== undefined;\n  }\n\n  public activate(startPosition: Position): void {\n    this.startMousePosition = startPosition;\n\n    if (this.selectedNodes.length > 0) {\n      this.nodeStartPositions = this.selectedNodes.map(node => node.position);\n    }\n\n    if (this.selectedEdges.length > 0) {\n      console.log(this.selectedEdges)\n      this.edgeStartPositionsPoints = this.selectedEdges.map(e => {\n        return e.startPosition instanceof Position ? e.startPosition : undefined;\n      });\n      this.edgeEndPositionsPoints = this.selectedEdges.map(e => {\n        return e.endPosition instanceof Position ? e.endPosition : undefined;\n      });\n      this.edgeMiddlePositions = this.selectedEdges.map(e => e.middlePositions.map(e => e));\n    }\n  }\n\n  public update(mousePosition: Position): void {\n    let difference = Position.subtract(mousePosition, this.startMousePosition!);\n    this.selectedNodes.forEach((node, index) => {\n      node.position = this.snapService.snapIfApplicable(Position.add(this.nodeStartPositions[index], difference));\n    });\n\n    this.selectedEdges.forEach((edge, edgeIndex) => {\n      this.edgeMiddlePositions[edgeIndex].forEach((initPos, posIndex) => {\n       edge.middlePositions[posIndex] = this.snapService.snapIfApplicable(Position.add(initPos, difference), 10);\n      });\n\n      if (this.edgeStartPositionsPoints[edgeIndex] !== undefined) {\n        edge.startPosition = this.snapService.snapIfApplicable(Position.add(this.edgeStartPositionsPoints[edgeIndex]!, difference), 10)\n      }\n\n      if (this.edgeEndPositionsPoints[edgeIndex] !== undefined) {\n        edge.endPosition = this.snapService.snapIfApplicable(Position.add(this.edgeEndPositionsPoints[edgeIndex]!, difference), 10)\n      }\n    })\n  }\n\n  public deactivate(): void {\n    if (this.isActive()) {\n      this.cachingService.save();\n    }\n    this.startMousePosition = undefined;\n  }\n}\n\nexport interface Positionable {\n  position: Position;\n}\n","import { Injectable } from '@angular/core';\nimport {Position} from \"../../model/position\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnapService {\n  private snapIsActive: boolean = true;\n\n  public isActive(): boolean {\n     return this.snapIsActive;\n  }\n\n  public setSnapState(snapIsActive: boolean): void {\n    this.snapIsActive = snapIsActive;\n  }\n\n  public snapIfApplicable(position: Position, accuracy: number = 10): Position {\n    if (this.snapIsActive) {\n      let corners: Position[] = [\n        new Position(Math.floor(position.x/accuracy)*accuracy, Math.floor(position.y/accuracy)*accuracy),\n        new Position(Math.ceil(position.x/accuracy)*accuracy, Math.floor(position.y/accuracy)*accuracy),\n        new Position(Math.ceil(position.x/accuracy)*accuracy, Math.ceil(position.y/accuracy)*accuracy),\n        new Position(Math.floor(position.x/accuracy)*accuracy, Math.ceil(position.y/accuracy)*accuracy)\n      ];\n      let arr: number[] = new Array(corners.length);\n      for (let i = 0; i < corners.length; i++){\n        arr[i] = Position.getDistance(position, corners[i]);\n      }\n      let min: number = Math.min(...arr);\n      let index: number = arr.indexOf(min);\n      return corners[index]\n    } else {\n      return position\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {SelectionService} from \"../services/selection.service\";\nimport {Edge} from \"../../model/edge\";\nimport {Node} from \"../../model/node/node\";\nimport {EdgeCreationService} from \"../services/edge-creation.service\";\n\n@Component({\n  selector: 'hint-overlay',\n  templateUrl: './hint-overlay.component.html',\n  styleUrls: ['./hint-overlay.component.scss']\n})\nexport class HintOverlayComponent implements OnInit {\n  WIDTH = 400;\n  HEIGHT = 200;\n  private windowHeight: number = 1080;\n  mode: 'node' | 'edge' | 'nothing' | 'edge-creation' = 'node';\n\n  constructor(selectionService: SelectionService, edgeCreationService: EdgeCreationService) {\n    selectionService.selectedObservable.subscribe(selectedList => {\n      if (selectedList.length === 1) {\n        if (selectedList[0] instanceof Node) {\n          this.mode = 'node';\n          return;\n        } else if (selectedList[0] instanceof Edge) {\n          this.mode = 'edge';\n          return;\n        }\n      }\n\n      this.mode = 'nothing'\n    });\n\n    edgeCreationService.activityObservable.subscribe(isActive => this.mode = isActive ? 'edge-creation' : 'nothing');\n  }\n\n  ngOnInit(): void {\n    this.windowHeight = window.innerHeight;\n  }\n\n  get styleObject() {\n    return {\n      top: (this.windowHeight - this.HEIGHT) + 'px',\n      height: this.HEIGHT + 'px',\n      width: this.WIDTH + 'px',\n    }\n  }\n}\n","<div id=\"hint-container\"\n     [ngStyle]=\"styleObject\">\n  <div *ngIf=\"mode === 'node'\" class=\"p-1\">\n    <b>A shape is selected</b>\n    <ul>\n      <li><code>Escape</code> to deselect</li>\n      <li><code>Delete</code> to delete</li>\n      <li>Click-and-drag to move</li>\n      <li>Control-click to open formatting</li>\n      <li>Click other node in creation sidebar to replace</li>\n    </ul>\n  </div>\n\n  <div *ngIf=\"mode === 'edge'\" class=\"p-1\">\n    <b>An edge is selected</b>\n    <ul>\n      <li><code>Escape</code> to deselect</li>\n      <li><code>Delete</code> to delete</li>\n      <li>Click-and-drag on any circles to move them</li>\n      <li>Control-click to open formatting</li>\n      <li>Click other node in creation sidebar to replace</li>\n      <li>Double click to add labels</li>\n    </ul>\n  </div>\n\n  <div *ngIf=\"mode === 'nothing'\" class=\"p-1\">\n    <b>Nothing is selected</b>\n    <ul>\n      <li>Click something to select it</li>\n      <li><code>Shift</code> click-and-drag to select multiple things</li>\n      <li>Click-and-drag and edge from the sidebar to add it</li>\n    </ul>\n  </div>\n\n  <div *ngIf=\"mode === 'edge-creation'\" class=\"p-1\">\n    <b>Edge Creation Mode</b>\n    <ul>\n      <li>Click and hold a green circle to select the start</li>\n      <li>Hold and release on a green circle to select the end</li>\n      <li>Press <code>Escape</code> to stop creating edges.</li>\n    </ul>\n  </div>\n</div>\n","import {Node} from './node'\nimport {Position} from \"../position\";\n\nexport class RectangleNode extends Node {\n  public constructor(width: number, height: number, position: Position) {\n    super(width, height, position);\n  }\n\n  protected getAllOffsets(): Position[] {\n    return [\n      new Position(this.width / 2, 0),\n      new Position(this.width, 0),\n      new Position(this.width, this.height / 2),\n      new Position(this.width, this.height),\n      new Position(this.width / 2, this.height),\n      new Position(0, this.height),\n      new Position(0, this.height / 2),\n      new Position(0, 0),\n    ];\n  }\n\n  getDeepCopy(): Node {\n    let result =  new RectangleNode(this.width, this.height, this.position.getDeepCopy());\n    result.text = this.text;\n    result.hasDoubleBorder = this.hasDoubleBorder;\n    return result;\n  }\n\n  public getNodeTypeName(): string {\n    return 'RectangleNode';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\nimport {CourseSet, ShapeSet} from \"../shapeset-management-modal/shapeset-management-modal.component\";\nimport {courseSets, flattenActive} from \"../shapeset-management-modal/course-sets\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShapeSetContainerService {\n  public readonly shapeSets: BehaviorSubject<CourseSet>;\n  public readonly observable;\n\n  constructor() {\n    this.shapeSets = new BehaviorSubject<CourseSet>(flattenActive(courseSets));\n    this.observable = this.shapeSets.asObservable();\n  }\n}\n","import {SerialisedPosition} from \"../serialised-data-structures/serialised-position\";\nimport {Position} from \"../../model/position\";\n\nexport function deserialisePosition(serialisedPosition: SerialisedPosition): Position {\n  return new Position(serialisedPosition.x, serialisedPosition.y);\n}\n","import { Component, OnInit } from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {SelectionService} from \"../services/selection.service\";\nimport {Edge} from \"../../model/edge\";\nimport {DeletionService} from \"../services/deletion.service\";\nimport {CachingService} from \"../services/caching/caching.service\";\n\n@Component({\n  selector: 'app-edge-formatting-modal',\n  templateUrl: './edge-formatting-modal.component.html',\n  styleUrls: ['./edge-formatting-modal.component.scss']\n})\nexport class EdgeFormattingModalComponent {\n  public edge?: Edge;\n  selectedLabel: 'start' | 'middle' | 'end' = 'start';\n\n  constructor(public modal: NgbActiveModal,\n              selectionService: SelectionService,\n              private deletionService: DeletionService,\n              private cachingService: CachingService) {\n    selectionService.selectedObservable.subscribe(selectedList => {\n      if (selectedList.length === 1 && selectedList[0] instanceof Edge) {\n        this.edge = <Edge> selectedList[0];\n      }\n    });\n  }\n\n  delete(): void {\n    if (this.edge) {\n      this.deletionService.deleteEdge(this.edge);\n      this.edge = undefined;\n    } else {\n      throw new Error(\"Trying to delete an edge from the edge edit menu whilst no edge is selected.\");\n    }\n  }\n\n  cache() {\n    this.cachingService.save();\n  }\n\n  removeLabel(middle: 'start' | 'middle' | 'end'): void {\n    if (!this.edge) { return; }\n    switch (middle) {\n      case \"start\":\n        this.edge.startLabel = undefined;\n        break;\n      case \"middle\":\n        this.edge.middleLabel = undefined;\n        break;\n      case \"end\":\n        this.edge.endLabel = undefined;\n        break;\n    }\n  }\n\n  handleClickedChar(char: string) {\n    switch (this.selectedLabel) {\n      case \"start\":\n        if (this.edge?.startLabel) {\n          this.edge.startLabel.value += char;\n        } else {\n          this.edge?.addStartLabel(char);\n        }\n        break;\n      case \"middle\":\n        if (this.edge?.middleLabel) {\n          this.edge.middleLabel.value += char;\n        } else {\n          this.edge?.addMiddleLabel(char);\n        }\n        break;\n      case \"end\":\n        if (this.edge?.endLabel) {\n          this.edge.endLabel.value += char;\n        } else {\n          this.edge?.addEndLabel(char);\n        }\n        break;\n    }\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\" id=\"modal-title\">Advanced node formatting</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n\n  <div class=\"w-100\" *ngIf=\"edge\" >\n    <div class=\"form-group row px-3\" (click)=\"selectedLabel='start'\">\n      <label class=\"w-25 col-form-label\">Start Label</label>\n      <div class=\"w-75 d-flex\" *ngIf=\"edge.startLabel\">\n        <input class=\"flex-grow-1 form-control form-text\" type=\"text\" [(ngModel)]=\"edge.startLabel.value\">\n        <button class=\"btn btn-outline-danger icon-50 ml-2\"\n                style=\"height: 38px; margin-top: 4px;\"\n                type=\"text\"\n                (click)=\"removeLabel('start');\">\n          <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\n        </button>\n      </div>\n      <button class=\"w-75 btn btn-primary\" *ngIf=\"!edge.startLabel\" (click)=\"edge.addStartLabel()\">\n      Add start label\n      </button>\n    </div>\n\n    <div class=\"form-group row px-3\" (click)=\"selectedLabel='middle'\">\n      <label class=\"w-25 col-form-label\">Middle Label</label>\n      <div class=\"w-75 d-flex\" *ngIf=\"edge.middleLabel\">\n        <input class=\"flex-grow-1 form-control form-text\" type=\"text\" [(ngModel)]=\"edge.middleLabel.value\">\n        <button class=\"btn btn-outline-danger icon-50 ml-2\"\n                style=\"height: 38px; margin-top: 4px;\"\n                type=\"text\"\n                (click)=\"removeLabel('middle');\">\n          <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\n        </button>\n      </div>\n      <button class=\"w-75 btn btn-primary\" *ngIf=\"!edge.middleLabel\" (click)=\"edge.addMiddleLabel()\">\n        Add middle label\n      </button>\n    </div>\n\n    <div class=\"form-group row px-3\" (click)=\"selectedLabel='end'\">\n      <label class=\"w-25 col-form-label\">End Label</label>\n      <div class=\"w-75 d-flex\" *ngIf=\"edge.endLabel\">\n        <input class=\"flex-grow-1 form-control form-text\" type=\"text\" [(ngModel)]=\"edge.endLabel.value\">\n        <button class=\"btn btn-outline-danger icon-50 ml-2\"\n                style=\"height: 38px; margin-top: 4px;\"\n                type=\"text\"\n                (click)=\"removeLabel('end');\">\n          <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\n        </button>\n      </div>\n      <button class=\"w-75 btn btn-primary\" *ngIf=\"!edge.endLabel\" (click)=\"edge.addEndLabel()\">\n        Add end label\n      </button>\n    </div>\n\n    <hr>\n\n    <div class=\"w-100 d-flex flex-row m-2\">\n      <div class=\"flex-grow-0 mr-2\" style=\"line-height: 40px\">Select Label: </div>\n      <div class=\"btn-group btn-group-toggle flex-grow-1\" style=\"height: 40px;\" ngbRadioGroup name=\"radioBasic\" [(ngModel)]=\"selectedLabel\">\n        <label ngbButtonLabel class=\"btn-outline-secondary flex-grow-1\">\n          <input ngbButton type=\"radio\" value=\"start\"> Start\n        </label>\n        <label ngbButtonLabel class=\"btn-outline-secondary flex-grow-1\">\n          <input ngbButton type=\"radio\" value=\"middle\"> Middle\n        </label>\n        <label ngbButtonLabel class=\"btn-outline-secondary flex-grow-1\">\n          <input ngbButton type=\"radio\" value=\"end\"> End\n        </label>\n      </div>\n    </div>\n    <app-special-character-selector (clickChar)=\"handleClickedChar($event)\"></app-special-character-selector>\n\n    <hr>\n\n    <div class=\"form-group row px-3\">\n      <label class=\"w-25 col-form-label\">Line Style</label>\n      <div class=\"w-75\">\n        <select class=\"custom-select\" [(ngModel)]=\"edge!.lineStyle\" (ngModelChange)=\"cache()\">\n          <option [ngValue]=\"0\">Filled</option>\n          <option [ngValue]=\"1\">Dotted</option>\n          <option [ngValue]=\"2\">Dashed</option>\n        </select>\n      </div>\n    </div>\n\n    <div class=\"form-group row px-3\">\n      <label class=\"w-25 col-form-label\">Start Style</label>\n      <div class=\"w-75\">\n        <select class=\"custom-select\" [(ngModel)]=\"edge!.startStyle\" (ngModelChange)=\"cache()\">\n          <option [ngValue]=\"0\">None</option>\n          <option [ngValue]=\"1\">Big Unfilled Arrow</option>\n          <option [ngValue]=\"2\">Filled Diamond</option>\n          <option [ngValue]=\"3\">Unfilled Diamond</option>\n          <option [ngValue]=\"4\">Small Filled Arrow</option>\n        </select>\n      </div>\n    </div>\n\n    <div class=\"form-group row px-3\">\n      <label class=\"w-25 col-form-label\">End Style</label>\n      <div class=\"w-75\">\n        <select class=\"custom-select\" [(ngModel)]=\"edge!.endStyle\" (ngModelChange)=\"cache()\">\n          <option [ngValue]=\"0\">None</option>\n          <option [ngValue]=\"1\">Small Filled Arrow</option>\n          <option [ngValue]=\"2\">Filled Diamond</option>\n          <option [ngValue]=\"3\">Unfilled Diamond</option>\n          <option [ngValue]=\"4\">Big Unfilled Arrow</option>\n        </select>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <div (click)=\"modal.close('Ok click')\">\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\">\n      Delete <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\n    </button>\n  </div>\n  <button type=\"button\" ngbAutofocus class=\"btn btn-success\" (click)=\"modal.close('Ok click')\">\n    Save <fa-icon [icon]=\"['fas', 'save']\"></fa-icon>\n  </button>\n</div>\n\n","import {SerialisedDiagram} from \"../serialised-data-structures/serialised-diagram\";\nimport {Diagram} from \"../../model/diagram\";\nimport {Node} from \"../../model/node/node\";\nimport {deserialiseNode} from \"./deserialise-node\";\nimport {deserialiseEdge} from \"./deserialise-edge\";\n\nexport function deserialiseDiagram(serialisedDiagram: SerialisedDiagram): Diagram {\n  let nodes = serialisedDiagram.nodes.map(n => deserialiseNode(n));\n  let edges = serialisedDiagram.edges.map(e => deserialiseEdge(e));\n\n  for (let i = 0; i < edges.length; i++) {\n    if (serialisedDiagram.edges[i].startNodeId !== undefined) {\n      edges[i].startNode = nodes[serialisedDiagram.edges[i].startNodeId as number];\n   }\n\n    if (serialisedDiagram.edges[i].endNodeId !== undefined) {\n      edges[i].endNode = nodes[serialisedDiagram.edges[i].endNodeId as number];\n    }\n  }\n\n  return new Diagram(nodes, edges);\n}\n","import {Position} from \"./position\";\nimport {SerialisedLabel} from \"../serialisation/serialised-data-structures/serialised-label\";\nimport {deserialiseLabel} from \"../serialisation/deserialise/deserialise-label\";\nimport {Edge} from \"./edge\";\n\nexport class Label {\n  constructor(public value: string,\n              public readonly edgeLocation: EdgeLocation,\n              public offset: Position = Position.zero(),\n              public anchors: Array<PositionCallback> = []) {\n  }\n\n  private get anchor() {\n    return this.anchors[this.edgeLocation as number]();\n  }\n\n  public get position() {\n    if (this.anchors.length !== 3) {\n      throw new Error('There should be exactly 3 acnhors.')\n    }\n\n    return Position.add(this.anchor, this.offset);\n  }\n\n  public set position(position: Position) {\n    this.offset = Position.subtract(position, this.anchor);\n  }\n\n  public serialise(): SerialisedLabel {\n    return {\n      offset: this.offset.serialise(),\n      edgeLocation: this.edgeLocation,\n      value: this.value\n    };\n  }\n\n  public getDeepCopy(): Label {\n    let result =  deserialiseLabel(this.serialise());\n    result.anchors = this.anchors;\n    return result;\n  }\n\n  public getTextLines(): string[] {\n    return this.value.split(\"\\\\n\");\n  }\n}\n\nexport type PositionCallback = () => Position;\n\nexport enum EdgeLocation {\n  START = 0,\n  MIDDLE = 1,\n  END = 2\n}\n","import { Injectable } from '@angular/core';\nimport {Diagram} from \"../../model/diagram\";\nimport {DiagramContainerService} from \"./diagram-container.service\";\nimport {SelectionService} from \"./selection.service\";\nimport {ZoomService} from \"./zoom.service\";\nimport {SettingsContainerService} from \"./settings-container.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportService {\n  private diagram: Diagram;\n  public filename: string = 'yourDiagram';\n\n  constructor(diagramContainer: DiagramContainerService,\n              private selectionService: SelectionService,\n              private zoomService: ZoomService,\n              private settingsContainerService: SettingsContainerService) {\n    this.diagram = diagramContainer.get();\n    diagramContainer.diagramObservable.subscribe(diagram => this.diagram = diagram);\n  }\n\n  public exportAsPNG(): void {\n    let oldGridValue = this.settingsContainerService.grid.getValue();\n    this.settingsContainerService.grid.next(false);\n    this.zoomService.reset();\n    // It takes a bit of time for the zoom to actually change the svg due to change detection.\n    // Therefore we wait 100ms before exporting.\n    setTimeout(() => {\n      let svg :HTMLElement | null = document.getElementById('diagram');\n      let canvas = document.querySelector('canvas');\n\n      if(canvas != null && svg != null){\n        let ctx = canvas.getContext('2d');\n        let data = (new XMLSerializer()).serializeToString(svg);\n        let DOMURL = window.URL || window.webkitURL || window;\n        let img = new Image();\n\n        const MARGIN = 25;\n\n        const width = this.diagram.getDimensions().width + (MARGIN * 2);\n        const height = this.diagram.getDimensions().height + (MARGIN * 2);\n\n\n        img.width = width;\n        img.height = height;\n        canvas.width = width;\n        canvas.height = height;\n\n        alert(`${width} - ${height}`);\n\n        let svgBlob = new Blob([data], {type: 'image/svg+xml;charset=utf-8'});\n        let url = DOMURL.createObjectURL(svgBlob);\n        img.onload = () => {\n          if(ctx != null) {\n            ctx.drawImage(img, -(this.diagram.getDimensions().leftX - MARGIN), -(this.diagram.getDimensions().topY - MARGIN));\n            DOMURL.revokeObjectURL(url);\n            // @ts-ignore\n            let imgURI = canvas\n              .toDataURL('image/png')\n              .replace('image/png', 'image/octet-stream');\n\n            this.triggerDownload(this.filename, imgURI, \"png\");\n            // document!.querySelector('canvas')!.remove();\n          } else {\n            new Error(\"The diagram has disappeared\");\n          }\n        };\n        img.src = url;\n      } else {\n        throw new Error(\"The diagram has disappeared\")\n      }\n      this.settingsContainerService.grid.next(oldGridValue);\n    }, 100);\n  }\n\n  public exportAsJSON() {\n    let theJSON = JSON.stringify(this.diagram?.serialise());\n    let uri: string = \"data:text/json;charset=UTF-8,\" + encodeURIComponent(theJSON)\n    this.triggerDownload(this.filename, uri, \"utml\")\n  }\n\n  public getDiagramJSON(fileName: String){\n    return {serialisedDiagram: JSON.stringify(this.diagram?.serialise()), title: fileName};\n  }\n\n  private triggerDownload(name: string, uri: string, extension: string) {\n    let nameAndExtension = name + \".\" + extension;\n    let element = document.createElement('a');\n    element.setAttribute('href', uri);\n    element.setAttribute('download', nameAndExtension);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n\n}\n","\n<svg:polyline [attr.points]=\"node.getSVGPoints()\"\n              [ngStyle]=\"node.styleObject\"\n>\n</svg:polyline>\n\n<svg:polyline *ngIf=\" node?.hasDoubleBorder\"\n              [attr.points]=\"node.getBorderSVGPoints()\"\n              style=\"fill:none;stroke:black;stroke-width:2;fill-opacity:0.0;stroke-opacity:0.9\"\n>\n</svg:polyline>\n\n<svg:g basic-node-text [node]=\"node\"></svg:g>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {DiamondNode} from \"../../../model/node/diamond-node\";\nimport {EditService} from \"../../services/edit.service\";\n\n@Component({\n  selector: '[diamond-node-render]',\n  templateUrl: './diamond-node-render.component.html',\n  styleUrls: ['./diamond-node-render.component.scss']\n})\nexport class DiamondNodeRenderComponent {\n  @Input() node!: DiamondNode;\n\n}\n","<svg:rect *ngIf=\"visible\"\n          [attr.x]=\"startX\"\n          [attr.y]=\"startY\"\n          [attr.width]=\"endX - startX\"\n          [attr.height]=\"endY - startY\"\n          style=\"fill: red; fill-opacity: 0.1; stroke: darkred; stroke-opacity: 0.5\"/>\n","import { Component, OnInit } from '@angular/core';\nimport {DragSelectionService} from \"../services/drag-selection.service\";\n\n@Component({\n  selector: '[drag-select-preview]',\n  templateUrl: './drag-select-preview.component.html',\n  styleUrls: ['./drag-select-preview.component.scss']\n})\nexport class DragSelectPreviewComponent {\n  // Note that startX <= endX and startY <= endY\n  startX: number = 10;\n  startY: number = 10;\n  endX: number = 110;\n  endY: number = 300;\n\n  visible: boolean = false;\n\n  constructor(dragSelectionService: DragSelectionService) {\n    dragSelectionService.startEndChangeEmitter.subscribe((coordinates: number[]) => {\n      if (coordinates.length !== 4) {\n        this.visible = false;\n      } else {\n        this.visible = true;\n        this.startX = coordinates[0];\n        this.startY = coordinates[1];\n        this.endX = coordinates[2];\n        this.endY = coordinates[3];\n\n        // Swap to enforce startX <= endX and startY <= endY\n        if (this.startX > this.endX) {\n          this.endX = coordinates[0]\n          this.startX = coordinates[2]\n        }\n        if (this.startY > this.endY) {\n          this.endY = coordinates[1]\n          this.startY = coordinates[3]\n        }\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AppComponent} from \"./app.component\";\nimport {DiagramComponent} from \"./diagram/diagram.component\";\nconst routes: Routes = [\n  { path: '', component: DiagramComponent },\n  {path: 'diagram/:id', component: DiagramComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title text-primary\" id=\"modal-title\">\n    Help\n  </h4>\n  <button type=\"bxutton\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\n    <li [ngbNavItem]=\"1\">\n      <a ngbNavLink>Basics</a>\n      <ng-template ngbNavContent>\n        <p>\n          You can click-and-drag in shapes and edges from the sidebar on the right. You can select shapes and edges by clicking on\n          them to add them to your diagram. Then you can click and drag them to move them around. Lastly you can delete and deselect edges and shapes\n          by pressing <code>Delete</code> and <code>Escape</code> respectively.\n        </p>\n\n        <p>\n          You can zoom in and out by clicking the zoom buttons in the navbar. You can <code>Control</code> click\n          on empty space in your diagram to move around.\n        </p>\n\n      </ng-template>\n    </li>\n    <li [ngbNavItem]=\"2\">\n      <a ngbNavLink>Edges</a>\n      <ng-template ngbNavContent>\n        <div>\n          Edges can be created in two ways:\n          <ul>\n            <li>Drag-and-drop from the creation sidebar.</li>\n            <li>Clicking and edge in the sidebar and click-and-dragging between attachment points.</li>\n          </ul>\n        </div>\n        <p>\n          You can select an edge by clicking on it. You can then move its start and end positions. These are either\n          any arbitrary position on the diagram, or attachment points of shapes as indicated by green circles.\n          You can also add and move around middle positions of edges.\n        </p>\n        <p>\n          If you want to change how an edge looks, you have two options. You can firstly select it and click on\n          the edge which you want it to look like in the creation sidebar. Alternatively, you can <code>Control</code>\n          double click the edge to open up the advanced formatting view.\n        </p>\n        <p>\n          If you want to add labels to an edge, you can use the advanced formatting view. Additionally, you can\n          double click close to the start or end of and edge to create a start or end label. Double clicking anywhere\n          else will create a label in the middle.\n        </p>\n      </ng-template>\n    </li>\n    <li [ngbNavItem]=\"3\">\n      <a ngbNavLink>Shapes</a>\n      <ng-template ngbNavContent>\n        <p>\n          Shapes are creating by dragging and dropping from the creation sidebar. They can be selected by clicking on them.\n          When selected, you can move them around by click-and-dragging and resizing is done by click-and-dragging the red\n          circles.\n        </p>\n        <p>\n          You can change the way a shape looks in two ways. You can firstly <code>Control</code> double click it to\n          open the advanced formatting menu. Alternatively, you could select it and click on the shape you want it to\n          look like in the creation sidebar.\n        </p>\n        <p>\n          Changing the text inside a shape is either done through the advanced formatting menu or by double clicking the shape.\n        </p>\n      </ng-template>\n    </li>\n  </ul>\n  <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n\n\n</div>\n<div class=\"modal-footer\">\n  <div class=\"form-check float-left\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"openOnStart\"\n      [checked]=\"openOnStart\"\n      (change)=\"openOnStart = !openOnStart; updateLocalStorage()\"\n    />\n    <label class=\"form-check-label\" for=\"openOnStart\">\n      Open Help on Start\n    </label>\n  </div>\n  <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"modal.close('Ok click')\">Close</button>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-help-modal',\n  templateUrl: './help-modal.component.html',\n  styleUrls: ['./help-modal.component.scss']\n})\nexport class HelpModalComponent implements OnInit {\n  public static readonly LOCAL_STORAGE_KEY = 'showHelpOnStart';\n\n  // Todo: hook this up to cookies\n  openOnStart: boolean = true;\n  active: any = 1;\n\n  constructor(public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    let value = localStorage.getItem(HelpModalComponent.LOCAL_STORAGE_KEY);\n    this.openOnStart = value === null || value === 'true';\n    this.updateLocalStorage();\n  }\n\n  updateLocalStorage() {\n    localStorage.setItem(HelpModalComponent.LOCAL_STORAGE_KEY, this.openOnStart.toString());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {SnapService} from \"../services/snap.service\";\n\n@Component({\n  selector: 'app-move-menu',\n  templateUrl: './move-menu.component.html',\n  styleUrls: ['./move-menu.component.scss']\n})\nexport class MoveMenuComponent implements OnInit {\n\n  constructor(private snapService: SnapService) { }\n\n  public activate() {\n    this.snapService.setSnapState(!this.snapService.isActive())\n  }\n\n  public getSnapIsActive(): boolean {\n    return this.snapService.isActive()\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"form-check\" >\n  <input type=\"checkbox\" class=\"form-check-input\" (change)=\"activate()\" [ngModel]=\"getSnapIsActive()\">\n  <label class=\"form-check-label\" >Snappy</label>\n</div>\n\n<div class=\"form-check\">\n  <input type=\"checkbox\" class=\"form-check-input\" >\n  <label class=\"form-check-label\">Show Attachment Points</label>\n</div>\n\n<div class=\"form-check\">\n  <input type=\"checkbox\" class=\"form-check-input\" >\n  <label class=\"form-check-label\">Show Middle Points</label>\n</div>\n\n<div class=\"form-check\">\n  <input type=\"checkbox\" class=\"form-check-input\" >\n  <label class=\"form-check-label\">Grid</label>\n</div>\n","import {Node} from \"./node\";\nimport {Position} from \"../position\";\n\nexport abstract class PolylineNode extends Node {\n  protected constructor(width: number, height: number, position: Position) {\n    super(width, height, position);\n  }\n\n  public abstract getSVGPoints(): string;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Edge} from \"../../../model/edge\";\nimport {Position} from \"../../../model/position\";\nimport {FixedPointRepositioner} from \"../../services/edge-reposition/fixed-point-repositioner\";\nimport {MousePositionTransformService} from \"../../services/mouse-position-transform.service\";\nimport {SelectionService} from \"../../services/selection.service\";\n\n@Component({\n  selector: '[clickable-new-points]',\n  templateUrl: './clickable-new-points.component.html',\n  styleUrls: ['./clickable-new-points.component.scss']\n})\nexport class ClickableNewPointsComponent {\n  @Input() edge!: Edge;\n  readonly RADIUS: number = 8;\n\n  constructor(private fixedPointRepositioner: FixedPointRepositioner,\n              private mouseTransformer: MousePositionTransformService,\n              private selectionService: SelectionService) { }\n\n  get points(): Position[] {\n    let allPoints = this.edge.getAllPoints();\n    let result = [];\n\n    for (let i = 0; i < allPoints.length - 1; i++) {\n      result.push(Position.multiply(0.5, Position.add(allPoints[i], allPoints[i + 1])));\n    }\n\n    return result;\n  }\n\n  handleMouseDown(event: MouseEvent, index: number): void {\n    this.selectionService.setEdge(this.edge);\n    let position = this.mouseTransformer.transformPosition(new Position(event.x, event.y));\n    this.edge.middlePositions.splice(index, 0, position);\n    this.fixedPointRepositioner.activate(this.edge, position);\n  }\n}\n","<svg:g *ngFor=\"let pos of points; let i = index\">\n  <svg:ellipse [attr.cx]=\"pos.x\"\n               [attr.cy]=\"pos.y\"\n               [attr.rx]=\"RADIUS\"\n               [attr.ry]=\"RADIUS\"\n               (mousedown)=\"handleMouseDown($event, i)\"\n               style=\"fill: cyan; stroke-width: 2; stroke: cyan; fill-opacity: 0.5; stroke-opacity: 0.75; cursor: move\"\n  />\n</svg:g>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import {CourseSet, ShapeSet} from \"./shapeset-management-modal.component\";\nimport {ClassNode} from \"../../model/node/class-node\";\nimport {Position} from \"../../model/position\";\nimport {Edge, EndStyle, LineStyle, LineType} from \"../../model/edge\";\nimport {RectangleNode} from \"../../model/node/rectangle-node\";\nimport {HourglassNode} from \"../../model/node/hourglass-node\";\nimport {ActorNode} from \"../../model/node/actor-node\";\nimport {ForkRejoinNode} from \"../../model/node/fork-rejoin-node\";\nimport {EllipseNode} from \"../../model/node/ellipse-node\";\n\nexport function flattenActive(courseSets: {[key: string]: CourseSet}) {\n  let result: CourseSet = {};\n\n  for (let [_, courseSet] of Object.entries(courseSets)) {\n    for (let [name, shapeSet] of Object.entries(courseSet)) {\n      if (shapeSet.active) {\n        result[name] = shapeSet\n      }\n    }\n  }\n\n  return result;\n}\n\nlet cd: ShapeSet = {nodes: {}, edges: {}, active: true};\nlet classNode = new ClassNode(186, 75, new Position(10, 2));\nlet association = new Edge(new Position(10, 20), new Position(196, 20));\nlet generalisation = new Edge(new Position(10, 20), new Position(196, 20));\ngeneralisation.endStyle = EndStyle.LargeUnfilledArrow;\nlet associationClassEdge = new Edge(new Position(10, 20), new Position(196, 20));\nassociationClassEdge.lineStyle = LineStyle.Dotted;\nclassNode.text = 'ClassName  \\\\n fieldName: type';\nclassNode.text = 'ClassName  \\\\n fieldName: type';\n\ncd.nodes['Class'] = classNode;\ncd.edges['Association'] = association;\ncd.edges['Generalisation'] = generalisation;\ncd.edges['Dotted Assocation'] = associationClassEdge;\n\n\nlet ad: ShapeSet = {nodes: {}, edges: {}, active: true};\nlet activityNode = new RectangleNode(186, 50, new Position(10, 2));\nactivityNode.text = \"Do Something\"\nlet arrow = new Edge(new Position(10, 20), new Position(196, 20));\narrow.endStyle = EndStyle.SmallFilledArrow;\n\n\nad.edges['Arrow'] = arrow;\nad.nodes['Activity'] = activityNode;\nad.nodes['Hourglass'] = new HourglassNode(40, 80, new Position(84, 10));\nad.nodes['Actor'] = new ActorNode(40, 80, new Position(84, 10));\nad.nodes['Fork/Rejoin'] = new ForkRejoinNode(200, 20, new Position(8, 0));\n\nlet state = new EllipseNode(100, 100, new Position(58, 2));\nstate.text = \"s_0\";\nlet endState = new EllipseNode(100, 100, new Position(58, 2));\nendState.text = \"s_end\";\nendState.hasDoubleBorder = true;\nlet arc = new Edge( new Position(10, 5), new Position( 196, 5));\narc.lineType = LineType.Arc;\narc.endStyle = EndStyle.SmallFilledArrow;\narc.middlePositions.push(new Position(103, 35));\nlet fsm: ShapeSet = {nodes: {}, edges: {}, active: true};\nfsm.nodes['State'] = state;\nfsm.nodes['End State'] = endState;\nfsm.edges['Arrow'] = arrow;\nfsm.edges['Arc'] = arc;\n\nexport let courseSets: {[key: string]: CourseSet};\nlet design: CourseSet = {\n  'Activity Diagram': ad,\n  'Class Diagram': cd\n}\nlet lm: CourseSet = {\n  'FSM': fsm\n}\ncourseSets = {\n  'Design': design,\n  'Languages & Machines': lm\n};\n"],"sourceRoot":"webpack:///"}