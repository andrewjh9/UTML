{"version":3,"sources":["./src/app/export-diagram/export-diagram.component.ts","./src/app/export-diagram/export-diagram.component.html","./src/serialisation/deserialise/deserialise-edge.ts","./src/app/node-compontents/basic-node-text/basic-node-text.component.html","./src/app/node-compontents/basic-node-text/basic-node-text.component.ts","./src/model/position.ts","./src/app/node-compontents/below-text-node/below-text-node.component.html","./src/app/node-compontents/below-text-node/below-text-node.component.ts","./src/app/drag-drop-preview/drag-drop-preview.component.ts","./src/app/drag-drop-preview/drag-drop-preview.component.html","./src/app/edge/edge-render-dispatch/edge-render-dispatch.component.ts","./src/app/edge/edge-render-dispatch/edge-render-dispatch.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/node-compontents/clickable-resize-points/clickable-resize-points.component.html","./src/app/node-compontents/clickable-resize-points/clickable-resize-points.component.ts","./src/app/node-compontents/selected-node-highlight/selected-node-highlight.component.ts","./src/app/node-compontents/selected-node-highlight/selected-node-highlight.component.html","./src/app/creation-sidebar/creation-sidebar.component.ts","./src/app/creation-sidebar/creation-sidebar.component.html","./src/model/examples/fsm.ts","./src/app/node-compontents/actor-node/actor-node-render.component.ts","./src/app/node-compontents/actor-node/actor-node-render.component.html","./src/app/upload-modal/upload-modal.component.ts","./src/app/upload-modal/upload-modal.component.html","./src/model/edge.ts","./src/app/services/edge-reposition/fixed-point-repositioner.ts","./src/app/services/caching/caching.service.ts","./src/app/services/caching/local-storage.service.ts","./src/app/arrow-marker/arrow-marker.component.ts","./src/app/arrow-marker/arrow-marker.component.html","./src/environments/environment.ts","./src/app/special-character-selector/special-character-selector.component.ts","./src/app/special-character-selector/special-character-selector.component.html","./src/app/node-compontents/node-editor/node-editor.component.html","./src/app/node-compontents/node-editor/node-editor.component.ts","./src/model/node/fork-rejoin-node.ts","./src/serialisation/deserialise/deserialise-label.ts","./src/model/sequence-diagram/lifeline.ts","./src/app/services/deletion.service.ts","./src/app/services/resize.service.ts","./src/app/formatting-modal/formatting-modal.component.html","./src/app/formatting-modal/formatting-modal.component.ts","./src/app/services/zoom.service.ts","./src/model/node/ellipse-node.ts","./src/app/special-character-row/special-character-row.component.html","./src/app/special-character-row/special-character-row.component.ts","./src/app/services/edit.service.ts","./src/app/edge/edge-render/arc-render.component.html","./src/app/edge/edge-render/arc-render.component.ts","./src/serialisation/deserialise/deserialise-node.ts","./src/app/node-compontents/hourglass-node/hourglass-node-render.component.ts","./src/app/node-compontents/hourglass-node/hourglass-node-render.component.html","./src/app/diagram/diagram.component.ts","./src/app/diagram/diagram.component.html","./src/app/services/label-reposition.service.ts","./src/app/services/diagram-container.service.ts","./src/app/services/drag-drop-creation.service.ts","./src/app/diagram-preview/diagram-preview.component.html","./src/app/diagram-preview/diagram-preview.component.ts","./src/app/json-uri.pipe.ts","./src/app/sequence-edge/sequence-edge.component.ts","./src/app/sequence-edge/sequence-edge.component.html","./src/app/new-edge-preview/new-edge-preview.component.html","./src/app/new-edge-preview/new-edge-preview.component.ts","./src/app/diagram-import/diagram-import.component.ts","./src/app/diagram-import/diagram-import.component.html","./src/app/grid-overlay/grid-overlay.component.html","./src/app/grid-overlay/grid-overlay.component.ts","./src/app/services/keyboard-event-caller.service.ts","./src/app/node-compontents/ellipse-node/ellipse-node-render.component.html","./src/app/node-compontents/ellipse-node/ellipse-node-render.component.ts","./src/model/node/class-node.ts","./src/model/node/hourglass-node.ts","./src/app/icons/json-icon/json-icon.component.ts","./src/app/icons/json-icon/json-icon.component.html","./src/app/edge/edge.component.ts","./src/app/edge/edge.component.html","./src/app/node-compontents/clickable-attachment-points/clickable-attachment-points.component.html","./src/app/node-compontents/clickable-attachment-points/clickable-attachment-points.component.ts","./src/model/node/diamond-node.ts","./src/app/node-compontents/node-component.ts","./src/app/node-compontents/node.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/edge-editor/edge-editor.component.ts","./src/app/mode-aware-component.ts","./src/app/lifeline/lifeline.component.ts","./src/app/lifeline/lifeline.component.html","./src/app/node-compontents/class-node/class-node-render.component.html","./src/app/node-compontents/class-node/class-node-render.component.ts","./src/app/services/selection.service.ts","./src/app/edge/line-render/line-render.component.ts","./src/app/edge/line-render/line-render.component.html","./src/app/selected-editor/selected-editor.component.html","./src/app/selected-editor/selected-editor.component.ts","./src/app/app.module.ts","./src/app/mode-selector/mode-selector.component.ts","./src/app/mode-selector/mode-selector.component.html","./src/app/services/edge-reposition/edge-reposition.service.ts","./src/app/services/mode.service.ts","./src/model/diagram.ts","./src/app/services/drag-selection.service.ts","./src/model/node/node.ts","./src/app/services/lens-offset.service.ts","./src/app/sequence-diagram/sequence-diagram.component.html","./src/app/sequence-diagram/sequence-diagram.component.ts","./src/app/diagram-management-modal/diagram-management-modal.component.ts","./src/app/diagram-management-modal/diagram-management-modal.component.html","./src/model/node/actor-node.ts","./src/app/services/upload.service.ts","./src/app/save-modal/save-modal.component.html","./src/app/save-modal/save-modal.component.ts","./src/app/services/mouse-position-transform.service.ts","./src/app/services/caching/SizeBoundDoublyLinkedList.ts","./src/app/node-compontents/node-render-dispatch/node-render-dispatch.component.ts","./src/app/node-compontents/node-render-dispatch/node-render-dispatch.component.html","./src/app/services/copy-paste.service.ts","./src/app/node-compontents/rectangle-node/rectangle-node-render.component.html","./src/app/node-compontents/rectangle-node/rectangle-node-render.component.ts","./src/app/label/label.component.ts","./src/app/label/label.component.html","./src/app/services/creation-type-selection.service.ts","./src/app/services/edge-reposition/start-end-repositioner.ts","./src/app/services/edge-creation.service.ts","./src/app/services/reposition.service.ts","./src/app/services/snap.service.ts","./src/model/node/rectangle-node.ts","./src/serialisation/deserialise/deserialise-position.ts","./src/app/edge-formatting-modal/edge-formatting-modal.component.ts","./src/app/edge-formatting-modal/edge-formatting-modal.component.html","./src/serialisation/deserialise/deserialise-diagram.ts","./src/model/label.ts","./src/app/services/edge-reposition/arc-middle-repositioner.ts","./src/app/services/export.service.ts","./src/app/node-compontents/diamond-node/diamond-node-render.component.html","./src/app/node-compontents/diamond-node/diamond-node-render.component.ts","./src/app/drag-select-preview/drag-select-preview.component.html","./src/app/drag-select-preview/drag-select-preview.component.ts","./src/app/app-routing.module.ts","./src/app/icons/png-icon/png-icon.component.ts","./src/app/icons/png-icon/png-icon.component.html","./src/app/diagram-download/diagram-download.component.html","./src/app/diagram-download/diagram-download.component.ts","./src/app/move-menu/move-menu.component.ts","./src/app/move-menu/move-menu.component.html","./src/model/node/polyline-node.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nconst EXPORT_FILE_NAME = 'image_download';\r\n\r\n@Component({\r\n  selector: 'app-export-diagram',\r\n  templateUrl: './export-diagram.component.html',\r\n  styleUrls: ['./export-diagram.component.scss']\r\n})\r\n/**\r\n * TODO Refactor, When interface is ready for button to be placed well.\r\n */\r\nexport class ExportDiagramComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit()  : void {\r\n  }\r\n\r\n  export() {\r\n\r\n    let svg :HTMLElement | null = document.getElementById('diagram');\r\n    let canvas = document.querySelector('canvas');\r\n\r\n    if(canvas != null && svg != null){\r\n      let ctx = canvas.getContext('2d');\r\n      let data = (new XMLSerializer()).serializeToString(svg);\r\n      let DOMURL = window.URL || window.webkitURL || window;\r\n      let img = new Image();\r\n      img.width = 1200;\r\n      img.height = 600 ;\r\n      // @ts-ignore\r\n      let svgSize = svg.viewBox.baseVal;\r\n      canvas.width = svgSize.width;\r\n      canvas.height = svgSize.height;\r\n      let svgBlob = new Blob([data], {type: 'image/svg+xml;charset=utf-8'});\r\n      let url = DOMURL.createObjectURL(svgBlob);\r\n        img.onload = () => {\r\n          if(ctx != null) {\r\n            ctx.drawImage(img, 0, 0);\r\n            DOMURL.revokeObjectURL(url);\r\n            // @ts-ignore\r\n            let imgURI = canvas\r\n              .toDataURL('image/png')\r\n              .replace('image/png', 'image/octet-stream');\r\n\r\n            this.triggerDownload(imgURI);\r\n          } else{\r\n              new Error(\"The diagram has disappeared\");\r\n          }\r\n        };\r\n        img.src = url;\r\n    } else{new Error(\"The diagram has disappeared\") }\r\n  }\r\n  triggerDownload (imgURI: any) {\r\n    let evt = new MouseEvent('click', {\r\n      view: window,\r\n      bubbles: false,\r\n      cancelable: true\r\n    });\r\n\r\n    let a = document.createElement('a');\r\n    a.setAttribute('download', EXPORT_FILE_NAME + '.png');\r\n    a.setAttribute('href', imgURI);\r\n    a.setAttribute('target', '_blank');\r\n    a.dispatchEvent(evt);\r\n   // @ts-ignore\r\n    document.querySelector('canvas').remove();\r\n\r\n  }\r\n\r\n\r\n}\r\n","<!--<div ngbDropdown class=\"d-inline-block\">-->\r\n<!--  <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Export</button>-->\r\n<!--  <div *ngFor=\"let format of formats\" ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">-->\r\n<!--    <button ngbDropdownItem>{{ format }}</button>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n<!--<select  id=\"selectExport\"[(ngModel)]=\"selectedFormat\" (change)=\"export()\" [title]=export>-->\r\n<!--  <option *ngFor=\"let format of formats\" [ngValue]=\"format\">{{ format }}</option>-->\r\n<!--</select>-->\r\n\r\n<button class=\"btn btn-outline-success\" (click)=\"export()\">Export to PNG</button>\r\n","import {SerialisedEdge} from \"../serialised-data-structures/serialised-edge\";\r\nimport {Edge} from \"../../model/edge\";\r\nimport {deserialiseLabel} from \"./deserialise-label\";\r\nimport {deserialisePosition} from \"./deserialise-position\";\r\nimport {Position} from \"../../model/position\";\r\nimport {SerialisedPosition} from \"../serialised-data-structures/serialised-position\";\r\n\r\nexport function deserialiseEdge(serialisedEdge: SerialisedEdge): Edge {\r\n  let startPos: number | Position;\r\n  let endPos: number | Position;\r\n  if (isNaN(Number(serialisedEdge.startPosition))) {\r\n    startPos = new Position((serialisedEdge.startPosition as SerialisedPosition).x,\r\n      (serialisedEdge.startPosition as SerialisedPosition).y);\r\n  } else {\r\n    startPos = serialisedEdge.startPosition as number;\r\n  }\r\n\r\n  if (isNaN(Number(serialisedEdge.endPosition))) {\r\n    endPos = new Position((serialisedEdge.endPosition as SerialisedPosition).x,\r\n      (serialisedEdge.endPosition as SerialisedPosition).y);\r\n  } else {\r\n    endPos = serialisedEdge.endPosition as number;\r\n  }\r\n\r\n  let result = new Edge(startPos, endPos);\r\n\r\n  // Add formatting\r\n  result.lineType = serialisedEdge.lineType;\r\n  result.lineStyle = serialisedEdge.lineStyle;\r\n  result.startStyle = serialisedEdge.startStyle;\r\n  result.endStyle = serialisedEdge.endStyle;\r\n\r\n  result.middlePositions = serialisedEdge.middlePositions.map(p => deserialisePosition(p));\r\n\r\n  // Add labels, if defined.\r\n  if (serialisedEdge.startLabel) {\r\n    result.startLabel = deserialiseLabel(serialisedEdge.startLabel);\r\n    result.startLabel.anchors = result.labelAnchors;\r\n  }\r\n\r\n  if (serialisedEdge.middleLabel) {\r\n    result.middleLabel = deserialiseLabel(serialisedEdge.middleLabel);\r\n    result.middleLabel.anchors = result.labelAnchors;\r\n  }\r\n\r\n  if (serialisedEdge.endLabel) {\r\n    result.endLabel = deserialiseLabel(serialisedEdge.endLabel);\r\n    result.endLabel.anchors = result.labelAnchors;\r\n  }\r\n\r\n  return result;\r\n}\r\n","<svg:text\r\n  [attr.x]=\"node.position.x\"\r\n  [attr.y]=\"node.position.y \"\r\n  [attr.width]=\"node.width\"\r\n  [attr.height]=\"node.height\"\r\n  font-family=\"sans-serif\"\r\n  [attr.font-size]=\"FONT_SIZE\"\r\n  class=\"movable\">\r\n    <svg:tspan\r\n      *ngFor=\"let textLine of node.getTextLines(); let i = index;\"\r\n      [attr.x]=\"centerX\"\r\n      [attr.y]=\"getY(i)\"\r\n      dominant-baseline=\"middle\"\r\n      text-anchor=\"middle\"\r\n      (click)=\"setActive(i)\">\r\n        {{textLine}}\r\n    </svg:tspan>\r\n</svg:text>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Node} from \"../../../model/node/node\";\r\nimport {EditService} from \"../../services/edit.service\";\r\n\r\n@Component({\r\n  selector: '[basic-node-text]',\r\n  templateUrl: './basic-node-text.component.html',\r\n  styleUrls: ['./basic-node-text.component.scss']\r\n})\r\nexport class BasicNodeTextComponent {\r\n  @Input() node!: Node;\r\n  readonly FONT_SIZE = 16;\r\n\r\n  constructor(private editService: EditService) {}\r\n\r\n  get lineAmount(): number {\r\n    return this.node!.getTextLines().length;\r\n  }\r\n\r\n  get centerX(): number {\r\n    return this.node.position.x + this.node.width / 2;\r\n  }\r\n\r\n  get centerY(): number {\r\n    return this.node.position.y + this.node.height / 2;\r\n  }\r\n\r\n  getY(lineIndex: number): number {\r\n    const CENTER_INDEX = Math.floor(this.lineAmount / 2);\r\n    const EVEN_ODD_OFFSET = this.lineAmount % 2 === 0 ? this.FONT_SIZE / 2 : 0;\r\n    let offset = lineIndex - CENTER_INDEX;\r\n    return this.centerY + (offset * this.FONT_SIZE) + EVEN_ODD_OFFSET;\r\n  }\r\n\r\n  setActive(index: number) {\r\n    if (this.editService.isActive()) {\r\n      this.editService.setActiveTextLine(index, false)\r\n    }\r\n  }\r\n}\r\n","import {SerialisedPosition} from \"../serialisation/serialised-data-structures/serialised-position\";\r\n\r\nexport class Position {\r\n  constructor(public x: number, public y: number) {\r\n  }\r\n\r\n  public toString(separator: string = ', ', end: string = ' '): string {\r\n    return `${this.x}${separator}${this.y}${end}`;\r\n  }\r\n\r\n  public getLength(): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y);\r\n  }\r\n\r\n  public getDeepCopy(): Position {\r\n    return new Position(this.x, this.y);\r\n  }\r\n\r\n  public serialise(): SerialisedPosition {\r\n    return {\r\n      x: this.x,\r\n      y: this.y\r\n    }\r\n  }\r\n\r\n  public static add(p1: Position, p2: Position): Position {\r\n    return new Position(p1.x + p2.x, p1.y + p2.y);\r\n  }\r\n\r\n  public static subtract(p1: Position, p2: Position): Position {\r\n    return new Position(p1.x - p2.x, p1.y - p2.y);\r\n  }\r\n\r\n  public static multiply(scalar: number, position: Position): Position {\r\n    return new Position(scalar * position.x, scalar * position.y);\r\n  }\r\n\r\n  public static getDistance(pos1: Position, pos2: Position): number {\r\n    return this.subtract(pos1, pos2).getLength()\r\n  }\r\n\r\n  public static zero(): Position {\r\n    return new Position(0, 0);\r\n  }\r\n\r\n  /**\r\n   * Determines whether some given position lies between two other positions.\r\n   * @param start The start of the area you want to check the middle to be in.\r\n   * @param middle The position for which you want to check whether it lies between.\r\n   * @param end TThe end of the area you want to check the middle to be in.\r\n   * @returns true if the position lies inbetween, false otherwise.\r\n   */\r\n  public static liesBetween(start: Position, middle: Position, end: Position): boolean {\r\n    return ((start.x <= middle.x) && (middle.x <= end.x)) || ((end.x <= middle.x) && (middle.x <= start.x)) &&\r\n      ((start.y <= middle.y) && (middle.y <= end.y)) || ((end.y <= middle.y) && (middle.y <= start.y));\r\n  }\r\n}\r\n","<svg:text\r\n  font-family=\"sans-serif\"\r\n  [attr.font-size]=\"FONT_SIZE\"\r\n  class=\"movable\">\r\n  <svg:tspan\r\n    *ngFor=\"let textLine of node.getTextLines(); let i = index;\"\r\n    [attr.x]=\"centerX\"\r\n    [attr.y]=\"getY(i)\"\r\n    dominant-baseline=\"middle\"\r\n    text-anchor=\"middle\">\r\n    {{textLine}}\r\n  </svg:tspan>\r\n</svg:text>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Node} from \"../../../model/node/node\";\r\n\r\n@Component({\r\n  selector: '[below-node-text]',\r\n  templateUrl: './below-text-node.component.html',\r\n  styleUrls: ['./below-text-node.component.scss']\r\n})\r\nexport class BelowTextNodeComponent {\r\n  @Input() node!: Node;\r\n  constructor() { }\r\n\r\n  readonly FONT_SIZE = 16;\r\n\r\n  get centerX() {\r\n    return this.node.position.x + this.node.width / 2;\r\n  }\r\n\r\n  getY(index: number) {\r\n    return this.node.position.y + this.node.height + (this.FONT_SIZE * (index + 1));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Edge} from \"../../model/edge\";\r\nimport {DragDropCreationService} from \"../services/drag-drop-creation.service\";\r\nimport {Node} from \"../../model/node/node\";\r\n\r\n@Component({\r\n  selector: '[drag-drop-preview]',\r\n  templateUrl: './drag-drop-preview.component.html',\r\n  styleUrls: ['./drag-drop-preview.component.scss']\r\n})\r\nexport class DragDropPreviewComponent {\r\n  current: Node | Edge | undefined = undefined;\r\n\r\n  constructor(dragDropCreationService: DragDropCreationService) {\r\n    dragDropCreationService.selectedObservable.subscribe(value => this.current = value);\r\n  }\r\n\r\n  toEdge() {\r\n    return this.current instanceof Edge ? this.current as Edge : undefined;\r\n  }\r\n\r\n  toNode() {\r\n    return this.current instanceof Node ? this.current as Node : undefined;\r\n  }\r\n\r\n  get x(): number {\r\n    if (this.current === undefined) {\r\n      return -1;\r\n    } else if (this.current instanceof Node) {\r\n      return (this.current as Node).position.x;\r\n    } else {\r\n      return (this.current as Edge).getStartPosition().x;\r\n    }\r\n  }\r\n\r\n  get y(): number {\r\n    if (this.current === undefined) {\r\n      return -1;\r\n    } else if (this.current instanceof Node) {\r\n      return (this.current as Node).position.y;\r\n    } else {\r\n      return (this.current as Edge).getStartPosition().y;\r\n    }\r\n  }\r\n\r\n  get width(): number {\r\n    if (this.current === undefined) {\r\n      return -1;\r\n    } else if (this.current instanceof Node) {\r\n      return (this.current as Node).width;\r\n    } else {\r\n      let edge = this.current as Edge;\r\n      return edge.getEndPosition().x - edge.getStartPosition().x;\r\n    }\r\n  }\r\n\r\n  get height(): number {\r\n    if (this.current === undefined) {\r\n      return -1;\r\n    } else if (this.current instanceof Node) {\r\n      return (this.current as Node).height;\r\n    } else {\r\n      let edge = this.current as Edge;\r\n      return edge.getEndPosition().y - edge.getStartPosition().y;\r\n    }\r\n  }\r\n}\r\n","<svg:g *ngIf=\"toEdge()\" edge-render-dispatch [edge]=\"toEdge()!\"></svg:g>\r\n\r\n<svg:g *ngIf=\"toNode()\" node-render-dispatch [node]=\"toNode()!\"></svg:g>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Edge, LineType} from \"../../../model/edge\";\r\n\r\n@Component({\r\n  selector: '[edge-render-dispatch]',\r\n  templateUrl: './edge-render-dispatch.component.html',\r\n  styleUrls: ['./edge-render-dispatch.component.scss']\r\n})\r\nexport class EdgeRenderDispatchComponent {\r\n  @Input() edge!: Edge;\r\n  @Input() styleObject?: {[key: string]: string | number} = {\r\n    'stroke': 'black',\r\n    'stroke-width': 2\r\n  };\r\n\r\n  isLine() {\r\n    return this.edge.lineType === LineType.Line;\r\n  }\r\n\r\n  isArc() {\r\n    return this.edge.lineType === LineType.Arc;\r\n  }\r\n}\r\n","<svg:g *ngIf=\"isLine()\" line-render-component [edge]=\"edge\" [styleObject]=\"styleObject\"/>\r\n<svg:g *ngIf=\"isArc()\" arc-render-component [edge]=\"edge\" [styleObject]=\"styleObject\"/>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {UploadModalComponent} from \"../upload-modal/upload-modal.component\";\r\nimport {SaveModalComponent} from \"../save-modal/save-modal.component\";\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {CopyPasteService} from \"../services/copy-paste.service\";\r\nimport {CachingService} from \"../services/caching/caching.service\";\r\nimport {DiagramContainerService} from \"../services/diagram-container.service\";\r\nimport {DiagramManagementModalComponent} from \"../diagram-management-modal/diagram-management-modal.component\";\r\nimport {DiagramComponent} from \"../diagram/diagram.component\";\r\nimport {ZoomService} from \"../services/zoom.service\";\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent {\r\n  get NAV_HEIGHT() { return DiagramComponent.NAV_HEIGHT; }\r\n  isAuthenticated = true;\r\n\r\n  constructor(private modalService: NgbModal,\r\n              private copyPasteService: CopyPasteService,\r\n              private cachingService: CachingService,\r\n              private diagramContainer: DiagramContainerService,\r\n              private zoomService: ZoomService) { }\r\n\r\n  copy() {\r\n    this.copyPasteService.doCopy();\r\n  }\r\n\r\n  paste() {\r\n    this.copyPasteService.doPaste();\r\n  }\r\n\r\n  upload() {\r\n    this.modalService.open(UploadModalComponent, {size: 'xl'});\r\n  }\r\n\r\n  save() {\r\n    this.modalService.open(SaveModalComponent);\r\n  }\r\n\r\n  undo() {\r\n    let result = this.cachingService.undo();\r\n    if (result !== null) {\r\n      this.diagramContainer.set(result as Diagram);\r\n    }\r\n  }\r\n\r\n  redo() {\r\n    let result = this.cachingService.redo();\r\n    if (result !== null) {\r\n      this.diagramContainer.set(result as Diagram);\r\n    }\r\n  }\r\n\r\n  openDiagramManagementModal() {\r\n    this.modalService.open(DiagramManagementModalComponent, {size: 'xl'});\r\n  }\r\n\r\n  zoomIn() {\r\n    this.zoomService.updateZoomFactor(true);\r\n  }\r\n\r\n  zoomOut() {\r\n    this.zoomService.updateZoomFactor(false);\r\n\r\n  }\r\n\r\n  help() {\r\n\r\n  }\r\n\r\n  settings() {\r\n\r\n  }\r\n\r\n  login() {\r\n    this.isAuthenticated = !this.isAuthenticated;\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light pb-0 pt-0\">\r\n  <div class=\"collapse navbar-collapse\" style=\"height: 50px;\">\r\n    <ul class=\"navbar-nav mr-auto pb-0 pt-0\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"upload()\" ngbTooltip=\"Open\" placement=\"bottom\">\r\n          <fa-icon [icon]=\"['fas', 'folder-open']\"></fa-icon>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"save()\" ngbTooltip=\"Save\" placement=\"bottom\">\r\n          <fa-icon [icon]=\"['fas', 'save']\"></fa-icon>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"copy()\" ngbTooltip=\"Copy (ctrl+c)\" placement=\"bottom\">\r\n          <fa-icon [icon]=\"['fas', 'copy']\"></fa-icon>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"paste()\" ngbTooltip=\"Paste (ctrl+v)\" placement=\"bottom\">\r\n          <fa-icon [icon]=\"['fas', 'paste']\"></fa-icon>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"undo()\" ngbTooltip=\"Undo (ctrl+z)\" placement=\"bottom\">\r\n          <fa-icon [icon]=\"['fas', 'undo']\"></fa-icon>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"redo()\" ngbTooltip=\"Redo (ctrl+y)\" placement=\"bottom\">\r\n          <fa-icon [icon]=\"['fas', 'redo']\"></fa-icon>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"zoomOut()\" ngbTooltip=\"Zoom Out\" placement=\"bottom\">\r\n          <fa-icon [icon]=\"['fas', 'search-minus']\"></fa-icon>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"zoomIn()\" ngbTooltip=\"Zoom In\" placement=\"bottom\">\r\n          <fa-icon [icon]=\"['fas', 'search-plus']\"></fa-icon>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <ul class=\"navbar-nav ml-auto pb-0 pt-0\">\r\n    <li class=\"nav-item\" *ngIf=\"isAuthenticated\">\r\n      <a class=\"nav-link\" href=\"#\" (click)=\"openDiagramManagementModal()\" ngbTooltip=\"Manage Diagrams\" placement=\"bottom\">\r\n        <fa-icon [icon]=\"['fas', 'tasks']\"></fa-icon>\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" href=\"#\" (click)=\"login()\" ngbTooltip=\"Login\" placement=\"bottom\">\r\n        <fa-icon *ngIf=\"isAuthenticated\" [icon]=\"['fas', 'user']\"></fa-icon>\r\n        <fa-icon *ngIf=\"!isAuthenticated\" [icon]=\"['fas', 'user-slash']\"></fa-icon>\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" href=\"#\" (click)=\"settings()\" ngbTooltip=\"Settings\" placement=\"bottom\">\r\n        <fa-icon [icon]=\"['fas', 'cog']\"></fa-icon>\r\n      </a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" href=\"#\" (click)=\"help()\" ngbTooltip=\"Help\" placement=\"bottom\">\r\n        <fa-icon [icon]=\"['fas', 'question']\"></fa-icon>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n","<svg:g *ngIf=\"node\">\r\n  <svg:ellipse *ngFor=\"let point of node.getAllResizePoints(); let i = index;\"\r\n    [attr.cx]=\"node.position.x + point.x\"\r\n    [attr.cy]=\"node.position.y + point.y\"\r\n    rx=\"5\"\r\n    ry=\"5\"\r\n    style=\"fill:red;stroke:black;stroke-width:2;fill-opacity:1;stroke-opacity:0.9\"\r\n    (mousedown)=\"handleClick($event, i);\">\r\n  </svg:ellipse>\r\n</svg:g>\r\n\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Node} from \"../../../model/node/node\";\r\nimport {EdgeCreationService} from \"../../services/edge-creation.service\";\r\nimport {ResizeService} from \"../../services/resize.service\";\r\nimport {Position} from \"../../../model/position\";\r\n\r\n@Component({\r\n  selector: '[clickable-resize-points]',\r\n  templateUrl: './clickable-resize-points.component.html',\r\n  styleUrls: ['./clickable-resize-points.component.scss']\r\n})\r\nexport class ClickableResizePointsComponent {\r\n  @Input() node?: Node;\r\n\r\n  constructor(private resizeService: ResizeService) {\r\n  }\r\n\r\n  handleClick($event: MouseEvent, resizePointIndex: number) {\r\n    if (this.node === undefined) {\r\n      throw new Error(\"You are clicking on clickable resize points that have no associated node. \" +\r\n        \"This should be impossible\");\r\n    }\r\n    this.resizeService.activate(this.node, resizePointIndex);\r\n  }\r\n  public getPosition(attachmentNumber: number): Position | undefined {\r\n    return this.node?.getPositionOfAttachment(attachmentNumber) ;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SelectionService} from \"../../services/selection.service\";\r\nimport {Node} from \"../../../model/node/node\";\r\nimport {Edge} from \"../../../model/edge\";\r\n\r\n@Component({\r\n  selector: '[selected-node-highlight]',\r\n  templateUrl: './selected-node-highlight.component.html',\r\n  styleUrls: ['./selected-node-highlight.component.scss']\r\n})\r\nexport class SelectedNodeHighlightComponent {\r\n  selectedNodes: Array<Node> = [];\r\n\r\n  constructor(private selectionService: SelectionService) {\r\n    selectionService.selectedObservable.subscribe(newList => {\r\n      this.selectedNodes = newList.filter(elem => elem instanceof Node).map(node => <Node> node);\r\n    });\r\n  }\r\n}\r\n","<!--We offset the selection border to avoid overlap with the actual border of the element as this causes weird rendering. -->\r\n<svg:g *ngFor=\"let node of selectedNodes\">\r\n  <svg:rect\r\n            [attr.x]=\"node.position.x - 1\"\r\n            [attr.y]=\"node.position.y - 1\"\r\n            [attr.width]=\"node.width + 2\"\r\n            [attr.height]=\"node!.height + 2\"\r\n            style=\"fill: none; stroke-width: 1; stroke: red; stroke-opacity: 0.5; stroke-dasharray: 4;\"\r\n  />\r\n\r\n  <svg:g clickable-resize-points [node]=\"node\"/>\r\n</svg:g>\r\n","import {Component} from '@angular/core';\r\nimport {ClassNode} from \"../../model/node/class-node\";\r\nimport {Position} from \"../../model/position\";\r\nimport {Edge, EndStyle, LineType} from \"../../model/edge\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {RectangleNode} from \"../../model/node/rectangle-node\";\r\nimport {DragDropCreationService} from \"../services/drag-drop-creation.service\";\r\nimport {DomSanitizer, SafeHtml} from \"@angular/platform-browser\";\r\nimport {EllipseNode} from \"../../model/node/ellipse-node\";\r\nimport {DiamondNode} from \"../../model/node/diamond-node\";\r\nimport {HourglassNode} from \"../../model/node/hourglass-node\";\r\nimport {ActorNode} from \"../../model/node/actor-node\";\r\nimport {ForkRejoinNode} from \"../../model/node/fork-rejoin-node\";\r\n\r\n@Component({\r\n  selector: 'creation-sidebar',\r\n  templateUrl: './creation-sidebar.component.html',\r\n  styleUrls: ['./creation-sidebar.component.scss']\r\n})\r\nexport class CreationSidebarComponent {\r\n  public static readonly WIDTH: number = 200;\r\n\r\n  constructor(private dragDropCreationService: DragDropCreationService,\r\n              private sanitizer: DomSanitizer) {\r\n\r\n  }\r\n\r\n  get styleObject() {\r\n    return {\r\n      width: CreationSidebarComponent.WIDTH\r\n    }\r\n  }\r\n\r\n  get groups(): {[key: string]: DiagramTypeTemplate} {\r\n    let cd: DiagramTypeTemplate = {nodes: {}, edges: {}};\r\n    let classNode = new ClassNode(186, 75, new Position(10, 2));\r\n    let association = new Edge(new Position(10, 20), new Position(196, 20));\r\n    let generalisation = new Edge(new Position(10, 20), new Position(196, 20));\r\n    generalisation.endStyle = EndStyle.LargeUnfilledArrow;\r\n\r\n    classNode.text = 'ClassName  \\\\n fieldName: type';\r\n\r\n    cd.nodes['Class'] = classNode;\r\n    cd.edges['Association'] = association;\r\n    cd.edges['Generalisation'] = generalisation;\r\n\r\n    let ad: DiagramTypeTemplate = {nodes: {}, edges: {}};\r\n    let activityNode = new RectangleNode(186, 50, new Position(10, 2));\r\n    activityNode.text = \"Do Something\"\r\n    let arrow = new Edge(new Position(10, 20), new Position(196, 20));\r\n    arrow.endStyle = EndStyle.SmallFilledArrow;\r\n\r\n    classNode.text = 'ClassName  \\\\n fieldName: type';\r\n\r\n    ad.nodes['Activity'] = activityNode;\r\n    ad.nodes['Hourglass'] = new HourglassNode(40, 80, new Position(84, 10));\r\n    ad.nodes['Actor'] = new ActorNode(40, 80, new Position(84, 10));\r\n    ad.nodes['Fork/Rejoin'] = new ForkRejoinNode(200, 20, new Position(8, 0));\r\n    cd.edges['Arrow'] = arrow;\r\n\r\n    let state = new EllipseNode(100, 100, new Position(58, 2));\r\n    state.text = \"s_0\";\r\n    let endState = new EllipseNode(100, 100, new Position(58, 2));\r\n    endState.text = \"s_end\";\r\n\r\n    endState.hasDoubleBorder = true;\r\n    let arc = new Edge( new Position(10, 5), new Position( 196, 5));\r\n    arc.lineType = LineType.Arc;\r\n    arc.endStyle = EndStyle.SmallFilledArrow;\r\n    arc.middlePositions.push(new Position(103, 35));\r\n    let fsm: DiagramTypeTemplate = {nodes: {}, edges: {}};\r\n    fsm.nodes['State'] = state;\r\n    fsm.nodes['End State'] = endState;\r\n    fsm.edges['Arrow'] = arrow;\r\n    fsm.edges['Arc'] = arc;\r\n\r\n\r\n    return {\r\n      'Class Diagram': cd,\r\n      'Activity Diagram': ad,\r\n      'Finite State Machine': fsm,\r\n    }\r\n  }\r\n\r\n  get groupKeys() {\r\n    return Object.keys(this.groups);\r\n  }\r\n\r\n  Object = Object;\r\n\r\n  handleMouseDown(event: MouseEvent, edgeOrNode: Edge | Node) {\r\n    if (!this.dragDropCreationService.isActive()) {\r\n      this.dragDropCreationService.activate(edgeOrNode);\r\n    } else {\r\n      console.log('Drag and drop service is already active.');\r\n    }\r\n  }\r\n\r\n  handleMouseUp($event: MouseEvent) {\r\n    if (this.dragDropCreationService.isActive()) {\r\n      this.dragDropCreationService.cancel();\r\n    }\r\n  }\r\n\r\n  getSafePreview(groupKey: string, nodeKey: string): SafeHtml {\r\n    return this.sanitizer.bypassSecurityTrustHtml(this.groups[groupKey].nodes[nodeKey].preview);\r\n  }\r\n\r\n  isLine(edge: Edge): boolean {\r\n    return edge.lineType === LineType.Line;\r\n  }\r\n\r\n  isArc(edge: Edge): boolean {\r\n    return edge.lineType === LineType.Arc;\r\n  }\r\n\r\n  toClassNode(node: Node): ClassNode | undefined {\r\n    return node instanceof ClassNode ? node as ClassNode : undefined;\r\n  }\r\n\r\n  toEllipseNode(node: Node): EllipseNode | undefined {\r\n    return node instanceof EllipseNode ? node as EllipseNode : undefined;\r\n  }\r\n\r\n  toRectangleNode(node: Node): RectangleNode | undefined {\r\n    return (node instanceof RectangleNode && !(node instanceof ClassNode)) ? node as RectangleNode : undefined;\r\n  }\r\n\r\n  toDiamondNode(node: Node): DiamondNode | undefined {\r\n    return node instanceof DiamondNode ? node as DiamondNode : undefined;\r\n  }\r\n}\r\n\r\ntype DiagramTypeTemplate = {\r\n  nodes: { [key: string]: Node },\r\n  edges: { [key: string]: Edge }\r\n}\r\n","<div id=\"creation-side-bar\" style=\"width: 300px\" (mouseup)=\"handleMouseUp($event)\">\r\n  <ngb-accordion>\r\n    <ngb-panel *ngFor=\"let diagramGroup of groupKeys\" title=\"{{diagramGroup}}\">\r\n      <ng-template ngbPanelContent>\r\n        <ul class=\"list-group\">\r\n          <a href=\"#\"\r\n             class=\"list-group-item list-group-item-action\"\r\n             *ngFor=\"let edgeKey of Object.keys(groups[diagramGroup].edges)\"\r\n             (mousedown)=\"handleMouseDown($event, groups[diagramGroup].edges[edgeKey])\"\r\n             (dragstart)=\"false\">\r\n            <div class=\"d-flex w-100 justify-content-between\">\r\n              <h6 class=\"mb-1 w-100 text-center\">{{edgeKey}}</h6>\r\n            </div>\r\n            <div class=\"w-100\">\r\n              <svg height=\"40\" width=\"196\">\r\n                <svg:g edge-render-dispatch [edge]=\"groups[diagramGroup].edges[edgeKey]\"/>\r\n              </svg>\r\n            </div>\r\n          </a>\r\n\r\n          <a href=\"#\"\r\n             class=\"list-group-item list-group-item-action flex-column align-items-start\"\r\n             *ngFor=\"let nodeKey of Object.keys(groups[diagramGroup].nodes)\"\r\n             (mousedown)=\"handleMouseDown($event, groups[diagramGroup].nodes[nodeKey])\"\r\n             (dragstart)=\"false\">\r\n            <div class=\"d-flex w-100 justify-content-between text-center\">\r\n              <h6 class=\"mb-1 w-100 text-center\">{{nodeKey}}</h6>\r\n            </div>\r\n            <div class=\"w-100\">\r\n              <svg [attr.height]=\"groups[diagramGroup].nodes[nodeKey].height + 2 * groups[diagramGroup].nodes[nodeKey].position.y\"\r\n                   width=\"300\">\r\n                <g node-render-dispatch [node]=\"groups[diagramGroup].nodes[nodeKey]\"></g>\r\n              </svg>\r\n            </div>\r\n          </a>\r\n        </ul>\r\n      </ng-template>\r\n    </ngb-panel>\r\n  </ngb-accordion>\r\n</div>\r\n","// import {AttachmentDirection, Node, NodeFormatter, Shape} from \"../node/Node\";\r\n// import {Position} from \"../position\";\r\n// import {Edge, EdgeFormatter, EndStyle, LineStyle, LineType} from \"../edge\";\r\nimport {Diagram} from \"../diagram\";\r\nimport {EllipseNode} from \"../node/ellipse-node\";\r\nimport {Position} from \"../position\";\r\nimport {Edge} from \"../edge\";\r\n//\r\nexport let fsm: Diagram;\r\nlet n1 = new EllipseNode(100, 100, new Position(50, 10));\r\nlet n2 = new EllipseNode(100, 100, new Position(250, 10));\r\nlet e1 = new Edge(3, 2, n1, n2);\r\ne1.addMiddleLabel('a, b, c');\r\nfsm = new Diagram([n1, n2], [e1])\r\n//\r\n// const n1: Node = {\r\n//   texts: ['n1'],\r\n//   formatter: new NodeFormatter(100, 100, new Position(100, 100), Shape.Ellipse)\r\n// }\r\n// const n2: Node = {\r\n//   texts: ['n2'],\r\n//   formatter: new NodeFormatter(100, 100, new Position(300, 100), Shape.Ellipse)\r\n// }\r\n// const n3: Node = {\r\n//   texts: ['n3'],\r\n//   formatter: new NodeFormatter(100, 100, new Position(500, 100), Shape.Ellipse)\r\n// }\r\n//\r\n// const e1: Edge = {\r\n//   startNode: n1,\r\n//   endNode: n2\r\n// }\r\n// e1.formatter = new EdgeFormatter(AttachmentDirection.North, AttachmentDirection.North, n1, n2);\r\n// e1.formatter.lineType = LineType.Arc;\r\n// e1.formatter.lineStyle = LineStyle.Dotted;\r\n// e1.formatter.middlePositions = [new Position(250, 50)];\r\n// e1.formatter.endStyle = EndStyle.SmallFilledArrow;\r\n//\r\n// e1.middleLabel = \"transition 1\";\r\n//\r\n// const e2: Edge = {\r\n//   startNode: n1,\r\n//   endNode: n2\r\n// }\r\n// e2.formatter = new EdgeFormatter(AttachmentDirection.South, AttachmentDirection.South, n2, n3);\r\n// e2.formatter.lineType = LineType.Arc;\r\n// e2.formatter.lineStyle = LineStyle.Dashed;\r\n// e2.formatter.middlePositions = [new Position(450, 250)];\r\n// e2.formatter.endStyle = EndStyle.SmallFilledArrow;\r\n// e2.middleLabel = \"transition 2\"\r\n//\r\n// let edgeFormatter = new EdgeFormatter(new Position(10, 150), new Position(100, 150));\r\n// edgeFormatter.endStyle = EndStyle.SmallFilledArrow;\r\n// edgeFormatter.lineStyle = LineStyle.Dashed;\r\n//\r\n// fsm = {\r\n//   nodes: [n1, n2, n3],\r\n//   edges: [e1, e2],\r\n//   unstructuredEdges: [edgeFormatter]\r\n// }\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ActorNode} from \"../../../model/node/actor-node\";\r\nimport {Position} from \"../../../model/position\";\r\n\r\n@Component({\r\n  selector: '[actor-node-render]',\r\n  templateUrl: './actor-node-render.component.html',\r\n  styleUrls: ['./actor-node-render.component.scss']\r\n})\r\nexport class ActorNodeRenderComponent {\r\n  @Input() node!: ActorNode;\r\n  pathStyle = {\r\n    'stroke': 'black',\r\n    'stroke-width': 2,\r\n    'fill': 'none',\r\n    'stroke-opacity': 0.75\r\n  };\r\n\r\n  get ellipseRadius(): number {\r\n    return this.node.width / 4;\r\n  }\r\n\r\n  get armsPath(): string {\r\n    let left = this.addPos(new Position(0, 0.75 * this.node.width));\r\n    let right = this.addPos(new Position(this.node.width, 0.75 * this.node.width));\r\n\r\n    return `M${left.toString(' ', '')} L${right.toString(' ', '')}`;\r\n  }\r\n\r\n  get spinePath(): string {\r\n    let up = this.addPos(new Position(this.node.width / 2, 0.5 * this.node.width));\r\n    let down = this.addPos(new Position(this.node.width / 2, 1.25 * this.node.width));\r\n\r\n    return `M${up.toString(' ', '')} L${down.toString(' ', '')}`;\r\n  }\r\n\r\n  get leftLegPath(): string {\r\n    let up = this.addPos(new Position(this.node.width / 2, 1.25 * this.node.width));\r\n    let down = this.addPos(new Position(this.node.width / 4, this.node.height));\r\n\r\n    return `M${up.toString(' ', '')} L${down.toString(' ', '')}`;\r\n  }\r\n\r\n  get rightLegPath(): string {\r\n    let up = this.addPos(new Position(this.node.width / 2, 1.25 * this.node.width));\r\n    let down = this.addPos(new Position(3 * this.node.width / 4, this.node.height));\r\n\r\n    return `M${up.toString(' ', '')} L${down.toString(' ', '')}`;\r\n  }\r\n\r\n  private addPos(p: Position) {\r\n    return Position.add(p, new Position(this.node.position.x, this.node.position.y));\r\n  }\r\n}\r\n","<svg:ellipse [attr.cx]=\"node.position.x + node.width / 2\"\r\n             [attr.cy]=\"node.position.y + node.width / 4\"\r\n             [attr.rx]=\"ellipseRadius\"\r\n             [attr.ry]=\"ellipseRadius\"\r\n             style=\"fill: black; stroke: black; stroke-width: 2 stroke-opacity: 0.75; fill-opacity: 0.25\"\r\n/>\r\n\r\n\r\n<svg:path [attr.d]=\"armsPath + spinePath + leftLegPath + rightLegPath\" [ngStyle]=\"pathStyle\"/>\r\n<svg:g below-node-text [node]=\"node\"/>\r\n","import {Component, EventEmitter, Inject, OnInit, Output, AfterContentInit} from '@angular/core';\r\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {deserialiseDiagram} from \"../../serialisation/deserialise/deserialise-diagram\";\r\nimport {SerialisedDiagram} from \"../../serialisation/serialised-data-structures/serialised-diagram\";\r\nimport {UploadService} from \"../services/upload.service\";\r\nimport { DOCUMENT } from '@angular/common'\r\nimport {DiagramContainerService} from \"../services/diagram-container.service\";\r\nimport {fsm} from \"../../model/examples/fsm\";\r\nimport {LocalStorageService} from \"../services/caching/local-storage.service\";\r\nimport {DiagramManagementModalComponent} from \"../diagram-management-modal/diagram-management-modal.component\";\r\n\r\n@Component({\r\n  selector: 'app-upload-modal',\r\n  templateUrl: './upload-modal.component.html',\r\n  styleUrls: ['./upload-modal.component.scss']\r\n})\r\nexport class UploadModalComponent {\r\n  private file?: File;\r\n  selectedDiagram?: Diagram = fsm;\r\n  active: number = 1;\r\n\r\n  constructor(public modal: NgbActiveModal,\r\n              private diagramContainer: DiagramContainerService,\r\n              private localStorageService: LocalStorageService){}\r\n\r\n  onChange(event: any) {\r\n    this.file = event!.target!.files[0];\r\n  }\r\n\r\n  onClick() {\r\n    if (this.file === undefined) {\r\n      alert(\"You have to upload a file first.\");\r\n    }\r\n\r\n    this.file?.text()\r\n      .then((diagramString: string) => {\r\n        let diagramJSON = JSON.parse(diagramString);\r\n        let diagram = deserialiseDiagram(diagramJSON as SerialisedDiagram);\r\n        this.diagramContainer.set(diagram);\r\n      })\r\n      .catch(() => {\r\n        alert('The file you are trying to upload can not be converted to a diagram.');\r\n      });\r\n  }\r\n\r\n  get keyDiagramPairs() {\r\n    return this.localStorageService.getKeyDiagramPairs();\r\n  }\r\n\r\n  setLocalStorageDiagram(index: number) {\r\n    this.selectedDiagram = this.keyDiagramPairs[index][1];\r\n  }\r\n\r\n  removeLocalStorage(index: number) {\r\n    this.localStorageService.removeKey(this.keyDiagramPairs[index][0])\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-title\">Open Diagram</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"flex-row d-flex\">\r\n\r\n    <div class=\"flex-grow-1 mr-2\">\r\n      <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\r\n        <li [ngbNavItem]=\"1\">\r\n          <a ngbNavLink>Upload File</a>\r\n          <ng-template ngbNavContent>\r\n              <div>\r\n                <p>Upload a <code>.utml</code> file to resume the diagram creation process.</p>\r\n                <input id=\"upload-button\" class=\"form-control form-control-file\" type=\"file\" (change)=\"onChange($event)\">\r\n              </div>\r\n          </ng-template>\r\n        </li>\r\n        <li [ngbNavItem]=\"2\">\r\n          <a ngbNavLink>Browser Cache</a>\r\n          <ng-template ngbNavContent>\r\n            <table class=\"table table-hover\">\r\n              <thead>\r\n              <tr>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let pair of keyDiagramPairs; let i = index;\" (click)=\"setLocalStorageDiagram(i)\">\r\n                <td>{{pair[0]}}</td>\r\n                <td class=\"icon\"><button class=\"btn btn-outline-danger text-center\" style=\"width: 50px\" (click)=removeLocalStorage(i)>\r\n                  <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\r\n                </button></td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </ng-template>\r\n        </li>\r\n        <li [ngbNavItem]=\"3\">\r\n          <a ngbNavLink>URL</a>\r\n          <ng-template ngbNavContent>\r\n            <p>Type in the URL of the diagram you want to open.</p>\r\n            <input type=\"text\" class=\"form-control form-text\">\r\n          </ng-template>\r\n        </li>\r\n      </ul>\r\n      <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n    </div>\r\n\r\n    <div class=\"preview-container border-left\">\r\n      <svg width=\"500\" height=\"700\">\r\n        <g *ngIf=\"selectedDiagram\" diagram-preview [diagram]=\"selectedDiagram!\"></g>\r\n      </svg>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.close('Ok click')\">Cancel</button>\r\n  <div (click)=\"onClick()\">\r\n    <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"modal.close('Ok click')\">Open</button>\r\n  </div>\r\n</div>\r\n","import {Position} from \"./position\";\r\nimport {Node} from \"./node/node\";\r\nimport {EdgeLocation, Label, PositionCallback} from \"./label\";\r\nimport {SerialisedEdge} from \"../serialisation/serialised-data-structures/serialised-edge\";\r\n\r\nexport class Edge {\r\n  public startNode?: Node;\r\n  public endNode?: Node;\r\n\r\n  public startPosition: Position | number;\r\n  public middlePositions: Position[] = [];\r\n  public endPosition: Position | number;\r\n\r\n  public lineType: LineType = LineType.Line;\r\n  public lineStyle: LineStyle = LineStyle.Filled;\r\n  public startStyle: EndStyle = EndStyle.None;\r\n  public endStyle: EndStyle = EndStyle.None;\r\n\r\n  public startLabel?: Label;\r\n  public middleLabel?: Label;\r\n  public endLabel?: Label;\r\n\r\n  constructor(startPosition: Position | number,\r\n              endPosition: Position | number,\r\n              startNode: Node | undefined = undefined,\r\n              endNode: Node | undefined = undefined) {\r\n    this.startPosition = startPosition;\r\n    this.endPosition = endPosition;\r\n    this.startNode = startNode;\r\n    this.endNode = endNode;\r\n  }\r\n\r\n  public addStartLabel(value: string = 'start') {\r\n    let offset = Position.subtract(this.getEndPosition(), this.getStartPosition());\r\n    offset = Position.multiply(20 / offset.getLength(), offset);\r\n    this.startLabel = new Label(value, EdgeLocation.START, offset, this.labelAnchors);\r\n  }\r\n\r\n  public addMiddleLabel(value: string = 'middle') {\r\n    this.middleLabel = new Label(value, EdgeLocation.MIDDLE, Position.zero(), this.labelAnchors);\r\n  }\r\n\r\n  public addEndLabel(value: string = 'end') {\r\n    let offset = Position.subtract(this.getStartPosition(), this.getEndPosition());\r\n    offset = Position.multiply(20 / offset.getLength(), offset);\r\n    this.endLabel = new Label(value, EdgeLocation.END, offset, this.labelAnchors);\r\n  }\r\n\r\n  public getStartPosition(): Position {\r\n    return Edge.getPosition(this.startNode, this.startPosition);\r\n  }\r\n\r\n  public getEndPosition(): Position {\r\n    return Edge.getPosition(this.endNode, this.endPosition);\r\n  }\r\n\r\n  public getAllPoints(): Position[] {\r\n    let result: Position[] = [];\r\n    result.push(this.getStartPosition());\r\n    result.push(...this.middlePositions);\r\n    result.push(this.getEndPosition());\r\n    return result;\r\n  }\r\n\r\n  public get labelAnchors(): Array<PositionCallback> {\r\n    return [\r\n      () => this.getStartPosition(),\r\n      () => {\r\n        if (this.lineType === LineType.Arc) {\r\n          // todo @PLATON: What is the middle of the arc?\r\n          return this.middlePositions[0];\r\n        } else {\r\n          if (this.middlePositions.length === 0) {\r\n            return Position.multiply(0.5, Position.add(this.getStartPosition(), this.getEndPosition()));\r\n          } else if (this.middlePositions.length % 2 === 1) {\r\n            return this.middlePositions[Math.floor(this.middlePositions.length / 2)];\r\n          } else {\r\n            return Position.multiply(0.5, Position.add(\r\n              this.middlePositions[this.middlePositions.length / 2],\r\n              this.middlePositions[this.middlePositions.length / 2 - 1]\r\n            ));\r\n          }\r\n        }\r\n      },\r\n      () => this.getEndPosition(),\r\n    ];\r\n  }\r\n\r\n  private static getPosition(node: Node | undefined, positionOrDirection: Position | number) {\r\n    if (positionOrDirection instanceof Position) {\r\n      return positionOrDirection;\r\n    } else if (node === undefined) {\r\n      console.error(\"Trying to position an edge according to number but node is not set.\");\r\n      return new Position(0, 0);\r\n    } else {\r\n      if (node) {\r\n        return node.getPositionOfAttachment(positionOrDirection)\r\n      } else {\r\n        // todo: error handling\r\n        console.error(\"The node to which this edge is connected has no formatter!\");\r\n        return new Position(0, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a point string that can be used to draw a polyline or path depending on the line type\r\n   */\r\n  public getPointString(): string {\r\n    if (this.lineType == LineType.Line) {\r\n      let result: string = \"\";\r\n      result += this.getStartPosition().toString();\r\n      for (let position of this.middlePositions) {\r\n        result += position.toString();\r\n      }\r\n      result += this.getEndPosition().toString();\r\n      return result;\r\n    } else if (this.lineType == LineType.Arc) {\r\n      if (this.middlePositions.length != 1) {\r\n        throw new Error(`An Arc typed edge should have exactly 1 middle position. Edge ${this} has\r\n        ${this.middlePositions.length}.`);\r\n      }\r\n      let start: Position = this.getStartPosition();\r\n      let middle: Position = this.middlePositions[0];\r\n      let end: Position = this.getEndPosition();\r\n\r\n      let A: number = Position.getDistance(end, middle);\r\n      let B: number = Position.getDistance(middle, start);\r\n      let C: number = Position.getDistance(start, end);\r\n\r\n      let angle: number = Math.acos((A * A + B * B - C * C) / (2 * A * B));\r\n\r\n      //calc radius of circle\r\n      let K: number = .5 * A * B * Math.sin(angle);\r\n      let r: number = A * B * C / 4 / K;\r\n      r = Math.round(r * 1000) / 1000;\r\n\r\n      //large arc flag\r\n      let laf: number = +(Math.PI / 2 > angle);\r\n\r\n      //sweep flag\r\n      let saf: number = +((end.x - start.x) * (middle.y - start.y) - (end.y - start.y) * (middle.x - start.x) < 0);\r\n\r\n      return ['M', start.x, start.y, 'A', r, r, 0, laf, saf, end.x, end.y].join(' ');\r\n\r\n    } else {\r\n      throw new Error(`EdgeFormatter ${this} has type ${this.lineType} for which points can not be computed.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the a string which will be assigned to 'marker-start' attribute on the edge tag.\r\n   * The result contains the id of a certain marker. Markers are defined in the 'arrow-marker' compontent.\r\n   */\r\n  public getStartMarker(): string {\r\n    switch (this.startStyle) {\r\n      case EndStyle.None:\r\n        return \"none\";\r\n      case EndStyle.SmallFilledArrow:\r\n        return \"url(#start-small-filled-arrow)\";\r\n      case EndStyle.FilledDiamond:\r\n        return \"url(#start-filled-diamond)\";\r\n      case EndStyle.UnfilledDiamond:\r\n        return \"url(#start-unfilled-diamond)\";\r\n      case EndStyle.LargeUnfilledArrow:\r\n        return \"url(#start-big-unfilled-arrow)\";\r\n    }\r\n    return \"none\";\r\n  }\r\n\r\n  /**\r\n   * Returns the a string which will be assigned to 'marker-end' attribute on the edge tag.\r\n   * The result contains the id of a certain marker. Markers are defined in the 'arrow-marker' compontent.\r\n   */\r\n  public getEndMarker(): string {\r\n    switch (this.endStyle) {\r\n      case EndStyle.None:\r\n        return \"none\";\r\n      case EndStyle.SmallFilledArrow:\r\n        return \"url(#end-small-filled-arrow)\";\r\n      case EndStyle.FilledDiamond:\r\n        return \"url(#end-filled-diamond)\";\r\n      case EndStyle.UnfilledDiamond:\r\n        return \"url(#end-unfilled-diamond)\";\r\n      case EndStyle.LargeUnfilledArrow:\r\n        return \"url(#end-big-unfilled-arrow)\";\r\n    }\r\n    return \"none\";\r\n  }\r\n\r\n  /**\r\n   * Returns a string to be assigned to 'dash-array' attribute.\r\n   * The result will be determined based upon the lineStyle field.\r\n   */\r\n  public getLineStyleString(): string {\r\n    switch (this.lineStyle) {\r\n      case LineStyle.Filled:\r\n        return \"none\";\r\n      case LineStyle.Dashed:\r\n        return \"12, 2\"\r\n      case LineStyle.Dotted:\r\n        return \"4, 4\"\r\n    }\r\n\r\n    return \"none\";\r\n  }\r\n\r\n  public setDefaultMiddlePointOnArc(): void {\r\n    // Arcs require a middle point for their rendering.\r\n    // By default we place this in the middle between start and end and then plus 0.25 of the vector perpendicular to\r\n    // end - start.\r\n    if (this.lineType !== LineType.Arc) {\r\n      throw new Error(\"This method should only be called on arcs.\");\r\n    }\r\n\r\n    let start = this.getStartPosition();\r\n    let end = this.getEndPosition();\r\n    let between = Position.subtract(end, start)\r\n    let betweenPerpendicular = new Position(-between.y, between.x)\r\n    let middle = Position.multiply(0.5, Position.add(start, end));\r\n    let position = Position.add(middle, Position.multiply(0.25, betweenPerpendicular))\r\n    this.middlePositions.push(position);\r\n  }\r\n\r\n  public serialise(): SerialisedEdge {\r\n    return {\r\n      startPosition: this.startPosition,\r\n      endPosition: this.endPosition,\r\n      startLabel: this.startLabel?.serialise(),\r\n      middleLabel: this.middleLabel?.serialise(),\r\n      endLabel: this.endLabel?.serialise(),\r\n      startStyle: this.startStyle,\r\n      endStyle: this.endStyle,\r\n      lineStyle: this.lineStyle,\r\n      lineType: this.lineType,\r\n      middlePositions: this.middlePositions.map(p => p.serialise()),\r\n    }\r\n  }\r\n\r\n  public getDeepCopy(): Edge {\r\n    let result = new Edge(this.startPosition, this.endPosition, this.startNode, this.endNode);\r\n    result.middlePositions = this.middlePositions.map(pos => pos.getDeepCopy());\r\n\r\n\r\n    result.startLabel = this.startLabel?.getDeepCopy();\r\n    result.middleLabel = this.middleLabel?.getDeepCopy();\r\n    result.endLabel = this.endLabel?.getDeepCopy();\r\n    result.startStyle = this.startStyle;\r\n    result.endStyle = this.endStyle;\r\n    result.lineStyle = this.lineStyle;\r\n    result.lineType = this.lineType;\r\n    return result;\r\n  }\r\n}\r\n\r\nexport enum LineType {\r\n  Arc,\r\n  Line\r\n}\r\n\r\nexport enum LineStyle {\r\n  Filled,\r\n  Dotted,\r\n  Dashed\r\n}\r\n\r\nexport enum EndStyle {\r\n  None,\r\n  SmallFilledArrow,\r\n  FilledDiamond,\r\n  UnfilledDiamond,\r\n  LargeUnfilledArrow\r\n}\r\n\r\n// export interface Edge {\r\n//   startNode?: Node;\r\n//   endNode?: Node;\r\n//   startPosition: Position;\r\n//   endPosition: Position;\r\n//   points: Position[];\r\n//   label?: string;\r\n//   arrowStyle: EndStyle;\r\n//   edgeStyle: LineStyle;\r\n// }\r\n","import {Position} from \"../../../model/position\";\r\nimport {Edge} from \"../../../model/edge\";\r\nimport {EdgeRepositionService} from \"./edge-reposition.service\";\r\n\r\nexport class FixedPointRepositioner {\r\n  private position?: Position;\r\n  private edge?: Edge;\r\n\r\n  public isActive(): boolean {\r\n    return this.position !== undefined && this.edge !== undefined;\r\n  }\r\n\r\n  public activate(edge: Edge, position: Position): void {\r\n    this.edge = edge;\r\n    this.position = position;\r\n  }\r\n\r\n  public update(newPosition: Position) {\r\n    if (!this.isActive()) {\r\n      throw new Error(\"Updating an unactivated repositioner.\");\r\n    }\r\n\r\n    this.position!.x = newPosition.x;\r\n    this.position!.y = newPosition.y;\r\n  }\r\n\r\n  public deactivate(): void {\r\n    if (!this.isActive()) {\r\n      throw new Error(\"Deactivated an inactive repositioner.\");\r\n    }\r\n\r\n    // Snap to line segment if the fixed point now lies approximately\r\n    // on the line segment of its predecessor and successor.\r\n    let allPoints = this.edge!.getAllPoints();\r\n    let foundIndex: number = allPoints.indexOf(this.position!);\r\n    if (0 < foundIndex && foundIndex < allPoints.length - 1) {\r\n      if (EdgeRepositionService.liesOnSegment(this.position!, allPoints[foundIndex - 1], allPoints[foundIndex + 1])) {\r\n        // Remove the found index from the middle position array of the edge.\r\n        // Since the allPoints contains the start and the middlePositions does not we subtract 1.\r\n        this.edge!.middlePositions.splice(foundIndex - 1, 1);\r\n      }\r\n    }\r\n\r\n    this.edge = undefined;\r\n    this.position = undefined;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {SerialisedDiagram} from \"../../../serialisation/serialised-data-structures/serialised-diagram\";\r\nimport {Diagram} from \"../../../model/diagram\";\r\nimport {SizeBoundDoublyLinkedList} from \"./SizeBoundDoublyLinkedList\";\r\nimport {deserialiseDiagram} from \"../../../serialisation/deserialise/deserialise-diagram\";\r\nimport {DiagramContainerService} from \"../diagram-container.service\";\r\nimport {LocalStorageService} from \"./local-storage.service\";\r\nimport {KeyboardEventCallerService} from \"../keyboard-event-caller.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Service responsible for caching changes to the diagram object to localStorage and the redo/undo data structure.\r\n */\r\nexport class CachingService {\r\n  /** Key of the serialised version of the diagram that is stored in local storage. */\r\n  public static readonly LOCAL_STORAGE_KEY = 'diagram-cache';\r\n  private readonly MAX_SIZE: number = 25;\r\n  private readonly list: SizeBoundDoublyLinkedList<SerialisedDiagram>;\r\n  private diagram: Diagram;\r\n\r\n  constructor(diagramContainerService: DiagramContainerService,\r\n              private localStorageService: LocalStorageService,\r\n              keyboardEventCallerService: KeyboardEventCallerService) {\r\n    this.diagram = diagramContainerService.get();\r\n    diagramContainerService.diagramObservable.subscribe(diagram => this.diagram = diagram);\r\n    this.list = new SizeBoundDoublyLinkedList<SerialisedDiagram>(this.MAX_SIZE, this.diagram.serialise());\r\n\r\n    keyboardEventCallerService.addCallback(['z', 'keydown', 'ctrl'], (ignored) => {\r\n      let result = this.undo();\r\n      if (result !== null) {\r\n        diagramContainerService.set(result!);\r\n      }\r\n    });\r\n\r\n    keyboardEventCallerService.addCallback(['y', 'keydown', 'ctrl'], (ignored) => {\r\n      let result = this.redo();\r\n      if (result !== null) {\r\n        diagramContainerService.set(result!);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Save the current version of the diagram to localStorage and the redo/undo structure.\r\n   * @throws Error if diagram is not set.\r\n   */\r\n  public save(): void {\r\n    console.log('Caching')\r\n    if (this.diagram === undefined) {\r\n      throw new Error('You can not save whilst the diagram is not set!');\r\n    }\r\n\r\n    let serialisedDiagram = this.diagram.serialise();\r\n    // this.localStorageService.save();\r\n    this.list.add(serialisedDiagram);\r\n    // Todo: Make it so similar changes are merged. I.e., typing a word into a node counts as one undo/redo action.\r\n  }\r\n\r\n  /**\r\n   * Return the previous diagram from the redo/undo data structure if possible.\r\n   * @returns the previous version of the diagram, null if not available.\r\n   */\r\n  public undo(): Diagram | null {\r\n    if (this.diagram === undefined || this.list === undefined) {\r\n      throw new Error('You can not undo whilst the diagram is not set!');\r\n    }\r\n\r\n    let result = this.list.undo();\r\n    if (result === null) {\r\n      return null;\r\n    } else {\r\n      return deserialiseDiagram(result as SerialisedDiagram);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the diagram version after the current version from the redo/undo data structure if possible.\r\n   * @returns the next version if possible, null if not.\r\n   */\r\n  public redo(): Diagram | null {\r\n    if (this.diagram === undefined || this.list === undefined) {\r\n      throw new Error('You can not redo whilst the diagram is not set!');\r\n    }\r\n\r\n    let result = this.list.redo();\r\n    if (result === null) {\r\n      return null;\r\n    } else {\r\n      return deserialiseDiagram(result as SerialisedDiagram);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {DiagramContainerService} from \"../diagram-container.service\";\r\nimport {Diagram} from \"../../../model/diagram\";\r\nimport {deserialiseDiagram} from \"../../../serialisation/deserialise/deserialise-diagram\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  private currentID?: number;\r\n  public static readonly CACHE_PREFIX = 'diagram-cache-'\r\n  private get currentKey() {\r\n    return LocalStorageService.CACHE_PREFIX + this.currentID!;\r\n  }\r\n\r\n  // This setup must happen after the DOM is created. Therefore this logic can not be in the constructor.\r\n  // Setup is now called in ngAfterInit of the diagram component.\r\n  public setup() {\r\n    let allKeys = this.getAllDiagramKeys();\r\n    let allIDs = allKeys.map(key => parseInt(key.substr(LocalStorageService.CACHE_PREFIX.length)));\r\n\r\n    let currentHighest = 0;\r\n    console.log(allIDs);\r\n    for (let id of allIDs) {\r\n      if (id > currentHighest) {\r\n        currentHighest = id;\r\n      }\r\n    }\r\n\r\n    this.currentID = currentHighest + 1;\r\n  }\r\n\r\n  constructor(private diagramContainer: DiagramContainerService) {\r\n\r\n  }\r\n\r\n  public getAllDiagramKeys(): string[] {\r\n    let result = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      let key = localStorage.key(i) as string;\r\n      if (key.startsWith(LocalStorageService.CACHE_PREFIX)) {\r\n        result.push(key);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public getKeyDiagramPairs(): Array<[string, Diagram]> {\r\n    let result: Array<[string, Diagram]> = [];\r\n\r\n    for (let key of this.getAllDiagramKeys()) {\r\n      try {\r\n        result.push([key, deserialiseDiagram(JSON.parse(localStorage.getItem(key)!))])\r\n      } catch (ignored) {}\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public removeKey(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  public save(): void {\r\n    console.log('Saving')\r\n    console.log(this.currentKey)\r\n    console.log(JSON.stringify(this.diagramContainer.get().serialise()))\r\n    localStorage.setItem(this.currentKey, JSON.stringify(this.diagramContainer.get().serialise()));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: '[arrow-marker]',\r\n  templateUrl: './arrow-marker.component.html',\r\n  styleUrls: ['./arrow-marker.component.scss']\r\n})\r\nexport class ArrowMarkerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<svg:marker id=\"end-small-filled-arrow\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\r\n  <svg:path  d=\"M0,0 L0,6 L9,3 z\" fill=\"#000\" />\r\n</svg:marker>\r\n\r\n<svg:marker id=\"start-small-filled-arrow\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"\" markerUnits=\"strokeWidth\">\r\n  <svg:path  d=\"M0,0 L0,6 L9,3 z\" fill=\"#000\" />\r\n</svg:marker>\r\n\r\n<svg:marker id=\"end-big-unfilled-arrow\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"4\" orient=\"auto\" markerUnits=\"strokeWidth\">\r\n  <svg:path d=\"M0,0 L0,8 L9,4 z\" fill=\"white\" stroke=\"black\" stroke-width=\"0.5px\" />\r\n</svg:marker>\r\n\r\n<svg:marker id=\"start-big-unfilled-arrow\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"4\" orient=\"auto-start-reverse\" markerUnits=\"strokeWidth\">\r\n  <svg:path d=\"M0,0 L0,8 L9,4 z\" fill=\"white\" stroke=\"black\" stroke-width=\"0.5px\" />\r\n</svg:marker>\r\n<!--Need start and end diamonds because the relative Positioning does not work.-->\r\n<svg:marker id=\"start-filled-diamond\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto-start-reverse\" markerUnits=\"strokeWidth\">\r\n  <svg:path d=\"M 0 3 L 4.5 0 L 9 3 L 4.5 6 z\" fill=\"black\" stroke=\"black\" stroke-width=\"0.5px\"/>\r\n</svg:marker>\r\n\r\n<svg:marker id=\"end-filled-diamond\" viewbox=\"0 0 11 11\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\r\n  <svg:path d=\"M 0 3 L 4.5 0 L 9 3 L 4.5 6 z\" fill=\"black\" stroke=\"black\" stroke-width=\"0.5px\"/>\r\n</svg:marker>\r\n\r\n<svg:marker id=\"start-unfilled-diamond\" viewbox=\"0 0 11 11\" markerUnits=\"strokeWidth\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto-start-reverse\" >\r\n  <svg:path d=\"M 0 3 L 4.5 0 L 9 3 L 4.5 6 z\" fill=\"white\" stroke=\"black\" stroke-width=\"0.5px\"/>\r\n</svg:marker>\r\n\r\n<svg:marker id=\"end-unfilled-diamond\" viewbox=\"0 0 11 11\" markerUnits=\"strokeWidth\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto\" >\r\n  <svg:path d=\"M 0 3 L 4.5 0 L 9 3 L 4.5 6 z\" fill=\"white\" stroke=\"black\" stroke-width=\"0.5px\"/>\r\n</svg:marker>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-special-character-selector',\r\n  templateUrl: './special-character-selector.component.html',\r\n  styleUrls: ['./special-character-selector.component.scss']\r\n})\r\nexport class SpecialCharacterSelectorComponent {\r\n  @Output() clickChar: EventEmitter<string> = new EventEmitter<string>();\r\n  active: number = 1;\r\n\r\n  readonly LC_GREEK1 = 'αβγδεζηθικλμν';\r\n  readonly LC_GREEK2 = 'ξοπρςστυφχψω';\r\n  readonly UC_GREEK1 = 'ΑΒΓΔΕΖΗΘΙΚΛΜΝ';\r\n  readonly UC_GREEK2 = 'ΞΟΠΡΣΤΥΦΧΨΩ';\r\n  readonly MATH1 = '∀∁∂∃∄∅∆∇∈∉'\r\n  readonly MATH2 = '∊∋∌∍∎∏∐∑−∓';\r\n\r\n  constructor() { }\r\n\r\n  handleClick(char: string) {\r\n    this.clickChar.emit(char);\r\n  }\r\n}\r\n","<div class=\"w-100\">\r\n  <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\r\n    <li [ngbNavItem]=\"1\">\r\n      <a ngbNavLink>Lowercase Greek</a>\r\n      <ng-template ngbNavContent>\r\n        <special-character-row [characters]=\"LC_GREEK1\" [charEmitter]=\"clickChar\"></special-character-row>\r\n        <special-character-row [characters]=\"LC_GREEK2\" [charEmitter]=\"clickChar\"></special-character-row>\r\n      </ng-template>\r\n    </li>\r\n    <li [ngbNavItem]=\"2\">\r\n      <a ngbNavLink>Uppercase Greek</a>\r\n      <ng-template ngbNavContent>\r\n        <div>\r\n          <special-character-row [characters]=\"UC_GREEK1\" [charEmitter]=\"clickChar\"></special-character-row>\r\n          <special-character-row [characters]=\"UC_GREEK2\" [charEmitter]=\"clickChar\"></special-character-row>\r\n        </div>\r\n      </ng-template>\r\n    </li>\r\n    <li [ngbNavItem]=\"3\">\r\n      <a ngbNavLink>Mathematics</a>\r\n      <ng-template ngbNavContent>\r\n        <special-character-row [characters]=\"MATH1\" [charEmitter]=\"clickChar\"></special-character-row>\r\n        <special-character-row [characters]=\"MATH2\" [charEmitter]=\"clickChar\"></special-character-row>\r\n      </ng-template>\r\n    </li>\r\n  </ul>\r\n  <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n</div>\r\n","<div *ngIf=\"node\">\r\n  <div class=\"form-group row px-3\">\r\n    <label class=\"w-25 col-form-label\">Width</label>\r\n    <div class=\"w-75\">\r\n      <input class=\"w-100\" type=\"number\" [(ngModel)]=\"node.width\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row px-3\">\r\n    <label class=\"w-25 col-form-label\">Height</label>\r\n    <div class=\"w-75\">\r\n      <input class=\"w-100\" type=\"number\" [(ngModel)]=\"node.height\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row px-3\">\r\n    <label class=\"w-25 col-form-label\" >Node Text<br><span class=\"text-secondary\">('\\n' = new line)</span></label>\r\n    <div class=\"w-75\">\r\n      <textarea class=\"form-control\" rows=\"5\" class=\"w-100\" [(ngModel)]=\"node.text\"></textarea>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row px-3\">\r\n    <label class=\"w-25 col-form-label\" >Double Border</label>\r\n    <div class=\"w-75\">\r\n      <input type=\"checkbox\" [(ngModel)]=\"node.hasDoubleBorder\"></div>\r\n  </div>\r\n\r\n\r\n  <div  class=\"form-group row px-3\" *ngFor=\"let key of node.styleKeys\">\r\n    <label class=\"w-25 col-form-label\">{{key}}</label>\r\n    <div class=\"w-75\">\r\n      <input class=\"w-100\" type=\"text\" [(ngModel)]=\"node.styleObject[key]\">\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnChanges, OnInit, SimpleChange, SimpleChanges} from '@angular/core';\r\nimport {DeletionService} from \"../../services/deletion.service\";\r\nimport {Node} from \"../../../model/node/node\";\r\nimport {CachingService} from \"../../services/caching/caching.service\";\r\n\r\n@Component({\r\n  selector: 'app-node-editor',\r\n  templateUrl: './node-editor.component.html',\r\n  styleUrls: ['./node-editor.component.scss']\r\n})\r\nexport class NodeEditorComponent {\r\n  @Input() node?: Node;\r\n}\r\n","import {RectangleNode} from \"./rectangle-node\";\r\nimport {Position} from \"../position\";\r\n\r\nexport class ForkRejoinNode extends RectangleNode {\r\n  constructor(width: number, height: number, position: Position) {\r\n    super(width, height, position);\r\n    this.styleObject['fill'] = 'black';\r\n    this.styleObject['fill-opacity'] = '1';\r\n  }\r\n\r\n  public getAllOffsets(): Position[] {\r\n    let bigDimension = Math.max(this.width, this.height);\r\n    const POINT_AMOUNT = 5;\r\n\r\n    let result: Position[] = [];\r\n    for (let offset = 0; offset <= bigDimension; offset += (bigDimension / (POINT_AMOUNT - 1))) {\r\n      if (this.width > this.height) {\r\n        result.push(new Position(offset, 0), new Position(offset, this.height));\r\n      } else {\r\n        result.push(new Position(0, offset), new Position(this.width, offset));\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public getNodeTypeName(): string {\r\n    return \"ForkRejoin\";\r\n  }\r\n\r\n  public getDeepCopy(): ForkRejoinNode {\r\n    return new ForkRejoinNode(this.width, this.height, this.position.getDeepCopy());\r\n  }\r\n}\r\n","import {SerialisedLabel} from \"../serialised-data-structures/serialised-label\";\r\nimport {EdgeLocation, Label} from \"../../model/label\";\r\nimport {deserialisePosition} from \"./deserialise-position\";\r\nimport {Position} from \"../../model/position\";\r\n\r\nexport function deserialiseLabel(serialisedLabel: SerialisedLabel): Label {\r\n  // todo: fix serialisation of labels\r\n  return new Label(\r\n    serialisedLabel.value,\r\n    serialisedLabel.edgeLocation as EdgeLocation,\r\n    deserialisePosition(serialisedLabel.offset)\r\n  );\r\n}\r\n","export class Lifeline {\r\n  public horizontalPosition: number;\r\n  public name: string;\r\n\r\n  public static readonly RENDERING_CONSTANTS = {\r\n    'actorHeight': 75,\r\n    'actorWidth': 150,\r\n    'actorYOffset': 20,\r\n    'actorBetweenOffset': 20,\r\n    'activeBlockWidth': 16\r\n  }\r\n\r\n\r\n  constructor(horizontalPosition: number, name: string) {\r\n    this.horizontalPosition = horizontalPosition;\r\n    this.name = name;\r\n  }\r\n\r\n  public connections: number[] = [];\r\n}\r\n","import {EventEmitter, Injectable} from \"@angular/core\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {Edge} from \"../../model/edge\";\r\nimport {CachingService} from \"./caching/caching.service\";\r\nimport {SelectionService} from \"./selection.service\";\r\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\r\nimport {EditService} from \"./edit.service\";\r\nimport {DiagramContainerService} from \"./diagram-container.service\";\r\nimport {Label} from \"../../model/label\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\n/**\r\n * Service for deleting edges, nodes and unstructured edges.\r\n * This deletion happens both in the underlying data structure and in the corresponding components.\r\n * Before this service can be used the Diagram object is acts upon should be set using setDiagram.\r\n */\r\nexport class DeletionService {\r\n  private diagram: Diagram;\r\n  private selected: Array<Edge | Node | Label> = [];\r\n\r\n  constructor(private cachingService: CachingService,\r\n              private selectionService: SelectionService,\r\n              keyboardEventCallerService: KeyboardEventCallerService,\r\n              diagramContainerService: DiagramContainerService,\r\n              editService: EditService) {\r\n    this.diagram = diagramContainerService.get();\r\n    diagramContainerService.diagramObservable.subscribe(d => this.diagram = d);\r\n    selectionService.selectedObservable.subscribe(value => this.selected = value);\r\n\r\n    keyboardEventCallerService.addCallback(['Delete', 'keydown', 'any'], (event => {\r\n      this.selected.forEach(selectedElem => {\r\n        if (selectedElem instanceof Node) {\r\n          if (!editService.isActive()) {\r\n            this.deleteNode(selectedElem as Node);\r\n          }\r\n        } else if (selectedElem instanceof Edge) {\r\n          this.deleteEdge(selectedElem as Edge);\r\n        } else if (selectedElem instanceof Label) {\r\n          this.deleteLabel(selectedElem as Label);\r\n        }\r\n      });\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Delete a node and any connected edges from the diagram data structure and its component from the DOM.\r\n   * @param node Node to be deleted.\r\n   */\r\n  public deleteNode(node: Node) {\r\n    this.diagram.edges.forEach(edge => {\r\n      if (edge.startNode === node) {\r\n        edge.startPosition = edge.getStartPosition();\r\n      }\r\n      if (edge.startNode === node) {\r\n        edge.endPosition = edge.getEndPosition();\r\n      }\r\n    });\r\n\r\n    const index = this.diagram.nodes.indexOf(node);\r\n    if (index === -1) {\r\n      throw new Error(\"Trying to delete a node that can not be found in the list of nodes!\");\r\n    } else {\r\n      this.diagram.nodes.splice(index, 1);\r\n    }\r\n\r\n    if (this.selected.includes(node)) {\r\n      this.selectionService.deselect();\r\n    }\r\n    this.cachingService.save();\r\n  }\r\n\r\n  /**\r\n   * Delete an edge from the diagram data structure and its component from the DOM.\r\n   * @param edge Edge to be deleted.\r\n   */\r\n  public deleteEdge(edge: Edge) {\r\n    const index = this.diagram!.edges.indexOf(edge);\r\n\r\n    if (index === -1) {\r\n      throw new Error(\"Trying to delete an edge that can not be found in the list of edges!\");\r\n    } else {\r\n      this.diagram.edges.splice(index, 1);\r\n    }\r\n\r\n    if (this.selected.includes(edge)) {\r\n      this.selectionService.deselect();\r\n    }\r\n    this.cachingService.save();\r\n  }\r\n\r\n  public deleteLabel(label: Label) {\r\n    for (let edge of this.diagram.edges) {\r\n      if (edge.startLabel === label) {\r\n        edge.startLabel = undefined;\r\n      } else if (edge.middleLabel === label) {\r\n        edge.middleLabel = undefined;\r\n      } else if (edge.endLabel === label) {\r\n        edge.endLabel = undefined;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Position} from \"../../model/position\";\r\n// import {FormattedElement} from \"./reposition.service\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Deactivatable} from \"./deactivatable\";\r\nimport {SnapService} from \"./snap.service\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {CachingService} from \"./caching/caching.service\";\r\nimport {MousePositionTransformService} from \"./mouse-position-transform.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResizeService implements Deactivatable {\r\n  private node?: Node;\r\n  private startPosition?: Position;\r\n  private resizePointIndex?: number;\r\n  constructor(private snapService: SnapService,\r\n              private cachingService: CachingService,\r\n              private mousePositionTransformService: MousePositionTransformService) { }\r\n\r\n  public isActive(): boolean {\r\n    return this.node !== undefined;\r\n  }\r\n\r\n  public activate(current: Node, resizePointIndex: number): void {\r\n    this.node = current;\r\n    this.startPosition = current.position;\r\n    this.resizePointIndex = resizePointIndex;\r\n  }\r\n\r\n\r\n  public update(endPosition: Position): void {\r\n    if (!this.isActive()) {\r\n      throw new Error('Calling update while the node and startPosition are undefined. ' +\r\n        'Service was probably not activated.');\r\n    }\r\n\r\n    switch (this.resizePointIndex) {\r\n      case 0: // up\r\n        this.node!.height = Math.round((this.node!.height - this.snapService.snapIfApplicable(Position.subtract(endPosition, this.node!.position), 10).y)/10) * 10;\r\n        this.node!.position.y = this.snapService.snapIfApplicable(endPosition,10).y;\r\n        break;\r\n      case 1: //right\r\n        this.node!.width = this.snapService.snapIfApplicable(Position.subtract(endPosition, this.node!.position), 10).x;\r\n        break;\r\n      case 2:  //down\r\n        this.node!.height = this.snapService.snapIfApplicable(Position.subtract(endPosition, this.node!.position), 10).y;\r\n        break;\r\n      case 3: // left\r\n        this.node!.width = Math.round((this.node!.width - this.snapService.snapIfApplicable(Position.subtract(endPosition, this.node!.position), 10).x)/10) * 10;\r\n        this.node!.position.x = this.snapService.snapIfApplicable(endPosition,10).x;\r\n        break;\r\n    }\r\n  }\r\n\r\n  public deactivate(): void {\r\n    if (this.isActive()) {\r\n      this.cachingService.save();\r\n    }\r\n    this.node = undefined;\r\n    this.startPosition = undefined;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-title\">Advanced node formatting</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div *ngIf=\"node\">\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\">Width</label>\r\n      <div class=\"w-75\">\r\n        <input class=\"w-100 form-control\" type=\"number\" [(ngModel)]=\"node.width\" (ngModelChange)=\"cache()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\">Height</label>\r\n      <div class=\"w-75\">\r\n        <input class=\"w-100 form-control\" type=\"number\" [(ngModel)]=\"node.height\" (ngModelChange)=\"cache()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\" >Node Text</label>\r\n      <div class=\"w-75\">\r\n        <textarea #nodeText class=\"form-control from-control-text w-70\" rows=\"4\" [(ngModel)]=\"node.text\" (ngModelChange)=\"cache()\"></textarea>\r\n      </div>\r\n    </div>\r\n    <div class=\"w-100\">\r\n      <app-special-character-selector (clickChar)=\"addChar($event)\"></app-special-character-selector>\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\" >Double Border</label>\r\n      <div class=\"w-75\">\r\n        <input class=\"form-control form-check\" type=\"checkbox\" [(ngModel)]=\"node.hasDoubleBorder\" (ngModelChange)=\"cache()\"></div>\r\n    </div>\r\n\r\n\r\n<!--    <div  class=\"form-group row px-3\" *ngFor=\"let key of node.styleKeys\">-->\r\n<!--      <label class=\"w-25 col-form-label\">{{key}}</label>-->\r\n<!--      <div class=\"w-75\">-->\r\n<!--        <input class=\"w-100\" type=\"text\" [(ngModel)]=\"node.styleObject[key]\" (ngModelChange)=\"cache()\">-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\">Color</label>\r\n      <div class=\"w-75\">\r\n        <input type=\"color\" class=\"w-100\" [(ngModel)]=\"node.styleObject['fill']\">\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\">Opacity</label>\r\n      <div class=\"w-75\">\r\n        <input type=\"range\" class=\"w-100\" min=\"0\" max=\"1\" step=0.05 [(ngModel)]=\"node.styleObject['fill-opacity']\" >\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <div (click)=\"modal.close('Ok click')\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\">Delete</button>\r\n  </div>\r\n  <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" (click)=\"modal.close('Ok click')\">Save</button>\r\n</div>\r\n\r\n\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {SelectionService} from \"../services/selection.service\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {DeletionService} from \"../services/deletion.service\";\r\nimport {CachingService} from \"../services/caching/caching.service\";\r\n\r\n@Component({\r\n  selector: 'app-formatting-modal',\r\n  templateUrl: './formatting-modal.component.html',\r\n  styleUrls: ['./formatting-modal.component.scss']\r\n})\r\nexport class FormattingModalComponent {\r\n  public node?: Node;\r\n  @ViewChild('nodeText') nodeTextElemRef!: ElementRef;\r\n\r\n  constructor(public modal: NgbActiveModal,\r\n              private selectionService: SelectionService,\r\n              private deletionService: DeletionService,\r\n              private cachingService: CachingService) {\r\n    this.node = this.selectionService.getNode();\r\n  }\r\n\r\n  delete(): void {\r\n    if (this.node) {\r\n      this.deletionService.deleteNode(this.node);\r\n      this.node = undefined;\r\n    } else {\r\n      throw new Error(\"Trying to delete an node from the node edit menu whilst no node is selected.\");\r\n    }\r\n  }\r\n\r\n  cache() {\r\n    this.cachingService.save();\r\n  }\r\n\r\n  addChar(char: string) {\r\n    if (this.node) {\r\n      this.node.text += char;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {Position} from \"../../model/position\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ZoomService {\r\n  private x: number = 0;\r\n  private y: number = 0;\r\n  private width: number = 1200;\r\n  private height: number = 800;\r\n  private currentZoomFactor: number = 1;\r\n  private zoomStep: number = 1.1;\r\n  private zoomExponent = 0;\r\n  public updateEmitter: EventEmitter<any> = new EventEmitter();\r\n  constructor() { }\r\n\r\n  public getViewBox(): string {\r\n    return \"\" + this.x + \" \" + this.y + \" \" + this.width * this.currentZoomFactor + \" \" + this.height * this.currentZoomFactor;\r\n  }\r\n\r\n  public getCurrentZoomFactor(): number {\r\n    return this.currentZoomFactor;\r\n  }\r\n\r\n  public updateZoomFactor(zoomIn: boolean): void{\r\n    if (zoomIn) {\r\n      this.zoomExponent--;\r\n    } else {\r\n      this.zoomExponent++;\r\n    }\r\n    this.currentZoomFactor = Math.pow(this.zoomStep, this.zoomExponent);\r\n    this.updateEmitter.emit();\r\n  }\r\n\r\n  public setXY(x: number, y: number) {\r\n    this.x += x;\r\n    this.y += y;\r\n    this.updateEmitter.emit();\r\n  }\r\n\r\n  public getXY(): Position {\r\n    return new Position(this.x, this.y);\r\n  }\r\n\r\n  public getZoomedWidth(): number {\r\n    return this.width * this.currentZoomFactor;\r\n  }\r\n\r\n  public getZoomedHeight(): number {\r\n    return this.height * this.currentZoomFactor;\r\n  }\r\n}\r\n","import {Node} from \"./node\";\r\nimport {Position} from \"../position\";\r\n\r\nexport class EllipseNode extends Node {\r\n  constructor(width: number, height: number, position: Position) {\r\n    super(width, height, position);\r\n  }\r\n\r\n  protected getAllOffsets(): Position[] {\r\n    return [\r\n      new Position(this.width / 2, 0),\r\n      new Position(this.width / 2, this.height),\r\n      new Position(0, this.height / 2),\r\n      new Position(this.width, this.height / 2)\r\n    ];\r\n  }\r\n\r\n  public getDeepCopy(): Node {\r\n    let result =  new EllipseNode(this.width, this.height, this.position.getDeepCopy());\r\n    result.text = this.text;\r\n    result.hasDoubleBorder = this.hasDoubleBorder;\r\n    return result;\r\n  }\r\n\r\n  public getNodeTypeName(): string {\r\n    return \"Ellipse\";\r\n  }\r\n\r\n  public preview: string = `<ellipse cx=\"${Node.PREVIEW_WIDTH / 2}\"\r\ncy=\"${Node.DEFAULT_PREVIEW_HEIGHT / 2 + 1}\"\r\nrx=\"${Node.DEFAULT_PREVIEW_HEIGHT / 2 - 2}\"\r\nry=\"${Node.DEFAULT_PREVIEW_HEIGHT / 2 - 2}\"\r\nstyle=\"fill: none; stroke-width: 2; stroke: black\">\r\n</ellipse>`;\r\n}\r\n","<div class=\"d-flex btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n  <a *ngFor=\"let char of charArray\"\r\n     type=\"button\"\r\n     class=\"btn btn-outline-secondary flex-grow-1 mb-1\"\r\n     (click)=\"callback(char)\">\r\n    {{char}}\r\n  </a>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'special-character-row',\r\n  templateUrl: './special-character-row.component.html',\r\n  styleUrls: ['./special-character-row.component.scss']\r\n})\r\nexport class SpecialCharacterRowComponent {\r\n  @Input() characters!: string;\r\n  @Input() charEmitter!: EventEmitter<string>;\r\n\r\n  get charArray() {\r\n    let result = [];\r\n    for (let i = 0; i < this.characters.length; i++) {\r\n      result.push(this.characters.charAt(i));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  callback(char: string) {\r\n    this.charEmitter.emit(char);\r\n  }\r\n}\r\n","import {Injectable, Renderer2, RendererFactory2} from '@angular/core';\r\nimport {Node} from \"../../model/node/node\";\r\nimport {Edge} from \"../../model/edge\";\r\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EditService {\r\n  private isInEditMode: boolean = false;\r\n  private node?: Node;\r\n  private activeIndex?: number;\r\n  constructor(keyboardEventCallerService: KeyboardEventCallerService,\r\n              rendererFactory: RendererFactory2) {\r\n    keyboardEventCallerService.addCallback(['Escape', \"keydown\", 'any'], (ignored) => this.deactivate());\r\n\r\n    let renderer = rendererFactory.createRenderer(null, null);\r\n    renderer.listen('window', 'keydown', (event: KeyboardEvent) => {\r\n      if (this.isActive()) {\r\n        this.update(this.activeIndex!, event.key);\r\n      }\r\n    });\r\n  }\r\n\r\n  public activate(node: Node) {\r\n    this.node = node;\r\n    this.isInEditMode = true;\r\n    this.setActiveTextLine(0, false);\r\n  }\r\n\r\n  public setActiveTextLine(index: number, previousDeleted: boolean) {\r\n    if (this.activeIndex != index){\r\n      if (!previousDeleted){\r\n        this.removeBar(this.activeIndex);\r\n      }\r\n      this.activeIndex = index;\r\n      let currentText: string[] = this.node!.getTextLines();\r\n      currentText[index] += \"|\";\r\n      this.setTextToNode(currentText);\r\n    }\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.isInEditMode!;\r\n  }\r\n\r\n  public addField(): void{\r\n    if (this.isActive()) {\r\n      let currentText: string[] = this.node!.getTextLines();\r\n      let newFieldDefaultText = \"New field\";\r\n      currentText.push(newFieldDefaultText);\r\n      this.setTextToNode(currentText);\r\n      this.setActiveTextLine(currentText.length - 1, false);\r\n    }\r\n  }\r\n\r\n  public update(index: number, text: string): void {\r\n    if (this.isActive()) {\r\n      let currentText: string[] = this.node!.getTextLines();\r\n      if (text.length == 1 && text != \"|\") {\r\n        currentText[index] = currentText[index].split(\"|\")[0] + text + \"|\"\r\n          +currentText[index].split(\"|\")[1];\r\n      } else if (text == \"Backspace\") {\r\n        currentText[index] = currentText[index].split(\"|\")[0].slice(0,-1) +\r\n          \"|\" + currentText[index].split(\"|\")[1];\r\n      } else if (text == \"ArrowLeft\") {\r\n        let arr: string[] = currentText[index].split(\"|\");\r\n        currentText[index] = this.swapFirstAndLastAndAppend(arr[0], \"|\" + arr[1]);\r\n      } else if (text == \"ArrowRight\") {\r\n        let arr: string[] = currentText[index].split(\"|\");\r\n        currentText[index] = this.swapFirstAndLastAndAppend(arr[0] + \"|\", arr[1]);\r\n      }\r\n      this.setTextToNode(currentText);\r\n      if (text == \"ArrowUp\") {\r\n        if (this.activeIndex! > 0) {\r\n          this.setActiveTextLine(this.activeIndex! - 1, false);\r\n        }\r\n      } else if (text == \"ArrowDown\") {\r\n        if (this.activeIndex! < this.node!.getTextLines().length - 1) {\r\n          this.setActiveTextLine(this.activeIndex! + 1, false);\r\n        }\r\n      } else if (text == \"Delete\") {\r\n        this.deleteLine();\r\n      }\r\n    }\r\n  }\r\n\r\n  private deleteLine() {\r\n    let currentText = this.node!.getTextLines();\r\n    if (currentText.length > 1 && this.activeIndex != 0) {\r\n      console.log(currentText);\r\n      currentText.splice(this.activeIndex!, 1);\r\n      console.log(currentText);\r\n      this.setTextToNode(currentText);\r\n      this.setActiveTextLine(this.activeIndex! - 1, true);\r\n    }\r\n  }\r\n\r\n  private swapFirstAndLastAndAppend(string1: string, string2: string): string {\r\n    let lastOfFirst = string1[string1.length - 1];\r\n    let firstOfLast = string2[0];\r\n    string1 = string1.slice(0,-1) + firstOfLast;\r\n    string2 = lastOfFirst + string2.substring(1);\r\n    return string1 + string2;\r\n  }\r\n\r\n  private setTextToNode(currentText: string[]): void {\r\n    let textContent = \"\";\r\n    for (let i = 0; i < currentText.length - 1; i++) {\r\n      textContent += currentText[i] + \"\\\\n\"\r\n    }\r\n    textContent += currentText[currentText.length - 1];\r\n    this.node!.text = textContent;\r\n  }\r\n\r\n  private removeBar(index: number | undefined): void {\r\n    if (index !== undefined) {\r\n      let currentText = this.node!.getTextLines();\r\n      currentText[index!] = currentText[index].replace(\"|\", \"\");\r\n      this.setTextToNode(currentText);\r\n    }\r\n  }\r\n\r\n  public deactivate(): void {\r\n    this.removeBar(this.activeIndex);\r\n    this.node = undefined;\r\n    this.isInEditMode = false;\r\n    this.activeIndex = undefined;\r\n  }\r\n\r\n  public getNode(): Node {\r\n    return this.node!\r\n  }\r\n}\r\n","<svg:path *ngIf=\"edge\"\r\n          [attr.d]=\"edge.getPointString()\"\r\n          fill=\"none\"\r\n          [ngStyle]=\"styleObject || {}\"\r\n          [attr.marker-end]=\"edge.getEndMarker()\"\r\n          [attr.marker-start]=\"edge.getStartMarker()\"\r\n          [attr.stroke-dasharray]=\"edge.getLineStyleString()\">\r\n</svg:path>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Edge} from \"../../../model/edge\";\r\n\r\n@Component({\r\n  selector: '[arc-render-component]',\r\n  templateUrl: './arc-render.component.html',\r\n})\r\nexport class ArcRenderComponent {\r\n  @Input() edge!: Edge\r\n  @Input() styleObject?: { [key: string]: string | number };\r\n}\r\n","import {SerialisedClassNode, SerialisedNode} from \"../serialised-data-structures/serialised-node\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {RectangleNode} from \"../../model/node/rectangle-node\";\r\nimport {deserialisePosition} from \"./deserialise-position\";\r\nimport {Position} from \"../../model/position\";\r\nimport {EllipseNode} from \"../../model/node/ellipse-node\";\r\nimport {DiamondNode} from \"../../model/node/diamond-node\";\r\nimport {ForkRejoinNode} from \"../../model/node/fork-rejoin-node\";\r\nimport {ClassNode} from \"../../model/node/class-node\";\r\n\r\nfunction deserialiseGeneric(serialisedNode: SerialisedNode, constructor: GenericNodeConstructor): Node {\r\n  let result = new constructor(serialisedNode.width, serialisedNode.height,\r\n    deserialisePosition(serialisedNode.position));\r\n  result.text = serialisedNode.text;\r\n  result.hasDoubleBorder = serialisedNode.hasDoubleBorder;\r\n  return result;\r\n}\r\n\r\nfunction deserialiseClassNode(serialisedClassNode: SerialisedClassNode): ClassNode {\r\n  let result = new ClassNode(serialisedClassNode.width, serialisedClassNode.height,\r\n    deserialisePosition(serialisedClassNode.position));\r\n  result.text = serialisedClassNode.text;\r\n  result.firstLine = serialisedClassNode.firstLine;\r\n  result.secondLine = serialisedClassNode.secondLine;\r\n  return result;\r\n}\r\n\r\nexport function deserialiseNode(serialisedNode: SerialisedNode): Node {\r\n  switch (serialisedNode.type) {\r\n    case 'Rectangle':\r\n      return deserialiseGeneric(serialisedNode, RectangleNode);\r\n    case 'Ellipse':\r\n      return deserialiseGeneric(serialisedNode, EllipseNode);\r\n    case 'Diamond':\r\n      return deserialiseGeneric(serialisedNode, DiamondNode);\r\n    case 'ForkRejoin':\r\n      return deserialiseGeneric(serialisedNode, ForkRejoinNode);\r\n    case 'ClassNode':\r\n      return deserialiseClassNode(serialisedNode as SerialisedClassNode);\r\n  }\r\n\r\n  throw new Error(\"Node of unknown type and the node can therefore not be deserialised.\");\r\n}\r\n\r\ntype GenericNodeConstructor = {\r\n  new (width: number, height: number, position: Position): Node;\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {HourglassNode} from \"../../../model/node/hourglass-node\";\r\nimport {Position} from \"../../../model/position\";\r\n\r\n@Component({\r\n  selector: '[hourglass-node-render]',\r\n  templateUrl: './hourglass-node-render.component.html',\r\n})\r\nexport class HourglassNodeRenderComponent {\r\n  @Input() node!: HourglassNode;\r\n\r\n  getPoints() {\r\n    return [\r\n      Position.zero(),\r\n      new Position(this.node.width, 0),\r\n      new Position(0, this.node.height),\r\n      new Position(this.node.width, this.node.height),\r\n      Position.zero()\r\n    ].map(pos => Position.add(pos, this.node.position))\r\n     .map(pos => pos.toString(',', ' ')).join();\r\n  }\r\n}\r\n","<svg:polyline [ngStyle]=\"node.styleObject\"\r\n              [attr.points]=\"getPoints()\"/>\r\n<svg:g below-node-text [node]=\"node\"/>\r\n","import {AfterViewInit, Component} from '@angular/core';\r\nimport {RepositionService} from \"../services/reposition.service\";\r\nimport {EdgeRepositionService} from \"../services/edge-reposition/edge-reposition.service\";\r\nimport {Mode, ModeService} from \"../services/mode.service\";\r\nimport {EdgeCreationService} from \"../services/edge-creation.service\";\r\nimport {DeletionService} from \"../services/deletion.service\";\r\nimport {CreationTypeSelectionService} from \"../services/creation-type-selection.service\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {ResizeService} from \"../services/resize.service\";\r\nimport {deserialiseDiagram} from \"../../serialisation/deserialise/deserialise-diagram\";\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\nimport {CachingService} from \"../services/caching/caching.service\";\r\nimport {SerialisedDiagram} from \"../../serialisation/serialised-data-structures/serialised-diagram\";\r\nimport {SelectionService} from \"../services/selection.service\";\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {Edge} from \"../../model/edge\";\r\nimport {Position} from \"../../model/position\";\r\nimport {CopyPasteService} from \"../services/copy-paste.service\";\r\nimport {DragDropCreationService} from \"../services/drag-drop-creation.service\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {UploadService} from \"../services/upload.service\";\r\nimport {DragSelectionService} from \"../services/drag-selection.service\";\r\nimport {ZoomService} from \"../services/zoom.service\";\r\nimport {MousePositionTransformService} from \"../services/mouse-position-transform.service\";\r\nimport {DiagramContainerService} from \"../services/diagram-container.service\";\r\nimport {LocalStorageService} from \"../services/caching/local-storage.service\";\r\nimport {LensOffsetService} from \"../services/lens-offset.service\";\r\nimport {LabelRepositionService} from \"../services/label-reposition.service\";\r\nimport {AppComponent} from \"../app.component\";\r\n\r\n@Component({\r\n  selector: 'app-diagram',\r\n  templateUrl: './diagram.component.html',\r\n  styleUrls: ['./diagram.component.scss']\r\n})\r\nexport class DiagramComponent implements AfterViewInit {\r\n  public static readonly NAV_HEIGHT = 50;\r\n  public diagram: Diagram;\r\n\r\n  mode: Mode;\r\n\r\n  constructor(private sanitizer: DomSanitizer,\r\n              private diagramContainer: DiagramContainerService,\r\n              private repositionService: RepositionService,\r\n              private edgeRepositionService: EdgeRepositionService,\r\n              private modeService: ModeService,\r\n              private edgeCreationService: EdgeCreationService,\r\n              private deletionService: DeletionService,\r\n              private creationTypeSelectionService: CreationTypeSelectionService,\r\n              private resizeService: ResizeService,\r\n              private cachingService: CachingService,\r\n              private selectionService: SelectionService,\r\n              private copyPasteService: CopyPasteService,\r\n              private dragDropCreationService: DragDropCreationService,\r\n              private modalService: NgbModal,\r\n              private uploadService: UploadService,\r\n              private dragSelectionService: DragSelectionService,\r\n              public zoomService: ZoomService,\r\n              private localStorageService: LocalStorageService,\r\n              private mousePositionTransformService: MousePositionTransformService,\r\n              private lensOffsetService: LensOffsetService,\r\n              private labelRepositionService: LabelRepositionService,\r\n              private appComponent: AppComponent\r\n              ) {\r\n\r\n    this.diagram = diagramContainer.get();\r\n    diagramContainer.diagramObservable.subscribe(diagram => this.diagram = diagram);\r\n\r\n    this.modeService.modeObservable.subscribe((mode: Mode) => this.mode = mode);\r\n    this.mode = modeService.getLatestMode();\r\n\r\n    edgeCreationService.newEdgeEmitter.subscribe((newEdge: Edge) => {\r\n      this.diagram.edges.push(newEdge);\r\n      this.cachingService.save();\r\n    });\r\n\r\n    copyPasteService.pasteEmitter.subscribe((nodeOrEdge: Node | Edge) => {\r\n      if (nodeOrEdge instanceof Node) {\r\n        this.diagram.nodes.push(nodeOrEdge as Node);\r\n      } else {\r\n        this.diagram.edges.push(nodeOrEdge as Edge);\r\n      }\r\n      this.cachingService.save();\r\n    });\r\n\r\n    dragDropCreationService.createdEmitter.subscribe((edgeOrNode: Edge | Node) => {\r\n      if (edgeOrNode instanceof Edge) {\r\n        this.diagram.edges.push(edgeOrNode);\r\n      } else {\r\n        this.diagram.nodes.push(edgeOrNode);\r\n      }\r\n\r\n      this.cachingService.save();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.diagram) {\r\n      this.localStorageService.setup();\r\n    }\r\n  }\r\n\r\n  handleMouseUp(event: MouseEvent): void {\r\n    if (this.repositionService.isActive()) {\r\n      this.repositionService.deactivate();\r\n    } else if (this.edgeRepositionService.isActive()) {\r\n      this.edgeRepositionService.deactivate()\r\n    } else if (this.resizeService.isActive()) {\r\n      this.resizeService.deactivate()\r\n    } else if (this.dragDropCreationService.isActive()) {\r\n      this.dragDropCreationService.create();\r\n    } else if (this.edgeCreationService.isActive()) {\r\n      this.edgeCreationService.deactivate();\r\n    } else if (this.dragSelectionService.isActive()) {\r\n      this.dragSelectionService.deactivate();\r\n    } else if (this.lensOffsetService.isActive()) {\r\n      this.lensOffsetService.deactivate();\r\n    } else if (this.labelRepositionService.isActive()) {\r\n      this.labelRepositionService.deactivate();\r\n    }\r\n  }\r\n\r\n  handleMouseMove(event: MouseEvent) {\r\n    let position = this.mousePositionTransformService.transformPosition(new Position(event.pageX, event.pageY));\r\n    let pos = this.mousePositionTransformService.transFormZoomAndMenubar(new Position(event.pageX, event.pageY))\r\n    if (this.repositionService.isActive()) {\r\n      this.repositionService.update(position); //works\r\n    } else if (this.edgeRepositionService.isActive()) {\r\n      this.edgeRepositionService.update(position); //works\r\n    } else if (this.edgeCreationService.isActive()) {\r\n      this.edgeCreationService.endPreview = position; //works\r\n    } else if (this.resizeService.isActive()) {\r\n      this.resizeService.update(position); //works\r\n    } else if (this.dragDropCreationService.isActive()) {\r\n      this.dragDropCreationService.update(position); //works\r\n    } else if (this.dragSelectionService.isActive()) {\r\n      this.dragSelectionService.update(position); //idk\r\n    } else if (this.lensOffsetService.isActive()) {\r\n      this.lensOffsetService.update(pos); //works\r\n    } else if (this.labelRepositionService.isActive()) {\r\n      this.labelRepositionService.update(pos);\r\n    }\r\n  }\r\n\r\n  handleDoubleClick(event: MouseEvent) {\r\n  }\r\n\r\n  handleKeyPressed(event: KeyboardEvent): void {\r\n    const SELECT_KEY = \"1\";\r\n    const CREATE_KEY = \"2\";\r\n    const MOVE_KEY = \"3\";\r\n\r\n    if (event.ctrlKey) {\r\n      switch (event.key) {\r\n        case SELECT_KEY :\r\n          this.modeService.setMode(Mode.Select);\r\n          break;\r\n        case CREATE_KEY:\r\n          this.modeService.setMode(Mode.Create);\r\n          break;\r\n        case MOVE_KEY:\r\n          this.modeService.setMode(Mode.Move);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  restore() {\r\n    let result: null | string = localStorage.getItem(CachingService.LOCAL_STORAGE_KEY);\r\n    if (result === null) {\r\n      alert('No diagram stored in local storage');\r\n    } else {\r\n      try {\r\n        let diagram: Diagram = deserialiseDiagram(JSON.parse(result as string) as SerialisedDiagram);\r\n        this.diagramContainer.set(diagram);\r\n      } catch (e) {\r\n        alert('Could not restore diagram from local storage');\r\n      }\r\n    }\r\n  }\r\n\r\n  handleMouseDown(event: MouseEvent) {\r\n    let pos = this.mousePositionTransformService.transformPosition(new Position(event.x, event.y));\r\n    //TODO is this the correct position?, call the correct function.\r\n    if (event.shiftKey) {\r\n      this.dragSelectionService.activate(pos);\r\n    } else if (event.ctrlKey) {\r\n      // Check that no node or edge was double clicked.\r\n      for (let node of this.diagram.nodes) {\r\n        let nodeStart = node.position.getDeepCopy();\r\n        let nodeEnd = Position.add(node.position, new Position(node.width, node.height));\r\n        if (Position.liesBetween(nodeStart, pos, nodeEnd)) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      for (let edge of this.diagram.edges) {\r\n        let allPoints = edge.getAllPoints();\r\n        for (let i = 0; i < allPoints.length - 1; i++) {\r\n          if (EdgeRepositionService.liesOnSegment(pos, allPoints[i], allPoints[i + 1])) {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.lensOffsetService.activate(this.mousePositionTransformService.transFormZoomAndMenubar(new Position(event.x, event.y)));\r\n    }\r\n  }\r\n}\r\n","<div (keyup)=\"handleKeyPressed($event)\">\r\n  <app-nav-bar></app-nav-bar>\r\n\r\n  <div class=\"row d-flex\">\r\n    <div class=\"flex-grow-1\">\r\n      <svg width=\"1200\"\r\n           height=\"800\"\r\n           [attr.viewBox]=\"zoomService.getViewBox()\"\r\n           (mousedown)=\"handleMouseDown($event)\"\r\n           (mouseup)=\"handleMouseUp($event)\"\r\n           (mousemove)=\"handleMouseMove($event)\"\r\n           (dblclick)=\"handleDoubleClick($event)\"\r\n           id=\"diagram\"\r\n      >\r\n        <g grid-overlay></g>\r\n        <g drag-drop-preview></g>\r\n        <g new-edge-preview></g>\r\n        <defs arrow-marker></defs>\r\n        <g *ngFor=\"let edge of diagram.edges; let i = index\"\r\n           edge-component [(edge)]=\"diagram.edges[i]\" (edgeChange)=\"diagram.edges[i]=$event\"></g>\r\n\r\n        <g *ngFor=\"let node of diagram.nodes\" node-component [node]=\"node\"/>\r\n        <g selected-node-highlight/>\r\n        <g drag-select-preview/>\r\n      </svg>\r\n    </div>\r\n    <creation-sidebar></creation-sidebar>\r\n  </div>\r\n</div>\r\n\r\n<canvas id=\"canvas\" viewbox></canvas>\r\n","import { Injectable } from '@angular/core';\r\nimport {SelectionService} from \"./selection.service\";\r\nimport {SnapService} from \"./snap.service\";\r\nimport {Label} from \"../../model/label\";\r\nimport {Position} from \"../../model/position\";\r\nimport {CachingService} from \"./caching/caching.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LabelRepositionService {\r\n  private startPosition: Position | undefined = undefined;\r\n  private label?: Label;\r\n\r\n  constructor(private snapService: SnapService,\r\n              private cachingService: CachingService) {\r\n  }\r\n\r\n  public activate(position: Position, label: Label) {\r\n    this.startPosition = position;\r\n    this.label = label;\r\n  }\r\n\r\n  public update(position: Position) {\r\n    if (this.isActive()) {\r\n      let diff = this.snapService.snapIfApplicable(Position.subtract(position, this.startPosition!));\r\n      this.label!.position = Position.add(this.startPosition!, diff);\r\n    } else {\r\n      throw new Error('Service should be active!');\r\n    }\r\n  }\r\n\r\n  public deactivate() {\r\n    if (this.isActive()) {\r\n      this.cachingService.save();\r\n    }\r\n    this.label = undefined;\r\n    this.startPosition = undefined;\r\n  }\r\n\r\n  public isActive() {\r\n    return this.startPosition !== undefined && this.label !== undefined;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {fsm} from \"../../model/examples/fsm\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DiagramContainerService {\r\n  // private readonly diagramSubject: BehaviorSubject<Diagram> = new BehaviorSubject<Diagram>(new Diagram());\r\n  private readonly diagramSubject: BehaviorSubject<Diagram> = new BehaviorSubject<Diagram>(fsm);\r\n  public readonly diagramObservable = this.diagramSubject.asObservable();\r\n\r\n  public set(diagram: Diagram) {\r\n    this.diagramSubject.next(diagram);\r\n  }\r\n\r\n  public get() {\r\n    return this.diagramSubject.getValue();\r\n  }\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\r\nimport {Edge, LineType} from \"../../model/edge\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {Position} from \"../../model/position\";\r\nimport {BehaviorSubject, Observable} from \"rxjs\";\r\nimport {SnapService} from \"./snap.service\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DragDropCreationService {\r\n  private selected: BehaviorSubject<Node | Edge | undefined> = new BehaviorSubject<Node|Edge|undefined>(undefined);\r\n  public readonly selectedObservable: Observable<Node | Edge | undefined> = this.selected.asObservable();\r\n  public readonly createdEmitter: EventEmitter<Node | Edge> = new EventEmitter<Node|Edge>();\r\n\r\n  constructor(keyboardEventCaller: KeyboardEventCallerService, private snapService: SnapService) {\r\n    // Todo: Allow keyboard event caller to have multiple callbacks.\r\n    keyboardEventCaller.addCallback(['Escape', 'keydown', 'any'], (ignored) => this.cancel());\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.selected.getValue() !== undefined;\r\n  }\r\n\r\n  public activate(prototype: Edge | Node): void {\r\n    if (this.isActive()) {\r\n      throw new Error('Trying to activate the DragDropCreationService but it already is active.');\r\n    }\r\n    let copy = prototype.getDeepCopy();\r\n    if (copy instanceof Node) {\r\n      let node = copy as Node;\r\n      node.position = new Position(-node.width, -node.height);\r\n    } else {\r\n      let edge = copy as Edge;\r\n      edge.startPosition = new Position(-100, -100);\r\n      edge.endPosition = Position.zero();\r\n    }\r\n    this.selected.next(copy.getDeepCopy());\r\n  }\r\n\r\n  public update(position: Position): void {\r\n    position = this.snapService.snapIfApplicable(position, 10);\r\n    if(!this.isActive()) {\r\n      throw new Error('Trying to update the DragDropService while it is not active');\r\n    }\r\n\r\n    if (this.selected.getValue() instanceof Node) {\r\n      let node = this.selected.getValue() as Node;\r\n      // Calculations to make the mouse the center of the object, in stead of the top-right.\r\n      node.position = Position.subtract(position, new Position(node.width / 2, node.height / 2));\r\n    } else {\r\n      let edge = this.selected.getValue() as Edge;\r\n      edge.startPosition = position;\r\n      const OFFSET = 100;\r\n      edge.endPosition = Position.add(new Position(OFFSET, OFFSET), position);\r\n\r\n      if (edge.lineType === LineType.Arc) {\r\n        edge.middlePositions = [];\r\n        edge.setDefaultMiddlePointOnArc();\r\n      }\r\n    }\r\n  }\r\n\r\n  public cancel() {\r\n    this.selected.next(undefined);\r\n  }\r\n\r\n  public create() {\r\n    let value = this.selected.getValue();\r\n    if (value instanceof Edge && (value as Edge).lineType === LineType.Arc) {\r\n      (value as Edge).middlePositions = [];\r\n      (value as Edge).setDefaultMiddlePointOnArc();\r\n    }\r\n    this.createdEmitter.emit(value);\r\n    this.selected.next(undefined);\r\n  }\r\n}\r\n","<svg:g *ngFor=\"let edge of diagram.edges\" edge-render-dispatch [edge]=\"edge\"></svg:g>\r\n<svg:g *ngFor=\"let node of diagram.nodes\" node-render-dispatch [node]=\"node\"></svg:g>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Diagram} from \"../../model/diagram\";\r\n\r\n@Component({\r\n  selector: '[diagram-preview]',\r\n  templateUrl: './diagram-preview.component.html',\r\n  styleUrls: ['./diagram-preview.component.scss']\r\n})\r\nexport class DiagramPreviewComponent {\r\n  @Input() diagram!: Diagram;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\r\nimport {Diagram} from \"../model/diagram\";\r\n\r\n@Pipe({\r\n  name: 'jsonUri',\r\n  pure: false\r\n})\r\n// Todo: Optimize this.\r\nexport class JsonUriPipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  transform(diagram: Diagram): SafeUrl {\r\n    let theJSON = JSON.stringify(diagram.serialise());\r\n    return this.sanitizer.bypassSecurityTrustUrl(\"data:text/json;charset=UTF-8,\" + encodeURIComponent(theJSON));\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sequence-edge',\r\n  templateUrl: './sequence-edge.component.html',\r\n  styleUrls: ['./sequence-edge.component.scss']\r\n})\r\nexport class SequenceEdgeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>sequence-edge works!</p>\r\n","<svg:line *ngIf=\"edgeCreationService.isActive()\"\r\n          [attr.x1]=\"edgeCreationService.startPreview!.x\"\r\n          [attr.y1]=\"edgeCreationService.startPreview!.y\"\r\n          [attr.x2]=\"edgeCreationService.endPreview!.x\"\r\n          [attr.y2]=\"edgeCreationService.endPreview!.y\"\r\n          style=\"stroke:rgb(255,0,0);stroke-width:2\">\r\n</svg:line>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {EdgeCreationService} from \"../services/edge-creation.service\";\r\nimport {ModeService} from \"../services/mode.service\";\r\nimport {SelectionService} from \"../services/selection.service\";\r\nimport {Position} from \"../../model/position\";\r\n\r\n@Component({\r\n  selector: '[new-edge-preview]',\r\n  templateUrl: './new-edge-preview.component.html',\r\n  styleUrls: ['./new-edge-preview.component.scss']\r\n})\r\nexport class NewEdgePreviewComponent {\r\n  constructor(public edgeCreationService: EdgeCreationService) {\r\n\r\n  }\r\n\r\n  edgeCreationIsActive(): boolean {\r\n    return this.edgeCreationService.isActive();\r\n  }\r\n\r\n  getPoints(): string | undefined {\r\n    let start: undefined | string  = this.edgeCreationService.startPreview?.toString(',', ' ');\r\n    let end: undefined | string  = this.edgeCreationService.endPreview?.toString(',', ' ');\r\n    console.log(start)\r\n    console.log(end)\r\n    if (start === undefined || end === undefined) {\r\n      return undefined;\r\n    }\r\n    console.log(start)\r\n    console.log(end)\r\n    return `${start} ${end}`;\r\n  }\r\n\r\n}\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {deserialiseDiagram} from \"../../serialisation/deserialise/deserialise-diagram\";\r\nimport {SerialisedDiagram} from \"../../serialisation/serialised-data-structures/serialised-diagram\";\r\n\r\n@Component({\r\n  selector: 'app-diagram-import',\r\n  templateUrl: './diagram-import.component.html',\r\n  styleUrls: ['./diagram-import.component.scss']\r\n})\r\nexport class DiagramImportComponent {\r\n  private file?: File;\r\n  @Output() diagramEmitter: EventEmitter<Diagram> = new EventEmitter<Diagram>();\r\n\r\n  constructor() { }\r\n\r\n  onChange(event: any) {\r\n    this.file = event!.target!.files[0];\r\n  }\r\n\r\n  onClick() {\r\n    if (this.file === undefined) {\r\n      alert(\"You have to upload a file first.\");\r\n    }\r\n\r\n    this.file?.text()\r\n      .then((diagramString: string) => {\r\n        let diagramJSON = JSON.parse(diagramString);\r\n        let diagram = deserialiseDiagram(diagramJSON as SerialisedDiagram);\r\n        this.diagramEmitter.emit(diagram);\r\n      })\r\n      .catch(() => {\r\n        alert('The file you are trying to upload can not be converted to a diagram.');\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-4\"></div>\r\n  <div class=\"col-md-2\">\r\n    <input class=\"form-control-file\" type=\"file\" (change)=\"onChange($event)\">\r\n  </div>\r\n\r\n  <div class=\"col-md-2\">\r\n    <button class=\"btn btn-outline-success\" (click)=\"onClick()\">\r\n      Upload\r\n    </button>\r\n  </div>\r\n  <div class=\"col-md-4\"></div>\r\n</div>\r\n","<svg:pattern id=\"smallGrid\" width=\"10\" height=\"10\" patternUnits=\"userSpaceOnUse\">\n  <path d=\"M 10 0 L 0 0 0 10\" fill=\"none\" stroke=\"gray\" stroke-width=\"0.5\"/>\n</svg:pattern>\n<svg:pattern id=\"grid\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\">\n  <rect width=\"100\" height=\"100\" fill=\"url(#smallGrid)\"/>\n  <path d=\"M 100 0 L 0 0 0 100\" fill=\"none\" stroke=\"gray\" stroke-width=\"1\"/>\n</svg:pattern>\n\n<svg:rect *ngIf=\"active\" [attr.x]=\"x\" [attr.y]=\"y\" [attr.width]=\"width\" [attr.height]=\"height\" fill=\"url(#grid)\"></svg:rect>\n","import { Component, OnInit } from '@angular/core';\nimport {ZoomService} from \"../services/zoom.service\";\n\n@Component({\n  selector: '[grid-overlay]',\n  templateUrl: './grid-overlay.component.html',\n  styleUrls: ['./grid-overlay.component.scss']\n})\nexport class GridOverlayComponent {\n  x!: number;\n  y!: number;\n  width!: number;\n  height!: number\n  active = true;\n\n  constructor(zoomService: ZoomService) {\n    let callback = () => {\n      this.width = zoomService.getZoomedWidth();\n      this.height = zoomService.getZoomedHeight();\n      let xy = zoomService.getXY();\n      this.x = xy.x;\n      this.y = xy.y;\n    };\n    callback();\n\n    zoomService.updateEmitter.subscribe(callback);\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Class that is responsible for using keyboard event to specific callbacks.\r\n * The keyboard events supplied by app.components.ts.\r\n * The callbacks are added by other services or components who want to trigger certain actions based on keyboard events.\r\n */\r\nexport class KeyboardEventCallerService {\r\n  private keys: Array<KeyTuple> = [];\r\n  private callbacks: Array<Array<KeyboardCallback>> = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public addCallback(key: KeyTuple, callback: KeyboardCallback) {\r\n    let index = this.keys.findIndex(elem => key[0] === elem[0] && key[1] === elem[1] && key[2] === elem[2]);\r\n\r\n    if (index === -1) {\r\n      this.keys.push(key);\r\n      this.callbacks.push([callback]);\r\n    } else {\r\n      this.callbacks[index].push(callback);\r\n    }\r\n  }\r\n\r\n  public executeCallbacks(key: KeyTuple, event: KeyboardEvent) {\r\n    for (let i = 0; i < this.keys.length; i++) {\r\n      if ((this.keys[i][0] == key[0]) &&\r\n        (this.keys[i][1] == key[1]) &&\r\n        (this.keys[i][2] === key[2] || this.keys[i][2] === 'any')) {\r\n        this.callbacks[i].forEach(f => f(event));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ntype KeyTuple = [string, KeyboardEventType, DownButton]\r\ntype KeyboardCallback = (event: KeyboardEvent) => void;\r\ntype KeyboardEventType = 'keydown' | 'keyup';\r\nexport type DownButton = 'none' | 'ctrl' | 'shift' | 'alt' | 'any';\r\n","<svg:g>\r\n  <svg:ellipse [attr.cx]=\"node!.position.x + node!.width / 2\"\r\n               [attr.cy]=\"node!.position.y + node!.height / 2\"\r\n               [attr.rx]=\"node!.width / 2\"\r\n               [attr.ry]=\"node!.height / 2\"\r\n               [ngStyle]=\"node!.styleObject\"\r\n  >\r\n  </svg:ellipse>\r\n</svg:g>\r\n\r\n\r\n<!-- Double border if applicable -->\r\n<svg:ellipse *ngIf=\"node?.hasDoubleBorder\"\r\n             [attr.cx]=\"node!.position.x + node!.width / 2\"\r\n             [attr.cy]=\"node!.position.y + node!.height / 2\"\r\n             [attr.rx]=\"node!.width / 2 - 6\"\r\n             [attr.ry]=\"node!.height / 2 - 6\"\r\n             style=\"fill:none;stroke:black;stroke-width:2;fill-opacity:0;stroke-opacity:0.9\"\r\n>\r\n</svg:ellipse>\r\n\r\n<svg:g basic-node-text [node]=\"node\"></svg:g>\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {EllipseNode} from \"../../../model/node/ellipse-node\";\r\nimport {EditService} from \"../../services/edit.service\";\r\n\r\n@Component({\r\n  selector: '[ellipse-node-render]',\r\n  templateUrl: './ellipse-node-render.component.html',\r\n  styleUrls: ['./ellipse-node-render.component.scss']\r\n})\r\nexport class EllipseNodeRenderComponent {\r\n  @Input() node!: EllipseNode;\r\n\r\n}\r\n","import {RectangleNode} from \"./rectangle-node\";\r\nimport {SerialisedClassNode, SerialisedNode} from \"../../serialisation/serialised-data-structures/serialised-node\";\r\nimport {Node} from \"./node\";\r\n\r\nexport class ClassNode extends RectangleNode {\r\n  public firstLine: number = 0;\r\n  public secondLine: number | undefined = undefined;\r\n\r\n  public getNodeTypeName(): string {\r\n    return 'ClassNode';\r\n  }\r\n\r\n  public serialise(): SerialisedClassNode {\r\n    let result: any = super.serialise();\r\n    result.firstLine = this.firstLine;\r\n    result.secondLine = this.secondLine;\r\n    return result as SerialisedClassNode;\r\n  }\r\n\r\n  public getDeepCopy(): Node {\r\n    let result = new ClassNode(this.width, this.height, this.position.getDeepCopy());\r\n    result.text = this.text;\r\n    result.styleObject = this.styleObject;\r\n    result.firstLine = this.firstLine;\r\n    result.secondLine = this.secondLine;\r\n    return result as Node;\r\n  }\r\n}\r\n","import {RectangleNode} from \"./rectangle-node\";\r\n\r\nexport class HourglassNode extends RectangleNode {\r\n  public getNodeTypeName(): string {\r\n    return \"HourglassNode\";\r\n  }\r\n\r\n  public getDeepCopy() {\r\n    return new HourglassNode(this.width, this.height, this.position.getDeepCopy());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-json-icon',\r\n  templateUrl: './json-icon.component.html',\r\n  styleUrls: ['./json-icon.component.scss']\r\n})\r\nexport class JsonIconComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--TODO give credits to the creators of this svg-->\r\n\r\n<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n     viewBox=\"0 0 56 56\" style=\"enable-background:new 0 0 56 56;\" xml:space=\"preserve\">\r\n<g>\r\n\t<path style=\"fill:#E9E9E0;\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074\r\n\t\tc0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\r\n  <polygon style=\"fill:#D9D7CA;\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\r\n  <path style=\"fill:#9777A8;\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\r\n  <g>\r\n\t\t<path style=\"fill:#FFFFFF;\" d=\"M17.021,42.719v7.848c0,0.474-0.087,0.873-0.26,1.196s-0.405,0.583-0.697,0.779\r\n\t\t\ts-0.627,0.333-1.005,0.41c-0.378,0.077-0.768,0.116-1.169,0.116c-0.2,0-0.436-0.021-0.704-0.062s-0.547-0.104-0.834-0.191\r\n\t\t\ts-0.563-0.185-0.827-0.294s-0.487-0.232-0.67-0.369l0.697-1.107c0.091,0.063,0.221,0.13,0.39,0.198s0.354,0.132,0.554,0.191\r\n\t\t\ts0.41,0.111,0.629,0.157s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95v-7.711H17.021z\"/>\r\n    <path style=\"fill:#FFFFFF;\" d=\"M25.184,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622\r\n\t\t\ts-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116c-0.237-0.055-0.463-0.13-0.677-0.226\r\n\t\t\ts-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144\r\n\t\t\ts0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39s0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793\r\n\t\t\ts-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23\r\n\t\t\tc0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191\r\n\t\t\tc0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396\r\n\t\t\ts-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137\r\n\t\t\ts-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321\r\n\t\t\ts-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588\r\n\t\t\ts0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S25.184,49.7,25.184,50.238z\"/>\r\n    <path style=\"fill:#FFFFFF;\" d=\"M35.082,47.914c0,0.848-0.107,1.595-0.321,2.242s-0.511,1.185-0.889,1.613s-0.82,0.752-1.326,0.971\r\n\t\t\ts-1.06,0.328-1.661,0.328s-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971s-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242\r\n\t\t\ts0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.82-0.754,1.326-0.978s1.06-0.335,1.661-0.335s1.155,0.111,1.661,0.335\r\n\t\t\ts0.948,0.549,1.326,0.978s0.675,0.964,0.889,1.606S35.082,47.066,35.082,47.914z M30.844,51.729c0.337,0,0.658-0.066,0.964-0.198\r\n\t\t\ts0.579-0.349,0.82-0.649s0.431-0.695,0.567-1.183s0.21-1.082,0.219-1.784c-0.009-0.684-0.08-1.265-0.212-1.743\r\n\t\t\ts-0.314-0.873-0.547-1.183s-0.497-0.533-0.793-0.67s-0.608-0.205-0.937-0.205c-0.337,0-0.658,0.063-0.964,0.191\r\n\t\t\ts-0.579,0.344-0.82,0.649s-0.431,0.699-0.567,1.183c-0.137,0.483-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.267,0.212,1.75\r\n\t\t\ts0.314,0.877,0.547,1.183s0.497,0.528,0.793,0.67S30.516,51.729,30.844,51.729z\"/>\r\n    <path style=\"fill:#FFFFFF;\" d=\"M44.68,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H44.68z\"/>\r\n\t</g>\r\n  <g>\r\n\t\t<path style=\"fill:#9777A8;\" d=\"M19.5,19v-4c0-0.551,0.448-1,1-1c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.654,0-3,1.346-3,3v4\r\n\t\t\tc0,1.103-0.897,2-2,2c-0.553,0-1,0.448-1,1s0.447,1,1,1c1.103,0,2,0.897,2,2v4c0,1.654,1.346,3,3,3c0.553,0,1-0.448,1-1\r\n\t\t\ts-0.447-1-1-1c-0.552,0-1-0.449-1-1v-4c0-1.2-0.542-2.266-1.382-3C18.958,21.266,19.5,20.2,19.5,19z\"/>\r\n    <circle style=\"fill:#9777A8;\" cx=\"27.5\" cy=\"18.5\" r=\"1.5\"/>\r\n    <path style=\"fill:#9777A8;\" d=\"M39.5,21c-1.103,0-2-0.897-2-2v-4c0-1.654-1.346-3-3-3c-0.553,0-1,0.448-1,1s0.447,1,1,1\r\n\t\t\tc0.552,0,1,0.449,1,1v4c0,1.2,0.542,2.266,1.382,3c-0.84,0.734-1.382,1.8-1.382,3v4c0,0.551-0.448,1-1,1c-0.553,0-1,0.448-1,1\r\n\t\t\ts0.447,1,1,1c1.654,0,3-1.346,3-3v-4c0-1.103,0.897-2,2-2c0.553,0,1-0.448,1-1S40.053,21,39.5,21z\"/>\r\n    <path style=\"fill:#9777A8;\" d=\"M27.5,24c-0.553,0-1,0.448-1,1v3c0,0.552,0.447,1,1,1s1-0.448,1-1v-3\r\n\t\t\tC28.5,24.448,28.053,24,27.5,24z\"/>\r\n\t</g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n</svg>\r\n\r\n","import {Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild} from '@angular/core';\r\nimport {Position} from \"../../model/position\";\r\nimport {Edge, EndStyle, LineStyle, LineType} from \"../../model/edge\";\r\nimport {Label} from \"../../model/label\";\r\nimport {EdgeRepositionService} from \"../services/edge-reposition/edge-reposition.service\";\r\nimport {EdgeCreationService} from \"../services/edge-creation.service\";\r\nimport {Mode, ModeService} from \"../services/mode.service\";\r\nimport {SelectionService} from \"../services/selection.service\";\r\nimport {ModeAwareComponent} from \"../mode-aware-component\";\r\nimport {DeletionService} from \"../services/deletion.service\";\r\nimport {CachingService} from \"../services/caching/caching.service\";\r\nimport {EdgeFormattingModalComponent} from \"../edge-formatting-modal/edge-formatting-modal.component\";\r\nimport {FormattingModalComponent} from \"../formatting-modal/formatting-modal.component\";\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {ZoomService} from \"../services/zoom.service\";\r\nimport {DiagramComponent} from \"../diagram/diagram.component\";\r\nimport {MousePositionTransformService} from \"../services/mouse-position-transform.service\";\r\n\r\n@Component({\r\n  selector: '[edge-component]',\r\n  templateUrl: './edge.component.html',\r\n  styleUrls: ['./edge.component.scss'],\r\n})\r\nexport class EdgeComponent extends ModeAwareComponent implements OnDestroy {\r\n  @Input() edge!: Edge;\r\n  @Output() edgeChange = new EventEmitter<Edge>();\r\n  isSelected: boolean = false;\r\n  styleObject: {[key: string]: string | number} = {\r\n    'stroke': 'black',\r\n    'stroke-width': 2\r\n  }\r\n  cursor: 'pointer' | 'move' = 'pointer';\r\n\r\n  constructor(private edgeRepositionService: EdgeRepositionService,\r\n              modeService: ModeService,\r\n              private selectionService: SelectionService,\r\n              private deletionService: DeletionService,\r\n              private cachingService: CachingService,\r\n              private modalService: NgbModal,\r\n              private mousePositionTransformService: MousePositionTransformService) {\r\n    super(modeService);\r\n    selectionService.selectedObservable.subscribe(selectedList => {\r\n      this.isSelected = selectedList.includes(this.edge);\r\n\r\n      if (this.isSelected) {\r\n        this.styleObject['stroke'] = 'red';\r\n        this.cursor = 'move';\r\n      } else {\r\n        this.styleObject['stroke'] = 'black';\r\n        this.cursor = 'pointer';\r\n      }\r\n    });\r\n  }\r\n\r\n  public handleMouseDown(event: MouseEvent): void {\r\n    let position = this.mousePositionTransformService.transformPosition(new Position(event.x, event.y));\r\n    if (this.isSelected) {\r\n      this.edgeRepositionService.activate(this.edge, position);\r\n    } else {\r\n      this.selectionService.setEdge(this.edge);\r\n    }\r\n  }\r\n\r\n  public handleDoubleClick(event: MouseEvent) {\r\n    this.selectionService.setEdge(this.edge);\r\n    if (event.ctrlKey) {\r\n      if (this.selectionService.isEdge()) {\r\n        this.modalService.open(EdgeFormattingModalComponent);\r\n      }\r\n    } else {\r\n      // Todo: do mouse transformation.\r\n      let mousePosition = new Position(event.x, event.y - DiagramComponent.NAV_HEIGHT);\r\n      const DISTANCE_THRESHOLD = 25;\r\n      if (Position.getDistance(mousePosition, this.edge.getStartPosition()) <= DISTANCE_THRESHOLD\r\n        && this.edge.startLabel === undefined) {\r\n        this.edge.addStartLabel();\r\n      } else if (Position.getDistance(mousePosition, this.edge.getEndPosition()) <= DISTANCE_THRESHOLD\r\n        && this.edge.endLabel === undefined) {\r\n        this.edge.addEndLabel();\r\n      } else if (this.edge.middleLabel === undefined) {\r\n        this.edge.addMiddleLabel();\r\n      }\r\n    }\r\n  }\r\n\r\n  public isLine(): boolean {\r\n    return this.edge?.lineType === LineType.Line || false;\r\n  }\r\n\r\n  public isArc(): boolean {\r\n    return this.edge?.lineType === LineType.Arc || false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log(\"Edge component is being destroyed.\")\r\n  }\r\n\r\n  delete() {\r\n    this.modalService.dismissAll();\r\n    this.deletionService.deleteEdge(this.edge);\r\n  }\r\n}\r\n","<svg:g edge-render-dispatch\r\n       [edge]=\"edge!\"\r\n       [styleObject]=\"styleObject\"/>\r\n\r\n<!-- Todo: Implement invisible, clickable overlay to make arcs easier to click on.\r\nOnce done remove (mousedown) on render dispatch-->\r\n<!-- Invisible, selectable to make the mouse down trigger easily accessible -->\r\n<svg:polyline *ngIf=\"edge && isLine()\"\r\n              [attr.points]=\"edge.getPointString()\"\r\n              style=\"stroke:rgb(0, 0, 0); stroke-width:15; stroke-opacity: 0;  fill:none;\"\r\n              (mousedown)=\"handleMouseDown($event)\"\r\n              (dblclick)=\"handleDoubleClick($event)\"\r\n              [ngStyle]=\"{'cursor': cursor}\"/>\r\n<svg:path *ngIf=\"edge && isArc()\"\r\n          [attr.d]=\"edge.getPointString()\"\r\n          fill=\"none\"\r\n          style=\"stroke-width: 15; stroke: black; stroke-opacity: 0\"\r\n          (mousedown)=\"handleMouseDown($event)\"\r\n          (dblclick)=\"handleDoubleClick($event)\"\r\n          [ngStyle]=\"{'cursor': cursor}\"/>\r\n\r\n\r\n<svg:g *ngIf=\"edge && edge?.startLabel\"\r\n       label-component\r\n       [label]=\"edge.startLabel!\">\r\n</svg:g>\r\n\r\n<svg:g *ngIf=\"edge && edge?.middleLabel\"\r\n       label-component\r\n       [label]=\"edge.middleLabel!\">\r\n</svg:g>\r\n\r\n<svg:g *ngIf=\"edge && edge?.endLabel\"\r\n       label-component\r\n       [label]=\"edge.endLabel!\">\r\n</svg:g>\r\n","<svg:ellipse *ngFor=\"let point of node.getAllAttachmentPoints(); let i = index;\"\r\n  [attr.cx]=\"point.x\"\r\n  [attr.cy]=\"point.y\"\r\n  rx=\"5\"\r\n  ry=\"5\"\r\n  style=\"fill:green;stroke:black;stroke-width:2;fill-opacity:1;stroke-opacity:0.9;z-index:100;\"\r\n  (mouseup)=\"handleMouseUp($event, i)\"\r\n  (mousedown)=\"handleMouseDown($event, i)\"\r\n  (click)=\"handleMouseDown($event, i)\">\r\n</svg:ellipse>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Node} from \"../../../model/node/node\";\r\nimport {EdgeCreationService} from \"../../services/edge-creation.service\";\r\n\r\n@Component({\r\n  selector: '[clickable-attachment-points]',\r\n  templateUrl: './clickable-attachment-points.component.html',\r\n  styleUrls: ['./clickable-attachment-points.component.scss']\r\n})\r\nexport class ClickableAttachmentPointsComponent {\r\n  @Input() node!: Node;\r\n\r\n  constructor(private edgeCreationService: EdgeCreationService) {\r\n  }\r\n\r\n  handleMouseDown($event: MouseEvent, attachmentPoint: number) {\r\n    console.log('Mouse Down')\r\n    if (!this.edgeCreationService.isActive()) {\r\n      this.edgeCreationService.setStart(this.node, attachmentPoint);\r\n    }\r\n  }\r\n\r\n  handleMouseUp($event: MouseEvent, attachmentPoint: number) {\r\n    console.log('Mouse Up')\r\n    if (this.edgeCreationService.isActive()) {\r\n      this.edgeCreationService.setEnd(this.node, attachmentPoint);\r\n    }\r\n  }\r\n}\r\n","import {PolylineNode} from \"./polyline-node\";\r\nimport {Position} from \"../position\";\r\nimport {Node} from \"./node\";\r\n\r\nexport class DiamondNode extends PolylineNode {\r\n  constructor(width: number, height: number, position: Position) {\r\n    super(width, height, position);\r\n  }\r\n\r\n  protected getAllOffsets(): Position[] {\r\n    return [\r\n      new Position(this.width / 2, 0),\r\n      new Position(this.width / 2, this.height),\r\n      new Position(0, this.height / 2),\r\n      new Position(this.width, this.height / 2)\r\n    ];\r\n  }\r\n\r\n  getDeepCopy(): Node {\r\n    return new DiamondNode(this.width, this.height, this.position.getDeepCopy());\r\n  }\r\n\r\n  private getPoints(): Position[] {\r\n    return [\r\n      new Position(this.position.x + this.width / 2, this.position.y),\r\n      new Position(this.position.x + this.width, this.position.y + this.height / 2),\r\n      new Position(this.position.x + this.width / 2, this.position.y + this.height),\r\n      new Position(this.position.x, this.position.y + this.height / 2),\r\n      new Position(this.position.x + this.width / 2, this.position.y)\r\n    ];\r\n  }\r\n\r\n  getSVGPoints(): string {\r\n    let points: string[] = this.getPoints().map((pos: Position) => pos.toString());\r\n    return points.join();\r\n  }\r\n\r\n  getBorderSVGPoints(): string {\r\n    const OFFSET = 5;\r\n    return this.getPoints().map((pos: Position) => {\r\n      let centerX = this.position.x + this.width / 2;\r\n      let centerY = this.position.y + this.height / 2;\r\n      if (pos.x < centerX) {\r\n        pos.x += OFFSET;\r\n      } else if (pos.x > centerX) {\r\n        pos.x -= OFFSET;\r\n      }\r\n      if (pos.y < centerY) {\r\n        pos.y += OFFSET;\r\n      } else if (pos.y > centerY) {\r\n        pos.y -= OFFSET;\r\n      }\r\n\r\n      return pos;\r\n    }).map(pos => pos.toString()).join();\r\n  }\r\n  public getNodeTypeName(): string {\r\n    return \"Diamond\";\r\n  }\r\n  public preview = `<ellipse cx=\"${Node.PREVIEW_WIDTH} / 2\"\r\ny=\"${Node.DEFAULT_PREVIEW_HEIGHT} / 2\"\r\nwidth=\"${Node.PREVIEW_WIDTH} / 2\"\r\nheight=\"${Node.DEFAULT_PREVIEW_HEIGHT} /2\"\r\nstyle=\"fill: none; stroke-width: 1; stroke: black\">\r\n</ellipse>`;\r\n}\r\n","import {RepositionService} from \"../services/reposition.service\";\r\nimport {Mode, ModeService} from \"../services/mode.service\";\r\nimport {SelectionService} from \"../services/selection.service\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {Position} from \"../../model/position\";\r\nimport {ModeAwareComponent} from \"../mode-aware-component\";\r\nimport {DiagramComponent} from \"../diagram/diagram.component\";\r\nimport {Component, ElementRef, Input, ViewChild} from \"@angular/core\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {DeletionService} from \"../services/deletion.service\";\r\nimport {CachingService} from \"../services/caching/caching.service\";\r\nimport {FormattingModalComponent} from \"../formatting-modal/formatting-modal.component\";\r\nimport {MousePositionTransformService} from \"../services/mouse-position-transform.service\";\r\nimport {EditService} from \"../services/edit.service\";\r\n\r\n@Component({\r\n  templateUrl: './node.component.html',\r\n  selector: '[node-component]'\r\n})\r\nexport class NodeComponent extends ModeAwareComponent {\r\n  @Input() node!: Node;\r\n  hoveringNearby: boolean = false;\r\n  isSelected: boolean = false;\r\n  isInEditMode: boolean = false;\r\n\r\n  constructor(private repositionService: RepositionService,\r\n              modeService: ModeService,\r\n              private selectionService: SelectionService,\r\n              private modalService: NgbModal,\r\n              private deletionService: DeletionService,\r\n              private cachingService: CachingService,\r\n              private mousePositionTransformService: MousePositionTransformService,\r\n              private editService: EditService) {\r\n    super(modeService);\r\n    selectionService.selectedObservable.subscribe(selectedList => {\r\n      this.isSelected = selectedList.includes(this.node);\r\n    });\r\n  }\r\n\r\n  public handleMouseDown(event: MouseEvent) {\r\n    // If the node is already selected, we do not want to select it again.\r\n    // This is because there are multiple selected nodes sometimes\r\n    // and this allows you to move multiple at the same time.\r\n    if (!this.isSelected) {\r\n      this.selectionService.setNode(this.node);\r\n    } else {\r\n      this.repositionService.activate(this.mousePositionTransformService.transformPosition(new Position(event.clientX, event.clientY)));\r\n    }\r\n  }\r\n\r\n  public handleDoubleClick(event: MouseEvent) {\r\n    if (this.repositionService.isActive()) {\r\n      this.repositionService.deactivate();\r\n    }\r\n\r\n    if (event.ctrlKey) {\r\n      this.editService.deactivate();\r\n\r\n      if (this.selectionService.isNode()) {\r\n        this.modalService.open(FormattingModalComponent);\r\n      }\r\n    } else if (this.node && this.editService.getNode() != this.node) {\r\n      this.isInEditMode = true;\r\n      this.editService.deactivate();\r\n      this.editService.activate(this.node);\r\n    } else if (this.node == this.editService.getNode()) {\r\n      this.editService.addField();\r\n    }\r\n  }\r\n\r\n  delete(): void {\r\n    this.modalService.dismissAll();\r\n    this.deletionService.deleteNode(this.node);\r\n  }\r\n\r\n  save(): void {\r\n    this.cachingService.save();\r\n  }\r\n}\r\n","<svg:g node-render-dispatch\r\n       [node]=\"node\"\r\n       (mousedown)=\"handleMouseDown($event)\"\r\n       (dblclick)=\"handleDoubleClick($event)\"\r\n       [ngStyle]=\"{'cursor': isSelected ? 'move' : 'pointer'}\"/>\r\n","import {AfterViewInit, Component, Renderer2} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {DownButton, KeyboardEventCallerService} from \"./services/keyboard-event-caller.service\";\r\nimport {EditService} from \"./services/edit.service\";\r\nimport {Diagram} from \"../model/diagram\";\r\nimport {ActivatedRoute, Router, RoutesRecognized} from \"@angular/router\";\r\nimport {deserialiseDiagram} from \"../serialisation/deserialise/deserialise-diagram\";\r\nimport {DiagramContainerService} from \"./services/diagram-container.service\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n  public userFullName: string | undefined;\r\n  public userDiagrams: Diagram[] | undefined;\r\n  public loadDiagramId: Number | undefined;\r\n\r\n  constructor(private renderer: Renderer2, private keyboardEventCallbackMap: KeyboardEventCallerService, private route: ActivatedRoute, private router: Router, private editService: EditService, private diagramContainer: DiagramContainerService, private http: HttpClient) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    this.router.events.subscribe(val => {\r\n      if (val instanceof RoutesRecognized) {\r\n        // @ts-ignore\r\n        this.loadDiagramId = Number.parseInt(val.state.root.firstChild.params.id);\r\n        console.log(this.loadDiagramId)\r\n        // @ts-ignore\r\n        if(this.loadDiagramId){\r\n          this.http.get(\"api/diagram/visible\",{params: new HttpParams().set(\"id\", String(this.loadDiagramId))}).subscribe(\r\n            (data:any) => {\r\n              if(data.serialisedDiagram) {\r\n                this.diagramContainer.set(deserialiseDiagram(data.serialisedDiagram))\r\n              } else{\r\n                window.alert(\"Diagram could not be loaded\");\r\n                this.router.navigateByUrl(\"\");\r\n              }\r\n            },error =>  {\r\n              //TODO Open error modal or something\r\n              this.handleError(error)\r\n            })\r\n         }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.renderer.listen('window', 'keydown', (event: KeyboardEvent) => {\r\n      if (event.key == \"Backspace\" && this.editService.isActive()) {\r\n        event.preventDefault();\r\n      }\r\n      let downButton = AppComponent.getDownButton(event);\r\n      this.keyboardEventCallbackMap.executeCallbacks([event.key, \"keydown\", downButton], event);\r\n    });\r\n\r\n    this.renderer.listen('window', 'keyup', (event: KeyboardEvent) => {\r\n      let downButton = AppComponent.getDownButton(event);\r\n      this.keyboardEventCallbackMap.executeCallbacks([event.key, \"keyup\", downButton], event);\r\n    });\r\n\r\n    this.isLoggedIn();\r\n  }\r\n\r\n  private static getDownButton(event: KeyboardEvent): DownButton {\r\n    let downButton: DownButton = 'none';\r\n    if (event.ctrlKey) {\r\n      downButton = 'ctrl';\r\n    } else if (event.shiftKey) {\r\n      downButton = 'shift';\r\n    } else if (event.altKey) {\r\n      downButton = 'alt';\r\n    }\r\n    return downButton;\r\n  }\r\n\r\n  private isLoggedIn() {\r\n    this.http.get(\"/me\",{  responseType: 'text'\r\n      }).subscribe(\r\n      (data:any) => {\r\n        if(data == null ){\r\n          this.userFullName = undefined;\r\n        } else{\r\n          this.userFullName = data\r\n        }\r\n      },error =>  {\r\n        //TODO Open error modal or something\r\n        this.handleError(error)\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  handleError(error: any) {\r\n    console.log(error)\r\n  }\r\n\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n<a *ngIf=\"!userFullName || userFullName == '' \" class=\"nav-link\" href=\"/login\">login</a>\r\n<p *ngIf=\"userFullName && userFullName != ''\">Welcome {{this.userFullName}}</p>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Edge} from \"../../model/edge\";\r\nimport {DeletionService} from \"../services/deletion.service\";\r\nimport {CachingService} from \"../services/caching/caching.service\";\r\n\r\n@Component({\r\n  selector: 'app-edge-editor',\r\n  templateUrl: './edge-editor.component.html',\r\n  styleUrls: ['./edge-editor.component.scss']\r\n})\r\nexport class EdgeEditorComponent {\r\n  @Input() edge?: Edge;\r\n}\r\n","import {Mode, ModeService} from \"./services/mode.service\";\r\n\r\nexport abstract class ModeAwareComponent {\r\n  protected mode: Mode;\r\n\r\n  protected constructor(modeService: ModeService) {\r\n    this.mode = modeService.getLatestMode();\r\n    modeService.modeObservable.subscribe(mode => this.mode = mode);\r\n  }\r\n\r\n  public isInCreateMode(): boolean {\r\n    return this.mode === Mode.Create;\r\n  }\r\n\r\n  public isInSelectMode(): boolean {\r\n    return this.mode === Mode.Select;\r\n  }\r\n\r\n  public isInMoveMode(): boolean {\r\n    return this.mode === Mode.Move;\r\n  }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Lifeline} from \"../../model/sequence-diagram/lifeline\";\r\n\r\n@Component({\r\n  selector: '[lifeline-node]',\r\n  templateUrl: './lifeline.component.html',\r\n  styleUrls: ['./lifeline.component.scss']\r\n})\r\nexport class LifelineComponent {\r\n  public readonly RENDERING = Lifeline.RENDERING_CONSTANTS;\r\n  @Input() lifeline?: Lifeline;\r\n\r\n  constructor() { }\r\n\r\n  getX(): number {\r\n    if (this.lifeline === undefined) {\r\n      throw new Error('Rendering a lifeline whilst it is not defined.');\r\n    }\r\n\r\n    return this.lifeline.horizontalPosition  * (Lifeline.RENDERING_CONSTANTS.actorWidth +\r\n      Lifeline.RENDERING_CONSTANTS.actorBetweenOffset) + Lifeline.RENDERING_CONSTANTS.actorBetweenOffset;\r\n  }\r\n\r\n  getCenterX(): number {\r\n    if (this.lifeline === undefined) {\r\n      throw new Error('Rendering a lifeline whilst it is not defined.');\r\n    }\r\n\r\n    return this.getX() + Lifeline.RENDERING_CONSTANTS.actorWidth / 2;\r\n  }\r\n\r\n  getStartY() {\r\n    if (this.lifeline === undefined) {\r\n      throw new Error('Rendering a lifeline whilst it is not defined.');\r\n    }\r\n\r\n    return Lifeline.RENDERING_CONSTANTS.actorYOffset + Lifeline.RENDERING_CONSTANTS.actorHeight;\r\n  }\r\n\r\n  getLineSegments(): number[][] {\r\n    if (this.lifeline === undefined || (this.lifeline?.connections.length % 2 !== 0 && this.lifeline?.connections.length >= 2)) {\r\n      throw new Error('Connections must contain an even amount and be at least 2.')\r\n    }\r\n\r\n    let result = [];\r\n\r\n    for (let i = 0; i < this.lifeline!.connections.length; i += 2) {\r\n      result.push([this.lifeline!.connections[i], this.lifeline!.connections[i + 1]]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getActiveSegments(): number[][] {\r\n    if (this.lifeline === undefined || (this.lifeline?.connections.length % 2 !== 0 && this.lifeline?.connections.length >= 2)) {\r\n      throw new Error('Connections must contain an even amount and be at least 2.')\r\n    }\r\n\r\n    let result = [];\r\n\r\n    for (let i = 1; i !== this.lifeline!.connections.length - 1; i += 2) {\r\n      result.push([this.lifeline!.connections[i], this.lifeline!.connections[i + 1]]);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","<svg:rect *ngIf=\"lifeline\"\r\n  [attr.x]=\"getX()\"\r\n  [attr.y]=\"20\"\r\n  width=\"150\"\r\n  height=\"75\"\r\n  style=\"stroke: black; stroke-width: 1; fill: none;\"\r\n>\r\n</svg:rect>\r\n\r\n\r\n<svg:line *ngFor=\"let connection of getLineSegments()\"\r\n          [attr.x1]=\"getCenterX()\"\r\n          [attr.x2]=\"getCenterX()\"\r\n          [attr.y1]=\"connection[0]\"\r\n          [attr.y2]=\"connection[1]\"\r\n          style=\"stroke: black; stroke-width: 1\"\r\n          stroke-dasharray=\"12, 2\"\r\n></svg:line>\r\n\r\n<svg:rect *ngFor=\"let seg of getActiveSegments()\"\r\n  [attr.x]=\"getCenterX() - RENDERING.activeBlockWidth / 2\"\r\n  [attr.y]=\"seg[0]\"\r\n  [attr.width]=\"RENDERING.activeBlockWidth\"\r\n  [attr.height]=\"seg[1] - seg[0]\"\r\n  style=\"stroke: black; stroke-width: 1; fill: none;\"\r\n>\r\n</svg:rect>\r\n","<svg:g>\r\n  <svg:rect\r\n            [attr.x]=\"node.position.x\"\r\n            [attr.y]=\"node.position.y\"\r\n            [attr.width]=\"node.width\"\r\n            [attr.height]=\"node.height\"\r\n            [ngStyle]=\"node.styleObject\"\r\n  >\r\n  </svg:rect>\r\n\r\n<!--  <svg:rect *ngIf=\"isInEditMode\" (click)=\"addLine()\"-->\r\n<!--            [attr.x]=\"node.position.x\"-->\r\n<!--            [attr.y]=\"node.position.y + node.height + 10\"-->\r\n<!--            [attr.width]=\"node.width\"-->\r\n<!--            [attr.height]=\"24\"-->\r\n<!--            [ngStyle]=\"node.styleObject\">-->\r\n\r\n<!--  </svg:rect>-->\r\n<!--  <svg:g>-->\r\n<!--    <svg:text *ngIf=\"isInEditMode\" (click)=\"addLine()\"-->\r\n<!--    text-anchor=\"middle\" style=\"font-size: 16px\"-->\r\n<!--              [attr.x]=\"node.position.x + node.width / 2\"-->\r\n<!--              [attr.y]=\"node.position.y + node.height + 28\">add line</svg:text>-->\r\n<!--  </svg:g>-->\r\n\r\n\r\n  <svg:g *ngIf=\"editService.getNode() != node\">\r\n    <svg:text *ngFor=\"let line of node.getTextLines(); let i = index;\"\r\n              [attr.x]=\"node.position.x + node.width / 2\"\r\n              [attr.y]=\"node.position.y + i * 24 + 20\"\r\n              text-anchor=\"middle\"\r\n              style=\"font-size: 16px\">\r\n      {{line}}\r\n    </svg:text>\r\n  </svg:g>\r\n\r\n  <svg:g *ngIf=\"editService.getNode() == node\">\r\n    <svg:text *ngFor=\"let line of node.getTextLines(); let i = index;\"\r\n              [attr.x]=\"node.position.x + node.width / 2\"\r\n              [attr.y]=\"node.position.y + i * 24 + 20\"\r\n              text-anchor=\"middle\"\r\n              style=\"font-size: 16px\"\r\n              (click)=\"setActive(i)\">\r\n      {{line}}\r\n    </svg:text>\r\n  </svg:g>\r\n\r\n  <svg:line [attr.x1]=\"node.position.x\"\r\n            [attr.x2]=\"node.position.x + node.width\"\r\n            [attr.y1]=\"node.position.y + (node.firstLine + 1) * 24\"\r\n            [attr.y2]=\"node.position.y + (node.firstLine + 1) * 24\"\r\n            style=\"stroke: black; stroke-width: 2px\">\r\n  </svg:line>\r\n</svg:g>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ClassNode} from \"../../../model/node/class-node\";\r\nimport {EditService} from \"../../services/edit.service\";\r\nimport {KeyboardEventCallerService} from \"../../services/keyboard-event-caller.service\";\r\n\r\n@Component({\r\n  selector: '[class-node-render]',\r\n  templateUrl: './class-node-render.component.html',\r\n  styleUrls: ['./class-node-render.component.scss']\r\n})\r\nexport class ClassNodeRenderComponent {\r\n  public isInEditMode: boolean = false;\r\n  @Input() node!: ClassNode;\r\n\r\n  constructor(public editService: EditService,\r\n              keyboardEventCallerService: KeyboardEventCallerService) {\r\n    keyboardEventCallerService.addCallback(['Escape', \"keydown\", 'any'], (ignored) => {\r\n      this.isInEditMode = false;\r\n      editService.deactivate();\r\n    });\r\n  }\r\n\r\n  setActive(index: number) {\r\n      this.editService.setActiveTextLine(index, false)\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Edge} from \"../../model/edge\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\r\nimport {DeletionService} from \"./deletion.service\";\r\nimport {DiagramContainerService} from \"./diagram-container.service\";\r\nimport {Label} from \"../../model/label\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SelectionService {\r\n  private readonly selected: BehaviorSubject<Array<Node | Edge | Label>> = new BehaviorSubject<Array<Node | Edge | Label>>([]);\r\n  public readonly selectedObservable = this.selected.asObservable();\r\n\r\n  constructor(keyboardEventCallerService: KeyboardEventCallerService,\r\n              diagramContainerService: DiagramContainerService) {\r\n    keyboardEventCallerService.addCallback(['Escape', 'keydown', 'any'], (event => {\r\n      this.deselect();\r\n    }));\r\n\r\n    // When the diagram reference is updated, the references to nodes and edges are too.\r\n    // Therefore our selected objects may be de-synced. To prevent de-sync bugs,  we simply deselect.\r\n    diagramContainerService.diagramObservable.subscribe(ignored => this.deselect());\r\n  }\r\n\r\n  public add(value: Node | Edge | Label): void {\r\n    this.selected.getValue().push(value);\r\n    this.selected.next(this.selected.getValue().map(x => x));\r\n  }\r\n\r\n  public setNode(value: Node): void {\r\n    this.selected.next([value]);\r\n  }\r\n\r\n  public setEdge(value: Edge): void {\r\n    this.selected.next([value]);\r\n  }\r\n\r\n  public deselect(): void {\r\n    this.selected.next([]);\r\n  }\r\n\r\n  public isNode(): boolean {\r\n    let selected = this.selected.getValue();\r\n    return (selected.length === 1) && (selected[0] instanceof Node);\r\n  }\r\n\r\n  public isEdge(): boolean {\r\n    let selected = this.selected.getValue();\r\n    return (selected.length === 1) && (selected[0] instanceof Edge);\r\n  }\r\n\r\n  public getNode(): Node {\r\n    if (!this.isNode()) {\r\n      throw new Error(\"Requires a single node to be selected.\");\r\n    }\r\n    return <Node> this.selected.getValue()[0];\r\n  }\r\n\r\n  public getEdge(): Edge {\r\n    if (!this.isNode()) {\r\n      throw new Error(\"Requires a single edge to be selected.\");\r\n    }\r\n    return <Edge> this.selected.getValue()[0];\r\n  }\r\n\r\n  public setLabel(label: Label) {\r\n    this.selected.next([label]);\r\n  }\r\n}\r\n","import {Component, Input} from \"@angular/core\";\r\nimport {Edge} from \"../../../model/edge\";\r\n\r\n@Component({\r\n  selector: '[line-render-component]',\r\n  templateUrl: './line-render.component.html',\r\n})\r\nexport class LineRenderComponent {\r\n  @Input() edge!: Edge;\r\n  @Input() styleObject?: {[key: string]: string | number};\r\n}\r\n","<svg:polyline [attr.points]=\"edge.getPointString()\"\r\n              [ngStyle]=\"styleObject || {}\"\r\n              fill=\"none\"\r\n              [attr.marker-end]=\"edge.getEndMarker()\"\r\n              [attr.marker-start]=\"edge.getStartMarker()\"\r\n              [attr.stroke-dasharray]=\"edge.getLineStyleString()\">\r\n</svg:polyline>\r\n","<app-edge-editor *ngIf=\"currentEdge\" [edge]=\"currentEdge\"></app-edge-editor>\r\n\r\n<app-node-editor *ngIf=\"currentNode\" [node]=\"currentNode\"></app-node-editor>\r\n<!--<div *ngIf=\"currentNode && currentNode.formatter\">-->\r\n<!--  Width: <input type=\"number\" [(ngModel)]=\"currentNode.formatter.width\">-->\r\n<!--  Height: <input type=\"number\" [(ngModel)]=\"currentNode.formatter.height\">-->\r\n<!--  Shape:-->\r\n<!--  <select [(ngModel)]=\"currentNode.formatter.shape\">-->\r\n<!--    <option [ngValue]=\"0\">Rectangle</option>-->\r\n<!--    <option [ngValue]=\"1\">Ellipse</option>1-->\r\n<!--    <option [ngValue]=\"2\">Diamond</option>-->\r\n<!--  </select>-->\r\n\r\n<!--  <p>A node is selected! {{currentNode}}</p>-->\r\n<!--  <button type=\"button\" class=\"btn btn-danger\"(click)=\"deleteNode()\">Delete</button>-->\r\n\r\n<!--</div>-->\r\n\r\n","import {Component} from '@angular/core';\r\nimport {Edge, LineStyle} from \"../../model/edge\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {SelectionService} from \"../services/selection.service\";\r\nimport {DeletionService} from \"../services/deletion.service\";\r\nimport {ModeService} from \"../services/mode.service\";\r\n\r\n@Component({\r\n  selector: 'app-selected-editor',\r\n  templateUrl: './selected-editor.component.html',\r\n  styleUrls: ['./selected-editor.component.scss']\r\n})\r\nexport class SelectedEditorComponent {\r\n  currentNode?: Node;\r\n  currentEdge?: Edge;\r\n\r\n  constructor(selectionService: SelectionService, private deletionService: DeletionService) {\r\n\r\n  }\r\n\r\n  private setAllUndefined(): void {\r\n    this.currentEdge = undefined;\r\n    this.currentNode = undefined;\r\n  }\r\n\r\n  deleteNode() {\r\n    if (this.currentNode) {\r\n      this.deletionService.deleteNode(this.currentNode);\r\n      this.currentNode = undefined;\r\n    } else {\r\n      throw new Error(\"Trying to delete a node whilst no node is selected.\");\r\n    }\r\n  }\r\n\r\n  deleteEdge() {\r\n    if (this.currentEdge) {\r\n      this.deletionService.deleteEdge(this.currentEdge);\r\n      this.currentEdge = undefined;\r\n    } else {\r\n      throw new Error(\"Trying to delete an edge whilst no edge is selected.\");\r\n\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DiagramComponent } from './diagram/diagram.component';\r\nimport { EdgeComponent } from './edge/edge.component';\r\nimport { ArrowMarkerComponent } from './arrow-marker/arrow-marker.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport { LabelComponent } from './label/label.component';\r\nimport {RepositionService} from \"./services/reposition.service\";\r\nimport {ModeSelectorComponent} from \"./mode-selector/mode-selector.component\";\r\nimport {ModeService} from \"./services/mode.service\";\r\nimport { NewEdgePreviewComponent } from './new-edge-preview/new-edge-preview.component';\r\nimport { SelectedEditorComponent } from './selected-editor/selected-editor.component';\r\nimport {DeletionService} from \"./services/deletion.service\";\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { EdgeEditorComponent } from './edge-editor/edge-editor.component';\r\nimport { NodeEditorComponent } from './node-compontents/node-editor/node-editor.component';\r\nimport { MoveMenuComponent } from './move-menu/move-menu.component';\r\nimport { ClickableAttachmentPointsComponent } from './node-compontents/clickable-attachment-points/clickable-attachment-points.component';\r\nimport {ClickableResizePointsComponent} from \"./node-compontents/clickable-resize-points/clickable-resize-points.component\";\r\nimport { ExportDiagramComponent } from './export-diagram/export-diagram.component';\r\nimport { BasicNodeTextComponent } from './node-compontents/basic-node-text/basic-node-text.component';\r\nimport { DiagramDownloadComponent } from './diagram-download/diagram-download.component';\r\nimport { JsonUriPipe } from './json-uri.pipe';\r\nimport { DiagramImportComponent } from './diagram-import/diagram-import.component';\r\nimport { LifelineComponent } from './lifeline/lifeline.component';\r\nimport { SequenceDiagramComponent } from './sequence-diagram/sequence-diagram.component';\r\nimport { SequenceEdgeComponent } from './sequence-edge/sequence-edge.component';\r\nimport { SelectedNodeHighlightComponent } from './node-compontents/selected-node-highlight/selected-node-highlight.component';\r\nimport { CreationSidebarComponent } from './creation-sidebar/creation-sidebar.component';\r\nimport { DragDropPreviewComponent } from './drag-drop-preview/drag-drop-preview.component';\r\nimport {LineRenderComponent} from \"./edge/line-render/line-render.component\";\r\nimport { ArcRenderComponent } from './edge/edge-render/arc-render.component';\r\nimport { ClassNodeRenderComponent } from './node-compontents/class-node/class-node-render.component';\r\nimport { RectangleNodeRenderComponent } from './node-compontents/rectangle-node/rectangle-node-render.component';\r\nimport { EllipseNodeRenderComponent } from './node-compontents/ellipse-node/ellipse-node-render.component';\r\nimport { DiamondNodeRenderComponent } from './node-compontents/diamond-node/diamond-node-render.component';\r\nimport { EdgeRenderDispatchComponent } from './edge/edge-render-dispatch/edge-render-dispatch.component';\r\nimport { NodeRenderDispatchComponent } from './node-compontents/node-render-dispatch/node-render-dispatch.component';\r\nimport {NodeComponent} from \"./node-compontents/node-component\";\r\nimport { FormattingModalComponent } from './formatting-modal/formatting-modal.component';\r\nimport { EdgeFormattingModalComponent } from './edge-formatting-modal/edge-formatting-modal.component';\r\nimport { UploadModalComponent } from './upload-modal/upload-modal.component';\r\nimport { SaveModalComponent } from './save-modal/save-modal.component';\r\nimport { JsonIconComponent } from './icons/json-icon/json-icon.component';\r\nimport { PngIconComponent } from './icons/png-icon/png-icon.component';\r\nimport { DragSelectPreviewComponent } from './drag-select-preview/drag-select-preview.component';\r\nimport { HourglassNodeRenderComponent } from './node-compontents/hourglass-node/hourglass-node-render.component';\r\nimport { ActorNodeRenderComponent } from './node-compontents/actor-node/actor-node-render.component';\r\nimport { DiagramManagementModalComponent } from './diagram-management-modal/diagram-management-modal.component';\r\nimport { DiagramPreviewComponent } from './diagram-preview/diagram-preview.component';\r\nimport { BelowTextNodeComponent } from './node-compontents/below-text-node/below-text-node.component';\r\nimport {FaIconLibrary, FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\r\nimport {faEdit, faEye, faEyeSlash, faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  faCog,\r\n  faCopy,\r\n  faFolderOpen,\r\n  faPaste, faQuestion,\r\n  faRedo,\r\n  faSave,\r\n  faSearchMinus,\r\n  faSearchPlus, faTasks,\r\n  faUndo, faUser, faUserSlash\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { SpecialCharacterSelectorComponent } from './special-character-selector/special-character-selector.component';\r\nimport { SpecialCharacterRowComponent } from './special-character-row/special-character-row.component';\r\nimport { GridOverlayComponent } from './grid-overlay/grid-overlay.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DiagramComponent,\r\n    LineRenderComponent,\r\n    EdgeComponent,\r\n    ArrowMarkerComponent,\r\n    LabelComponent,\r\n    ModeSelectorComponent,\r\n    NewEdgePreviewComponent,\r\n    SelectedEditorComponent,\r\n    EdgeEditorComponent,\r\n    NodeEditorComponent,\r\n    MoveMenuComponent,\r\n    ClickableAttachmentPointsComponent,\r\n    ClickableResizePointsComponent,\r\n    ExportDiagramComponent,\r\n    BasicNodeTextComponent,\r\n    DiagramDownloadComponent,\r\n    JsonUriPipe,\r\n    DiagramImportComponent,\r\n    LifelineComponent,\r\n    SequenceDiagramComponent,\r\n    SequenceEdgeComponent,\r\n    SelectedNodeHighlightComponent,\r\n    CreationSidebarComponent,\r\n    DragDropPreviewComponent,\r\n    ArcRenderComponent,\r\n    ClassNodeRenderComponent,\r\n    RectangleNodeRenderComponent,\r\n    EllipseNodeRenderComponent,\r\n    DiamondNodeRenderComponent,\r\n    EdgeRenderDispatchComponent,\r\n    NodeRenderDispatchComponent,\r\n    NodeComponent,\r\n    NodeComponent,\r\n    FormattingModalComponent,\r\n    EdgeFormattingModalComponent,\r\n    UploadModalComponent,\r\n    SaveModalComponent,\r\n    JsonIconComponent,\r\n    PngIconComponent,\r\n    DragSelectPreviewComponent,\r\n    HourglassNodeRenderComponent,\r\n    ActorNodeRenderComponent,\r\n    DiagramManagementModalComponent,\r\n    DiagramPreviewComponent,\r\n    BelowTextNodeComponent,\r\n    NavBarComponent,\r\n    SpecialCharacterSelectorComponent,\r\n    SpecialCharacterRowComponent,\r\n    GridOverlayComponent\r\n  ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        NgbModule,\r\n        FontAwesomeModule\r\n    ],\r\n  providers: [RepositionService, ModeService, DeletionService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(library: FaIconLibrary) {\r\n    library.addIcons(faTrashAlt, faEdit, faEye, faEyeSlash, faSave, faUndo, faRedo, faCopy, faPaste, faFolderOpen,\r\n      faSearchMinus, faSearchPlus, faQuestion, faCog, faUser, faTasks, faUserSlash);\r\n  }\r\n}\r\n","import {ChangeDetectorRef, Component, Input, NgZone} from '@angular/core';\r\nimport {Mode, ModeService} from \"../services/mode.service\";\r\n\r\n@Component({\r\n  selector: 'app-mode-selector',\r\n  templateUrl: './mode-selector.component.html',\r\n  styleUrls: ['./mode-selector.component.scss']\r\n})\r\nexport class ModeSelectorComponent {\r\n  @Input() mode: Mode;\r\n  ModeType = Mode;\r\n  constructor(private modeService: ModeService) {\r\n    modeService.modeObservable.subscribe((mode: Mode) => this.mode = mode);\r\n    this.mode = modeService.getLatestMode();\r\n  }\r\n\r\n  inSelectMode(): boolean {\r\n    return this.mode === Mode.Select;\r\n  }\r\n\r\n  inCreateMode(): boolean {\r\n    return this.mode === Mode.Create;\r\n  }\r\n\r\n  inMoveMode(): boolean {\r\n    return this.mode === Mode.Move;\r\n  }\r\n\r\n  setMode(mode: Mode): void {\r\n    this.modeService.setMode(mode);\r\n  }\r\n}\r\n","<div class=\"row p-3\">\r\n  <ul class=\"nav nav-pills nav-fill w-100\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [ngClass]=\"{active: inSelectMode()}\" (click)=\"setMode(ModeType.Select)\" href=\"#\">Select (1)</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [ngClass]=\"{active: inCreateMode()}\" (click)=\"setMode(ModeType.Create)\" href=\"#\">Create (2)</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [ngClass]=\"{active: inMoveMode()}\" (click)=\"setMode(ModeType.Move)\"  href=\"#\">Move (3)</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {Position} from \"../../../model/position\";\r\nimport {Node} from \"../../../model/node/node\";\r\nimport {Edge, LineType} from \"../../../model/edge\";\r\nimport {Deactivatable} from \"../deactivatable\";\r\nimport {StartEndRepositioner} from \"./start-end-repositioner\";\r\nimport {ArcMiddleRepositioner} from \"./arc-middle-repositioner\";\r\nimport {FixedPointRepositioner} from \"./fixed-point-repositioner\";\r\nimport {CachingService} from \"../caching/caching.service\";\r\nimport {SnapService} from \"../snap.service\";\r\nimport {DiagramContainerService} from \"../diagram-container.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Service responsible for repositioning an edge. This happens in four distinct ways.\r\n * 1) Moving of start/end position and possibly snapping to attachment point of node.\r\n * 2) Adding a middle point to an Line edge.\r\n * 3) Moving an existing middle point of a line edge.\r\n * 4) Moving the middle point of an Arc.\r\n */\r\nexport class EdgeRepositionService implements Deactivatable {\r\n  /** Distance within which start/end snaps to node attachment point */\r\n  public readonly SNAP_DISTANCE = 10;\r\n  /** Distance within which a start/end/middle point will be selected to be moved */\r\n  public readonly SELECT_DISTANCE = 25;\r\n\r\n  public readonly arcMiddleRepositioner = new ArcMiddleRepositioner();\r\n  public readonly fixedPointRepositioner = new FixedPointRepositioner();\r\n  public readonly startEndRepositioner = new StartEndRepositioner(this.SNAP_DISTANCE);\r\n\r\n  constructor(private cachingService: CachingService,\r\n              private snapService: SnapService,\r\n              diagramContainerService: DiagramContainerService) {\r\n    diagramContainerService.diagramObservable.subscribe(diagram => this.setNodes(diagram.nodes));\r\n  }\r\n\r\n  /**\r\n   * Activate the edge repositioner.\r\n   * This function determines wwhich of the 4 move methods will be used.\r\n   * @param edge Edge to be repositioned.\r\n   * @param mousePosition Position of the mouse when the service was activated.\r\n   */\r\n  public activate(edge: Edge, mousePosition: Position): void {\r\n    if (Position.getDistance(edge.getStartPosition(), mousePosition) <= this.SELECT_DISTANCE) {\r\n      this.startEndRepositioner.activate(edge, true);\r\n      return;\r\n    } else if (Position.getDistance(edge.getEndPosition(), mousePosition) <= this.SELECT_DISTANCE) {\r\n      this.startEndRepositioner.activate(edge, false);\r\n      return;\r\n    }\r\n\r\n    if (edge.lineType === LineType.Arc) {\r\n      this.arcMiddleRepositioner.activate(edge);\r\n      return;\r\n    }\r\n\r\n    for (let middle of edge.middlePositions) {\r\n      if (Position.getDistance(middle, mousePosition) <= this.SELECT_DISTANCE) {\r\n        this.fixedPointRepositioner.activate(edge, middle);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (edge.lineType === LineType.Line) {\r\n      let allPoints = edge.getAllPoints();\r\n      let indexToBeInserted: number | undefined;\r\n      for (let i = 0; i < allPoints.length - 1; i++) {\r\n        if (EdgeRepositionService.liesOnSegment(mousePosition, allPoints[i], allPoints[i + 1])) {\r\n          indexToBeInserted = i;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (indexToBeInserted !== undefined) {\r\n        edge.middlePositions.splice(indexToBeInserted, 0, mousePosition);\r\n        this.fixedPointRepositioner.activate(edge, mousePosition);\r\n        return;\r\n      }\r\n    }\r\n\r\n    throw new Error('Trying to reposition an edge that is not a start, end or middle but also does not ' +\r\n      'lie on a segment. This should be impossible');\r\n  }\r\n\r\n  /**\r\n   * Updates the position of the correct part of the edge with which the repositioner was activated.\r\n   * @param position The position to which the edge position needs to be updated.\r\n   * @throws Throws an error if the repositioner is not active.\r\n   */\r\n  public update(position: Position) {\r\n    if (this.fixedPointRepositioner.isActive()) {\r\n      this.fixedPointRepositioner.update(this.snapService.snapIfApplicable(position,5));\r\n    } else if (this.arcMiddleRepositioner.isActive()) {\r\n      this.arcMiddleRepositioner.update(this.snapService.snapIfApplicable(position, 5));\r\n    } else if (this.startEndRepositioner.isActive()) {\r\n      this.startEndRepositioner.update(this.snapService.snapIfApplicable(position,5));\r\n    } else {\r\n      throw new Error('Updating whilst no repositioner is active.');\r\n    }\r\n  }\r\n\r\n  public deactivate() {\r\n    if (this.fixedPointRepositioner.isActive()) {\r\n      this.fixedPointRepositioner.deactivate();\r\n      this.cachingService.save();\r\n    } else if (this.arcMiddleRepositioner.isActive()) {\r\n      this.arcMiddleRepositioner.deactivate();\r\n      this.cachingService.save();\r\n    } else if (this.startEndRepositioner.isActive()) {\r\n      this.startEndRepositioner.deactivate();\r\n      this.cachingService.save();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the nodes in the current diagram.\r\n   * @param nodes Reference to the list of nodes. Note that if the reference used by the diagram is updated,\r\n   *              this one must be updated too.\r\n   */\r\n  private setNodes(nodes: Node[]): void {\r\n    this.startEndRepositioner.setNodes(nodes);\r\n  }\r\n\r\n  /**\r\n   * Determines whether a given point lies on a given line segment within some margin of error.\r\n   * The margin of error is there because the user can not perfectly click on the line.\r\n   * @param point Point for which it will be checked whether it lies on the segment.\r\n   * @param start Start of the line segment.\r\n   * @param end End of the line segment.\r\n   * @returns True if the point approximately lies on the line segment, false otherwise.\r\n   */\r\n  public static liesOnSegment(point: Position, start: Position, end: Position): boolean {\r\n    let actualSegment: Position = Position.subtract(end, start);\r\n    let ourSegment: Position = Position.subtract(point, start);\r\n    let angle: number = Math.atan2(-actualSegment.y, actualSegment.x);\r\n    let rotationMatrix: number[][] = [[Math.cos(angle), Math.sin(angle)],[-Math.sin(angle), Math.cos(angle)]];\r\n    let baseVector: number[] = this.matrixVectorMult(rotationMatrix, [actualSegment.x, actualSegment.y]);\r\n    let transformedPoint: number[] = this.matrixVectorMult(rotationMatrix, [ourSegment.x, ourSegment.y]);\r\n    return (Math.abs(transformedPoint[1]) < 10 && (transformedPoint[0] >= 0) && (transformedPoint[0] <= baseVector[0]));\r\n  }\r\n\r\n  private static matrixVectorMult(matrix: number[][], vector: number[]): number[] {\r\n    return [matrix[0][0] * vector[0] + matrix[1][0] * vector[1], matrix[0][1] * vector[0] + matrix[1][1] * vector[1]]\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.startEndRepositioner.isActive() || this.arcMiddleRepositioner.isActive()\r\n      || this.fixedPointRepositioner.isActive();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable, Subject} from \"rxjs\";\r\nimport {EdgeRepositionService} from \"./edge-reposition/edge-reposition.service\";\r\nimport {RepositionService} from \"./reposition.service\";\r\nimport {Deactivatable} from \"./deactivatable\";\r\nimport {EdgeCreationService} from \"./edge-creation.service\";\r\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Service responsible for determining in which mode the drawing tool resides.\r\n * If using the service, the mode should be read by subscribing to the modeObservable.\r\n * When a mode is switch any Deactivatable service is deactivated.\r\n * Note that you have to manually add your Deactivatable to the constructor.\r\n */\r\nexport class ModeService {\r\n  private deactivatables: Deactivatable[];\r\n  private mode: BehaviorSubject<Mode>;\r\n\r\n  /**\r\n   * Observable wrapper around the mode. You can use this to subscribe to mode updates.\r\n   */\r\n  public readonly modeObservable: Observable<Mode> = new Observable<Mode>();\r\n\r\n\r\n  constructor(edgeRepositionService: EdgeRepositionService,\r\n              repositionService: RepositionService,\r\n              edgeCreationService: EdgeCreationService,\r\n              keyboardEventCallerService: KeyboardEventCallerService) {\r\n    this.deactivatables = [edgeRepositionService, repositionService, edgeCreationService];\r\n    this.mode = new BehaviorSubject<Mode>(Mode.Select);\r\n    this.modeObservable = this.mode.asObservable();\r\n\r\n    keyboardEventCallerService.addCallback(['Control', \"keydown\", 'any'], (event => {\r\n      this.setMode(Mode.Create);\r\n    }));\r\n    keyboardEventCallerService.addCallback(['Control', \"keyup\", 'any'], (event => {\r\n      this.setMode(Mode.Select);\r\n    }));\r\n\r\n    keyboardEventCallerService.addCallback(['Shift', \"keydown\", 'any'], (event => {\r\n      this.setMode(Mode.Move);\r\n    }));\r\n    keyboardEventCallerService.addCallback(['Shift', \"keyup\", 'any'], (event => {\r\n      this.setMode(Mode.Select);\r\n    }));\r\n\r\n  }\r\n\r\n  /**\r\n   * Sets the mode and multi-casts this update to all subscribed.\r\n   * In addition to this all deactivatables are deactivated.\r\n   * @param mode New mode value\r\n   */\r\n  public setMode(mode: Mode): void {\r\n    if (this.getLatestMode() !== mode) {\r\n      this.mode.next(mode);\r\n      this.deactivatables.forEach(d => d.deactivate());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns what the mode was set to in the last update.\r\n   * This should be used to initialise objects when they are creation.\r\n   * After creation they should rely on subscription to the observable for updates.\r\n   */\r\n  public getLatestMode(): Mode {\r\n    return this.mode.getValue();\r\n  }\r\n}\r\n\r\nexport enum Mode {\r\n  Select = 1,\r\n  Create = 2,\r\n  Move = 3\r\n}\r\n","import {Edge} from \"./edge\";\r\nimport {Node} from \"./node/node\";\r\nimport {SerialisedDiagram} from \"../serialisation/serialised-data-structures/serialised-diagram\";\r\n\r\n\r\nexport class Diagram {\r\n  public edges: Edge[];\r\n  public nodes: Node[];\r\n\r\n\r\n  constructor(nodes: Node[] = [], edges: Edge[] = []) {\r\n    this.edges = edges;\r\n    this.nodes = nodes;\r\n  }\r\n\r\n  public serialise(): SerialisedDiagram {\r\n    let serialisedNodes = this.nodes.map((node) => node.serialise());\r\n    let serialisedEdges = this.edges.map((edge) => edge.serialise());\r\n\r\n    for (let edgeIndex = 0; edgeIndex < this.edges.length; edgeIndex++) {\r\n      let serialisedEdge = serialisedEdges[edgeIndex];\r\n      let actualEdge = this.edges[edgeIndex];\r\n\r\n      if (actualEdge.startNode !== undefined) {\r\n        serialisedEdge.startNodeId = this.nodes.indexOf(actualEdge.startNode);\r\n      }\r\n\r\n      if (actualEdge.endNode !== undefined) {\r\n        serialisedEdge.endNodeId = this.nodes.indexOf(actualEdge.endNode);\r\n      }\r\n    }\r\n    return {\r\n      edges: serialisedEdges,\r\n      nodes: serialisedNodes\r\n    }\r\n  }\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {SelectionService} from \"./selection.service\";\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {Position} from \"../../model/position\";\r\nimport {DiagramContainerService} from \"./diagram-container.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * The drag selection service allow for click and drag selection of nodes and edges.\r\n * Nodes are selected if they are fully inside the selection area.\r\n * Edges are selected if both their end and start point lie in the selected area.\r\n */\r\nexport class DragSelectionService {\r\n  private _start?: Position;\r\n  private _end?: Position;\r\n  private _diagram: Diagram;\r\n  // emitted coordinates are in the form [start.x, start.y, end.x, end.y]\r\n  // if the dragSelectionService is deactivated [] is sent.\r\n  public readonly startEndChangeEmitter: EventEmitter<Array<number>> = new EventEmitter<Array<number>>();\r\n\r\n  constructor(private selectionService: SelectionService,\r\n              private diagramContainerService: DiagramContainerService) {\r\n    this._diagram = diagramContainerService.get();\r\n    diagramContainerService.diagramObservable.subscribe(diagram => this._diagram = diagram);\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this._start !== undefined && this._end !== undefined;\r\n  }\r\n\r\n  public activate(position: Position): void {\r\n    this._start = position;\r\n    this._end = position;\r\n    this.selectionService.deselect();\r\n    this.startEndChangeEmitter.emit([this._start!.x, this._start!.y, this._end!.x, this._end!.y]);\r\n  }\r\n\r\n  public update(position: Position): void {\r\n    if (!this.isActive()) {\r\n      throw new Error('Service should be activated before it\\'s updated.');\r\n    }\r\n\r\n    this.selectionService.deselect();\r\n    this._end = position;\r\n\r\n    this._diagram?.nodes.forEach(node => {\r\n      let nodeStart = node.position.getDeepCopy();\r\n      let nodeEnd = Position.add(node.position, new Position(node.width, node.height));\r\n      if (Position.liesBetween(this._start!, nodeStart, this._end!) &&\r\n        Position.liesBetween(this._start!, nodeEnd, this._end!)) {\r\n        this.selectionService.add(node);\r\n      }\r\n    });\r\n\r\n    this._diagram?.edges.forEach(edge => {\r\n      if (Position.liesBetween(this._start!, edge.getStartPosition(), this._end!) &&\r\n        Position.liesBetween(this._start!, edge.getEndPosition(), this._end!)) {\r\n        this.selectionService.add(edge);\r\n      }\r\n    });\r\n\r\n    this.startEndChangeEmitter.emit([this._start!.x, this._start!.y, this._end!.x, this._end!.y]);\r\n  }\r\n\r\n  public deactivate(): void {\r\n    this._start = undefined;\r\n    this._end = undefined;\r\n    this.startEndChangeEmitter.emit([]);\r\n  }\r\n\r\n  get start(): Position | undefined {\r\n    return this._start;\r\n  }\r\n\r\n  get end(): Position | undefined {\r\n    return this._end;\r\n  }\r\n}\r\n","import {Position} from '../position';\r\nimport {SerialisedNode} from \"../../serialisation/serialised-data-structures/serialised-node\";\r\n\r\nexport abstract class Node {\r\n  private _width: number;\r\n  private _height: number;\r\n  private _position: Position;\r\n  private _text: string;\r\n  private _hasDoubleBorder: boolean;\r\n\r\n  private static beforeCallbacks: (() => void)[] = [];\r\n  private static afterCallbacks: (() => void)[] = [];\r\n\r\n\r\n  public static addBeforeCallback(callback: () => void): void {\r\n    Node.beforeCallbacks.push(callback);\r\n  }\r\n\r\n  public static addAfterCallback(callback: () => void): void {\r\n    Node.afterCallbacks.push(callback);\r\n  }\r\n\r\n  private callBeforeCallbacks(): void {\r\n    Node.beforeCallbacks.forEach(callback => callback());\r\n  }\r\n\r\n  private callAfterCallbacks(): void {\r\n    Node.afterCallbacks.forEach(callback => callback());\r\n  }\r\n\r\n  get width(): number {\r\n    return this._width;\r\n  }\r\n\r\n  set width(value: number) {\r\n    this.callBeforeCallbacks();\r\n    this._width = value;\r\n    this.callAfterCallbacks();\r\n  }\r\n\r\n  get height(): number {\r\n    return this._height;\r\n  }\r\n\r\n  set height(value: number) {\r\n    this.callBeforeCallbacks();\r\n    this._height = value;\r\n    this.callAfterCallbacks();\r\n  }\r\n\r\n  get position(): Position {\r\n    return this._position;\r\n  }\r\n\r\n  set position(value: Position) {\r\n    this.callBeforeCallbacks();\r\n    this._position = value;\r\n    this.callAfterCallbacks();\r\n  }\r\n\r\n  get text(): string {\r\n    return this._text;\r\n  }\r\n\r\n  set text(value: string) {\r\n    this.callBeforeCallbacks();\r\n    this._text = value;\r\n    this.callAfterCallbacks();\r\n  }\r\n\r\n  get hasDoubleBorder(): boolean {\r\n    return this._hasDoubleBorder;\r\n  }\r\n\r\n  set hasDoubleBorder(value: boolean) {\r\n    this.callBeforeCallbacks();\r\n    this._hasDoubleBorder = value;\r\n    this.callAfterCallbacks();\r\n  }\r\n\r\n\r\n\r\n  protected constructor(width: number, height: number, position: Position) {\r\n    this._width = width;\r\n    this._height = height;\r\n    this._position = position;\r\n    this._text = \"\";\r\n    this._hasDoubleBorder = false;\r\n  }\r\n\r\n  public getTextLines(): string[] {\r\n    return this._text.split(\"\\\\n\");\r\n  }\r\n\r\n  public abstract getDeepCopy(): Node;\r\n\r\n  protected abstract getAllOffsets(): Position[];\r\n\r\n  /**\r\n   * Returns the node type name. This is used for serialisation.\r\n   */\r\n  public abstract getNodeTypeName(): string;\r\n\r\n  public getPositionOfAttachment(index: number): Position {\r\n    return this.getAllAttachmentPoints()[index];\r\n  }\r\n\r\n  public isValidAttachment(index: number): boolean {\r\n    return 0 <= index && index < this.getAllOffsets().length;\r\n  }\r\n\r\n  public getAllAttachmentPoints(): Position[] {\r\n   return this.getAllOffsets().map(offset => Position.add(offset, this._position));\r\n  }\r\n\r\n\r\n  public getAllResizePoints(): Position[] {\r\n    return [ new Position(this._width / 2, 0),//Up\r\n      new Position(this._width, this._height / 2), //Right\r\n      new Position(this._width / 2, this._height), //Down\r\n      new Position(0, this._height / 2), // Left\r\n      ]\r\n  }\r\n\r\n  // Be careful with settings the fill to none as that will cause the body of the node to not be clickable.\r\n  public styleObject: {\r\n    [key: string]: number | string,\r\n  } = {\r\n    'fill': 'white',\r\n    'stroke': 'black',\r\n    'stroke-width': 2,\r\n    'fill-opacity': 0,\r\n    'stroke-opacity': 0.75,\r\n  };\r\n\r\n  public get styleKeys(): string[] {\r\n    return Object.keys(this.styleObject);\r\n  }\r\n\r\n  public serialise(): SerialisedNode {\r\n    return {\r\n      type: this.getNodeTypeName(),\r\n      width: this._width,\r\n      height: this._height,\r\n      position: this._position.serialise(),\r\n      text: this._text,\r\n      hasDoubleBorder: this._hasDoubleBorder\r\n    }\r\n  }\r\n\r\n  public abstract preview: string;\r\n  public static readonly PREVIEW_WIDTH = 216;\r\n  public static readonly DEFAULT_PREVIEW_HEIGHT = 50;\r\n\r\n}\r\n\r\ntype nodeChangeCallback = (oldNode: Node, newNode: Node) => void;\r\n\r\nexport enum AttachmentDirection {\r\n  North,\r\n  NorthEast,\r\n  East,\r\n  SouthEast,\r\n  South,\r\n  SouthWest,\r\n  West,\r\n  NorthWest\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {Position} from \"../../model/position\";\r\nimport {ZoomService} from \"./zoom.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LensOffsetService {\r\n  private isInOffsetChangeMode: boolean = false;\r\n  private startPosition?: Position;\r\n  constructor(private zoomService: ZoomService) { }\r\n\r\n  public activate(position: Position): void {\r\n    this.isInOffsetChangeMode = true;\r\n    this.startPosition = position;\r\n  }\r\n\r\n  public isActive () {\r\n    return this.isInOffsetChangeMode;\r\n  }\r\n\r\n  public update(position: Position) {\r\n    if (this.isActive()) {\r\n      let difference = Position.subtract(this.startPosition!, position);\r\n      let x = difference.x;\r\n      let y = difference.y;\r\n      console.log(x + \",\" + y)\r\n      this.zoomService.setXY(x, y);\r\n      this.startPosition = position;\r\n    }\r\n  }\r\n\r\n\r\n  public deactivate(): void {\r\n    this.isInOffsetChangeMode = false;\r\n    this.startPosition = undefined;\r\n  }\r\n}\r\n","<svg:g *ngIf=\"diagram\">\r\n  <svg:g *ngFor=\"let lifeline of diagram.lifelines\"lifeline-node [lifeline]=\"lifeline\"></svg:g>\r\n</svg:g>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {SequenceDiagram} from \"../../model/sequence-diagram/sequence-diagram\";\r\n\r\n@Component({\r\n  selector: '[sequence-diagram]',\r\n  templateUrl: './sequence-diagram.component.html',\r\n  styleUrls: ['./sequence-diagram.component.scss']\r\n})\r\nexport class SequenceDiagramComponent {\r\n  @Input() diagram?: SequenceDiagram;\r\n}\r\n","import {Component, ElementRef, ErrorHandler, OnInit, ViewChild} from '@angular/core';\r\nimport {Node} from \"../../model/node/node\";\r\nimport {NgbActiveModal, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {SelectionService} from \"../services/selection.service\";\r\nimport {DeletionService} from \"../services/deletion.service\";\r\nimport {CachingService} from \"../services/caching/caching.service\";\r\nimport {cd} from \"../../model/examples/cd\";\r\nimport {fsm} from \"../../model/examples/fsm\";\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {deserialiseDiagram} from \"../../serialisation/deserialise/deserialise-diagram\";\r\nimport {DiagramContainerService} from \"../services/diagram-container.service\";\r\nimport {SerialisedDiagram} from \"../../serialisation/serialised-data-structures/serialised-diagram\";\r\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-diagram-management-modal',\r\n  templateUrl: './diagram-management-modal.component.html',\r\n  styleUrls: ['./diagram-management-modal.component.scss']\r\n})\r\nexport class DiagramManagementModalComponent implements OnInit, ErrorHandler{\r\n  @ViewChild('deleteModal') deleteModal!: ElementRef;\r\n  @ViewChild('editModal') editModal!: ElementRef;\r\n\r\n  dbEntries: Array<DatabaseDiagramEntry> | undefined;\r\n  selectedIndex = -1;\r\n\r\n  ngOnInit() {\r\n    this.http.get('/api/diagram/all/me').subscribe(\r\n      (data:any) => {\r\n        this.dbEntries =data\r\n      },error =>  {\r\n        //TODO Open error modal or something\r\n        this.handleError(error)\r\n      })\r\n  }\r\n\r\n  get selectedDiagram(): Diagram | undefined {\r\n    if(!this.dbEntries){\r\n      return;\r\n    }\r\n    return this.selectedIndex === -1  ? undefined : deserialiseDiagram(this.dbEntries[this.selectedIndex].serialisedDiagram);\r\n  }\r\n\r\n  constructor(public modal: NgbActiveModal,\r\n              private modalService: NgbModal,\r\n              private diagramContainer: DiagramContainerService, private http: HttpClient) {\r\n  }\r\n\r\n  setDiagram() {\r\n    if (this.selectedIndex !== -1 && this.dbEntries != undefined) {\r\n      this.diagramContainer.set(deserialiseDiagram(this.dbEntries[this.selectedIndex].serialisedDiagram));\r\n    }\r\n  }\r\n\r\n  triggerDeleteModal() {\r\n    this.modalService.open(this.deleteModal);\r\n  }\r\n\r\n  delete() {\r\n    if(this.dbEntries && this.dbEntries[this.selectedIndex]) {\r\n      this.http.delete('/api/diagram/',{params: new HttpParams().set(\"id\", String(this.dbEntries[this.selectedIndex].id))}).subscribe(\r\n        (data:any) => {\r\n            this.dbEntries = data; this.selectedIndex = -1;\r\n        },error =>  {\r\n          //TODO Open error modal or something\r\n          this.handleError(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  save (){\r\n    // return axios.post('/api/diagram/',{serializedDiagram:\"diagram\"}).then(response => this.userFullName = response.data)\r\n  }\r\n  updateChanges() {\r\n    if(this.dbEntries && this.dbEntries[this.selectedIndex]){\r\n      this.http.put('/api/diagram/',this.dbEntries[this.selectedIndex]).subscribe(\r\n        (data:any) => {\r\n        },error =>  {\r\n          //TODO Open error modal or something\r\n          this.handleError(error)\r\n        })\r\n    }\r\n  }\r\n\r\n  triggerEditModal() {\r\n    this.modalService.open(this.editModal);\r\n  }\r\n\r\n  toggleVisibility() {\r\n    if (this.selectedIndex !== -1 && this.dbEntries) {\r\n      this.http.get('/api/diagram/toggle/visible',{params: new HttpParams().set(\"id\",String(this.dbEntries[this.selectedIndex].id))}).subscribe(\r\n        (data:any) => {\r\n        },error =>  {\r\n          //TODO Open error modal or something\r\n          this.handleError(error)\r\n        })\r\n    }\r\n  }\r\n\r\n  handleError(error: any) {\r\n    console.log(error)\r\n  }\r\n\r\n}\r\n\r\n// Todo: Match this up with the actual DB structure once it is known\r\nexport type DatabaseDiagramEntry = {\r\n  id: number,\r\n  title: string,\r\n  lastModified: Date,\r\n  visible: boolean,\r\n  serialisedDiagram: SerialisedDiagram\r\n}\r\n","<div class=\"modal-header text-center\">\r\n  <h4 class=\"modal-title\" id=\"modal-title\">Diagram Management</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"d-flex flex-row\">\r\n    <div class=\"flex-grow-1\">\r\n    <table class=\"table table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Last Modified</th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let dbEntry of dbEntries; index as i\"\r\n            (click)=\"selectedIndex = i\" class=\"clickable\"\r\n            [ngClass]=\"{selected: i === selectedIndex}\">\r\n          <td>{{dbEntry.title}}</td>\r\n          <td>{{dbEntry.lastModified | date:'dd/MM/yyyy'}}</td>\r\n          <td class=\"icon\">\r\n            <button class=\"btn btn-outline-secondary text-center\" style=\"width: 50px\" (click)=\"triggerEditModal()\"\r\n                    ngbTooltip=\"Edit Title\" placement=\"top\">\r\n              <fa-icon [icon]=\"['far', 'edit']\"></fa-icon>\r\n            </button>\r\n          </td>\r\n          <td class=\"icon\">\r\n            <button class=\"btn btn-outline-info text-center\"\r\n                    style=\"width: 50px\"\r\n                    (click)=\"toggleVisibility()\"\r\n                    ngbTooltip=\"Visibility\" placement=\"top\">\r\n              <fa-icon *ngIf=\"dbEntry.visible\" [icon]=\"['far', 'eye']\"></fa-icon>\r\n              <fa-icon *ngIf=\"!dbEntry.visible\" [icon]=\"['far', 'eye-slash']\"></fa-icon>\r\n            </button>\r\n          </td>\r\n          <td class=\"icon\">\r\n            <button class=\"btn btn-outline-danger text-center\" style=\"width: 50px\" (click)=\"triggerDeleteModal()\"\r\n                    ngbTooltip=\"Delete\" placement=\"top\">\r\n              <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n\r\n    <div class=\"border-left\">\r\n      <svg width=\"500\" height=\"500\">\r\n        <g *ngIf=\"selectedDiagram\" [diagram]=\"selectedDiagram!\" diagram-preview ></g>\r\n      </svg>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\"\r\n          ngbAutofocus\r\n          class=\"btn btn-outline-primary\"\r\n          (click)=\"modal.close('Ok click'); setDiagram()\">\r\n    Import Diagram\r\n  </button>\r\n</div>\r\n\r\n<ng-template #deleteModal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title text-danger\" *ngIf=\"dbEntries\">Delete {{dbEntries[selectedIndex].title}}</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div *ngIf=\"dbEntries\">Are you sure you want to delete {{dbEntries[selectedIndex].title}}?</div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.close()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"modal.close(); delete()\">Delete</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #editModal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Edit Title</h4>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <input class=\"form-control\"*ngIf=\"dbEntries\"  [(ngModel)]=\"dbEntries[selectedIndex].title\" type=\"text\">\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"modal.close(); updateChanges();\">Save</button>\r\n  </div>\r\n</ng-template>\r\n","import {RectangleNode} from \"./rectangle-node\";\r\n\r\nexport class ActorNode extends RectangleNode {\r\n  getNodeTypeName(): string {\r\n    return \"Actor\";\r\n  }\r\n\r\n  getDeepCopy(): ActorNode {\r\n    return new ActorNode(this.width, this.height, this.position.getDeepCopy());\r\n  }\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {Edge} from \"../../model/edge\";\r\nimport {DiagramContainerService} from \"./diagram-container.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadService {\r\n  public diagramEmitter: EventEmitter<Diagram> = new EventEmitter<Diagram>();\r\n  constructor(private diagramContainer: DiagramContainerService) { }\r\n\r\n  public emit(diagram: Diagram) {\r\n    this.diagramContainer.set(diagram);\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-title\">Save Diagram</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"form-group d-flex\">\r\n    <label for=\"filenameInput\">Name: </label>\r\n    <input type=\"text\" class=\"form-control flex-grow-1\" id=\"filenameInput\" [(ngModel)]=\"filename\">\r\n  </div>\r\n  <div class=\"d-flex justify-content-around\">\r\n    <button class=\"btn btn-outline-primary flex-grow-1 m-2\"\r\n            (click)=\"exportAsPNG()\"\r\n            ngbTooltip=\"Visual format which can easily be included in documents. Note you can not import a PNG in\r\nthis tool to edit it further.\"\r\n            placement=\"bottom\">\r\n      Save as PNG\r\n    </button>\r\n    <button class=\"btn btn-outline-primary flex-grow-1 m-2\"\r\n            (click)=\"exportAsJSON()\"\r\n            ngbTooltip=\"In this format you can upload this file to UTML and continue where you left off at a later time.\"\r\n            placement=\"bottom\">\r\n      Save as .UTML\r\n    </button>\r\n    <button *ngIf=\"isAuthenticated\"\r\n            class=\"btn btn-outline-primary flex-grow-1 m-2\"\r\n            (click)=\"saveToDB()\"\r\n            ngbTooltip=\"You can later resume editing this diagram and you can also make it visible to others using a\r\nunique URL.\"\r\n            placement=\"bottom\">\r\n      Save to Database\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import {Component, AfterContentInit} from '@angular/core';\r\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {ExportService} from \"../services/export.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-save-modal',\r\n  templateUrl: './save-modal.component.html',\r\n  styleUrls: ['./save-modal.component.scss']\r\n})\r\nexport class SaveModalComponent implements AfterContentInit {\r\n  filename: string = 'diagram-filename';\r\n  isAuthenticated: boolean = true;\r\n\r\n  constructor(public modal: NgbActiveModal,\r\n              private exportService: ExportService, private http: HttpClient) { }\r\n\r\n  ngAfterContentInit(): void {\r\n  }\r\n\r\n  exportAsPNG() {\r\n    this.exportService.exportAsPNG();\r\n    this.modal.close();\r\n  }\r\n\r\n  exportAsJSON() {\r\n    this.exportService.exportAsJSON()\r\n    this.modal.close();\r\n  }\r\n\r\n  saveToDB() {\r\n    this.http.post('/api/diagram/',this.exportService.getDiagramJSON(this.filename)).subscribe(\r\n        (data:any) => {\r\n          this.modal.close()\r\n        },error =>  {\r\n          //TODO Open error modal or something\r\n          this.handleError(error);\r\n    });\r\n  }\r\n  handleError(error: any) {\r\n    console.log(\"FIX ME\")\r\n    console.log(error)\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {ZoomService} from \"./zoom.service\";\r\nimport {Position} from \"../../model/position\";\r\nconst MENUBAROFFSET: number = 50;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MousePositionTransformService {\r\n\r\n  constructor(private zoomService: ZoomService) { }\r\n\r\n  public transformPosition(position: Position): Position {\r\n    position.y -= MENUBAROFFSET;\r\n\r\n    position.x *= this.zoomService.getCurrentZoomFactor();\r\n    position.y *= this.zoomService.getCurrentZoomFactor();\r\n    position.x += this.zoomService.getXY().x;\r\n    position.y += this.zoomService.getXY().y;\r\n\r\n    return position;\r\n  }\r\n\r\n  public transFormZoomAndMenubar(position: Position): Position {\r\n    position.y -= MENUBAROFFSET;\r\n    position.x *= this.zoomService.getCurrentZoomFactor();\r\n    position.y *= this.zoomService.getCurrentZoomFactor();\r\n    return position;\r\n  }\r\n\r\n  //without zoom factor\r\n  public simpleTransform(position: Position): Position {\r\n    position.y -= MENUBAROFFSET;\r\n    return position;\r\n  }\r\n\r\n}\r\n","/**\r\n * Doubly linked list designed to be used for undo/redo functionality.\r\n * The size is limited by a certain amount.\r\n * If adding another node would exceed this amount, the first node in the list is removed.\r\n */\r\nexport class SizeBoundDoublyLinkedList<T> {\r\n  public readonly MAX_SIZE;\r\n  private _size: number;\r\n\r\n  private current: Node<T>;\r\n  private first: Node<T>;\r\n  private last: Node<T>\r\n\r\n  public get size(): number {\r\n    return this._size;\r\n  }\r\n\r\n  constructor(maxSize: number, initialElement: T) {\r\n    this.MAX_SIZE = maxSize;\r\n    this._size = 1;\r\n\r\n    this.current = new Node<T>(initialElement);\r\n    this.first = this.current;\r\n    this.last = this.current;\r\n  }\r\n\r\n  /**\r\n   * Undo a certain action.\r\n   * This means to set the new current state to state before the old current state.\r\n   * If you are at the first element of the list, this is not possible and null is returned.\r\n   * @returns The value of the node before the current node at the time of calling.\r\n   *          null if at the beginning of the list.\r\n   */\r\n  public undo(): T | null {\r\n    if (this.current.prev === null) {\r\n      return null;\r\n    }\r\n\r\n    this.current = this.current.prev;\r\n    return this.current.value;\r\n  }\r\n\r\n  /**\r\n   * Redo a certain action.\r\n   * This means to set the new current state to state after the old current state.\r\n   * If you are at the last element of the list, this is not possible and null is returned.\r\n   * @returns The value of the node after the current node at the time of calling.\r\n   *          null if at the end of the list.\r\n   */\r\n  public redo(): T | null {\r\n    if (this.current.next === null) {\r\n      return null;\r\n    }\r\n\r\n    this.current = this.current.next;\r\n    return this.current.value;\r\n  }\r\n\r\n  public add(value: T) {\r\n    // Update size.\r\n    // If it exceeds the max_size the start of the tree must be pruned.\r\n    // If not at the end of the tree, the end of the tree must be pruned.\r\n    if (this.current === this.last) {\r\n      this._size++;\r\n\r\n      if (this._size > this.MAX_SIZE) {\r\n        this.first = <Node<T>> this.first.next;\r\n        this.first.prev = null;\r\n        this._size--;\r\n      }\r\n    } else {\r\n      // Start at 2 to count start and the new node yet to be added.\r\n      let newSize = 2;\r\n      let temp: Node<T> = this.first;\r\n      while (temp !== this.current) {\r\n        newSize++;\r\n        temp = <Node<T>> temp.next;\r\n      }\r\n      this._size = newSize;\r\n    }\r\n\r\n    let newNode = new Node(value, this.current);\r\n    this.current.next = newNode;\r\n    newNode.prev = this.current;\r\n    this.current = newNode;\r\n    this.last = this.current;\r\n  }\r\n\r\n  public getCurrentValue(): T {\r\n    return this.current.value;\r\n  }\r\n\r\n  // Todo: Implement an couple these to buttons\r\n  // public canUndo(): boolean {\r\n  //   return this.current.prev !== null;\r\n  // }\r\n  //\r\n  // public canRedo(): boolean {\r\n  //   return this.current.next !== null;\r\n  // }\r\n}\r\n\r\nclass Node<T> {\r\n  public value: T;\r\n  public prev: Node<T> | null = null;\r\n  public next: Node<T> | null = null;\r\n\r\n  constructor(value: T, prev: Node<T> | null = null) {\r\n    this.value = value;\r\n    this.prev = prev;\r\n  }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Node} from \"../../../model/node/node\";\r\nimport {RectangleNode} from \"../../../model/node/rectangle-node\";\r\nimport {ClassNode} from \"../../../model/node/class-node\";\r\nimport {EllipseNode} from \"../../../model/node/ellipse-node\";\r\nimport {DiamondNode} from \"../../../model/node/diamond-node\";\r\nimport {HourglassNode} from \"../../../model/node/hourglass-node\";\r\nimport {ActorNode} from \"../../../model/node/actor-node\";\r\n\r\n@Component({\r\n  selector: '[node-render-dispatch]',\r\n  templateUrl: './node-render-dispatch.component.html',\r\n  styleUrls: ['./node-render-dispatch.component.scss']\r\n})\r\nexport class NodeRenderDispatchComponent {\r\n  @Input() node!: Node\r\n\r\n  isRectangle(node: Node): boolean {\r\n    return node instanceof RectangleNode && !(node instanceof ClassNode) && !(node instanceof HourglassNode)\r\n      && !(node instanceof ActorNode);\r\n  }\r\n\r\n  castToRectangle(node: Node): RectangleNode {\r\n    return <RectangleNode>node;\r\n  }\r\n\r\n  castToEllipse(node: Node): EllipseNode {\r\n    return <EllipseNode>node;\r\n  }\r\n\r\n  isEllipse(node: Node): boolean {\r\n    return node instanceof EllipseNode;\r\n  }\r\n\r\n  castToDiamond(node: Node): DiamondNode {\r\n    return <DiamondNode>node;\r\n  }\r\n\r\n  isDiamond(node: Node): boolean {\r\n    return node instanceof DiamondNode;\r\n  }\r\n\r\n  isClass(node: Node): boolean {\r\n    return node instanceof ClassNode;\r\n  }\r\n\r\n  castToClass(node: Node): ClassNode {\r\n    return <ClassNode>node;\r\n  }\r\n\r\n  isHourglass(node: Node): boolean {\r\n    return node instanceof HourglassNode;\r\n  }\r\n\r\n  castToHourglass(node: Node): HourglassNode {\r\n    return <HourglassNode>node;\r\n  }\r\n\r\n  isActor(node: Node): boolean {\r\n    return node instanceof ActorNode;\r\n  }\r\n\r\n  castToActor(node: Node): ActorNode {\r\n    return <ActorNode>node;\r\n  }\r\n}\r\n","<svg:g *ngIf=\"isRectangle(node)\" rectangle-node-render  [node]=\"castToRectangle(node)\"></svg:g>\r\n<svg:g *ngIf=\"isEllipse(node)\" ellipse-node-render  [node]=\"castToEllipse(node)\"></svg:g>\r\n<svg:g *ngIf=\"isDiamond(node)\" diamond-node-render  [node]=\"castToDiamond(node)\"></svg:g>\r\n<svg:g *ngIf=\"isClass(node)\" class-node-render  [node]=\"castToClass(node)\"></svg:g>\r\n<svg:g *ngIf=\"isHourglass(node)\" hourglass-node-render  [node]=\"castToHourglass(node)\"></svg:g>\r\n<svg:g *ngIf=\"isActor(node)\" actor-node-render  [node]=\"castToActor(node)\"></svg:g>\r\n\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {SelectionService} from \"./selection.service\";\r\nimport {Edge} from \"../../model/edge\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {KnownDeclaration} from \"@angular/compiler-cli/src/ngtsc/reflection\";\r\nimport {Position} from \"../../model/position\";\r\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\r\nimport {Label} from \"../../model/label\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CopyPasteService {\r\n  private clipboard: Array<Node | Edge> = [];\r\n  private selected: Array<Node | Edge> = [];\r\n  public readonly pasteEmitter: EventEmitter<Node | Edge> = new EventEmitter<Node|Edge>();\r\n\r\n  constructor(selectionService: SelectionService, keyboardEventCaller: KeyboardEventCallerService) {\r\n    selectionService.selectedObservable.subscribe(selected => {\r\n      let edges = selected.filter(e => e instanceof Edge).map(e => <Edge> e);\r\n      let nodes = selected.filter(e => e instanceof Node).map(e => <Node> e);\r\n      this.selected = [];\r\n      this.selected.push(...edges);\r\n      this.selected.push(...nodes);\r\n\r\n    });\r\n\r\n    keyboardEventCaller.addCallback(['c', 'keydown', 'ctrl'], (ignored: KeyboardEvent) => {\r\n      if (this.copyIsAvailable()) {\r\n        this.doCopy();\r\n      }\r\n    });\r\n\r\n    keyboardEventCaller.addCallback(['v', 'keydown', 'ctrl'], (ignored: KeyboardEvent) => {\r\n      if (this.pasteIsAvailable()) {\r\n        this.doPaste();\r\n      }\r\n    });\r\n  }\r\n\r\n  public doCopy(): void {\r\n    if (!this.copyIsAvailable()) {\r\n      throw new Error('Trying to copy whilst copy is not available.');\r\n    }\r\n\r\n    this.clipboard = this.selected;\r\n  }\r\n\r\n  public copyIsAvailable(): boolean {\r\n    return this.selected.length > 0;\r\n  }\r\n\r\n  public doPaste(): void {\r\n    const OFFSET = 25;\r\n    if (!this.pasteIsAvailable()) {\r\n      throw new Error('Trying to paste whilst copy is not available.');\r\n    }\r\n\r\n    this.clipboard.forEach(clipboardElem => {\r\n      if (clipboardElem instanceof Node) {\r\n        let copy = (<Node> clipboardElem).getDeepCopy();\r\n        copy.position.x += OFFSET;\r\n        copy.position.y += OFFSET;\r\n        this.pasteEmitter.emit(copy);\r\n      } else {\r\n        let copy = (<Edge> clipboardElem).getDeepCopy();\r\n        let startPos = copy.getStartPosition();\r\n        let endPos = copy.getEndPosition();\r\n        copy.startNode = undefined;\r\n        copy.endNode = undefined;\r\n        copy.startPosition = Position.add(new Position(OFFSET, OFFSET), startPos);\r\n        copy.endPosition = Position.add(new Position(OFFSET, OFFSET), endPos);\r\n        copy.middlePositions = copy.middlePositions.map(pos => Position.add(new Position(OFFSET, OFFSET), pos));\r\n        this.pasteEmitter.emit(copy);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public pasteIsAvailable(): boolean {\r\n    return this.clipboard.length > 0;\r\n  }\r\n}\r\n","<svg:rect [attr.x]=\"node.position.x\"\r\n          [attr.y]=\"node.position.y\"\r\n          [attr.width]=\"node.width\"\r\n          [attr.height]=\"node.height\"\r\n          [ngStyle]=\"node.styleObject\"\r\n>\r\n</svg:rect>\r\n\r\n<!-- Double border rendering if applicable. -->\r\n<svg:rect *ngIf=\"node.hasDoubleBorder\"\r\n          [attr.x]=\"node.position.x + 3\"\r\n          [attr.y]=\"node.position.y + 3\"\r\n          [attr.width]=\"node.width - 6\"\r\n          [attr.height]=\"node.height - 6\"\r\n          style=\"fill: none; fill-opacity: 0; stroke: black; stroke-opacity: 1\"\r\n>\r\n</svg:rect>\r\n\r\n<svg:g basic-node-text [node]=\"node\"></svg:g>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {RectangleNode} from \"../../../model/node/rectangle-node\";\r\n\r\n@Component({\r\n  selector: '[rectangle-node-render]',\r\n  templateUrl: './rectangle-node-render.component.html',\r\n  styleUrls: ['./rectangle-node-render.component.scss']\r\n})\r\nexport class RectangleNodeRenderComponent {\r\n  @Input() node!: RectangleNode;\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {Label} from \"../../model/label\";\r\nimport {Position} from \"../../model/position\";\r\nimport {RepositionService} from \"../services/reposition.service\";\r\nimport {ModeService} from \"../services/mode.service\";\r\nimport {ModeAwareComponent} from \"../mode-aware-component\";\r\nimport {SelectionService} from \"../services/selection.service\";\r\nimport {LabelRepositionService} from \"../services/label-reposition.service\";\r\nimport {MousePositionTransformService} from \"../services/mouse-position-transform.service\";\r\n\r\n@Component({\r\n  selector: '[label-component]',\r\n  templateUrl: './label.component.html',\r\n  styleUrls: ['./label.component.scss']\r\n})\r\nexport class LabelComponent {\r\n  @Input() label!: Label;\r\n  isSelected: boolean = false;\r\n\r\n  constructor(private labelRepositionService: LabelRepositionService,\r\n              private selectionService: SelectionService,\r\n              private mousePositionTransformService: MousePositionTransformService) {\r\n    selectionService.selectedObservable.subscribe(selectedList => {\r\n      this.isSelected = selectedList.includes(this.label);\r\n      console.log(this.isSelected)\r\n    });\r\n  }\r\n\r\n  handleDoubleClick(ignored: MouseEvent): void {\r\n    this.label.value = window.prompt(\"New label?\") || this.label.value;\r\n  }\r\n\r\n  lineBreakLabel() : string[]{\r\n    return this.label.value.split(\"\\\\n\");\r\n  }\r\n\r\n  public handleMouseDown(event: MouseEvent): void {\r\n    if (!this.isSelected) {\r\n      console.log('selecting')\r\n      this.selectionService.setLabel(this.label);\r\n    } else {\r\n      console.log('starting repositioning')\r\n      this.labelRepositionService.activate(this.mousePositionTransformService.transformPosition(\r\n        new Position(event.x, event.y)), this.label);\r\n    }\r\n  }\r\n}\r\n","<svg:text *ngIf=\"label\"\r\n          [attr.x]=\"label.position.x\"\r\n          [attr.y]=\"label.position.y\"\r\n          (mousedown)=\"handleMouseDown($event)\"\r\n          (dblclick)=\"handleDoubleClick($event)\"\r\n          [ngStyle]=\"{'fill': isSelected ? 'red' : 'black', 'cursor': isSelected ? 'move' : 'pointer'}\"\r\n          dominant-baseline=\"middle\"\r\n          text-anchor=\"middle\"\r\n          font-family=\"Comic Sans MS, Helvetica, sans-serif\">\r\n      <svg:tspan *ngFor=\"let labelLine of lineBreakLabel()\" [attr.x]=\"label.position.x\" dy=\"1.2em\">\r\n        {{labelLine}}\r\n      </svg:tspan>\r\n</svg:text>\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {Position} from \"../../model/position\";\r\nimport { EndStyle, LineType} from \"../../model/edge\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {DiamondNode} from \"../../model/node/diamond-node\";\r\nimport {EllipseNode} from \"../../model/node/ellipse-node\";\r\nimport {RectangleNode} from \"../../model/node/rectangle-node\";\r\nimport {ForkRejoinNode} from \"../../model/node/fork-rejoin-node\";\r\nimport {ClassNode} from \"../../model/node/class-node\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreationTypeSelectionService {\r\n  private readonly nodeTypes: Node[];\r\n  private currentNodeIndex: number;\r\n\r\n  private readonly edgeFormatterProperties: Object[];\r\n  private currentEdgeFormatterIndex: number;\r\n\r\n  constructor() {\r\n    this.nodeTypes = [\r\n      new RectangleNode(100, 100, new Position(0, 0)),\r\n      new EllipseNode(100, 100, new Position(0, 0)),\r\n      new DiamondNode(100, 100, new Position(0, 0)),\r\n      new ForkRejoinNode(20, 300, new Position(0, 0)),\r\n      new ClassNode(250, 100, new Position(0, 0))\r\n    ];\r\n    this.currentNodeIndex = 0;\r\n\r\n    this.edgeFormatterProperties = [\r\n      {},\r\n      {\"endStyle\": EndStyle.SmallFilledArrow},\r\n      {\"lineType\": LineType.Arc}\r\n    ];\r\n    this.currentEdgeFormatterIndex = 1;\r\n  }\r\n\r\n  public getAllEdgeFormatterProperties(): Object[] {\r\n    return this.edgeFormatterProperties;\r\n  }\r\n\r\n  public getCurrentEdgeIndex(): number {\r\n    return this.currentEdgeFormatterIndex;\r\n  }\r\n\r\n  public getSelectedProperty(): Object {\r\n    return this.edgeFormatterProperties[this.currentEdgeFormatterIndex];\r\n  }\r\n\r\n  public setEdgeFormatterProperty(index: number): void {\r\n    if (index < 0 || index >= this.edgeFormatterProperties.length) {\r\n      throw new Error(\"The provided index is not validf\");\r\n    }\r\n\r\n    this.currentEdgeFormatterIndex = index;\r\n  }\r\n\r\n  public getAllNodeTypes(): Node[] {\r\n    return this.nodeTypes;\r\n  }\r\n\r\n  public getSelectedNodeType(): Node {\r\n    return this.nodeTypes[this.currentNodeIndex].getDeepCopy();\r\n  }\r\n\r\n  public getCurrentNodeIndex(): number {\r\n    return this.currentNodeIndex;\r\n  }\r\n\r\n  public setNodeType(index: number): void {\r\n    if (index < 0 || index >= this.nodeTypes.length) {\r\n      throw new Error(\"The provided index is not validf\");\r\n    }\r\n    this.currentNodeIndex = index;\r\n  }\r\n\r\n  getNodeTypeName(index: number) {\r\n    return this.nodeTypes[index].getNodeTypeName();\r\n  }\r\n}\r\n","import {Edge} from \"../../../model/edge\";\r\nimport {Node} from \"../../../model/node/node\";\r\nimport {Position} from \"../../../model/position\";\r\n\r\n/**\r\n * Class responsible for repositioning the start and end points of an edge.\r\n * This class is meant to be used as a singleton, only a single instance should ever be created.\r\n * It is also responsible for updating the startNode and endNode properties of the edge if applicable.\r\n * Lastly it also snaps to attachmentPoints of nodes during updates if their distance is wihtin the SNAP_DISTANCE\r\n */\r\nexport class StartEndRepositioner {\r\n  private nodes?: Node[];\r\n  private readonly SNAP_DISTANCE: number;\r\n  private edge?: Edge;\r\n  private isStart?: boolean;\r\n\r\n  /**\r\n   * Constructor for StartEndRepositioner\r\n   * @param nodes A list of all nodes in the diagram drawer. Used to snapIfApplicable to attachment points.\r\n   * @param snap_distance The distance within which a start/end position should snapIfApplicable to an attachment point.\r\n   */\r\n  constructor(snap_distance: number) {\r\n    this.SNAP_DISTANCE = snap_distance;\r\n  }\r\n\r\n  /**\r\n   * Returns whether the StartEndRepositioner is currently active.\r\n   * @returns true if active, false otherwise.\r\n   */\r\n  public isActive(): boolean {\r\n    // return this.edge !== undefined && this.isStart !== undefined;\r\n    return this.edge !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Activate the repositioner.\r\n   * @param edge The edge of which the start or end will be repositioned.\r\n   * @param isStart Set to true if you want to move the start, set to false if you want to move the end.\r\n   */\r\n  public activate(edge: Edge, isStart: boolean): void {\r\n    if (this.nodes === undefined) {\r\n      throw new Error('Nodes must be defined!');\r\n    }\r\n\r\n    this.edge = edge;\r\n    this.isStart = isStart;\r\n  }\r\n\r\n  /**\r\n   * Update the start/end position to the provided position. Snaps to attachment point if within SNAP_DISTANCE.\r\n   * @param position\r\n   */\r\n  public update(position: Position): void {\r\n    if (this.nodes === undefined) {\r\n      throw new Error('Nodes must be defined!');\r\n    }\r\n\r\n    let foundNode: undefined | Node = undefined;\r\n    let foundAttachment: undefined | number = undefined;\r\n\r\n    for (let node of this.nodes) {\r\n      let attachmentPoint = StartEndRepositioner.getAttachmentPoint(node, position, this.SNAP_DISTANCE);\r\n      if (attachmentPoint !== -1) {\r\n        foundNode = node;\r\n        foundAttachment = attachmentPoint;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (foundNode !== undefined && foundAttachment !== undefined) {\r\n      this.set(foundAttachment, foundNode);\r\n    } else {\r\n      this.set(position, undefined);\r\n    }\r\n  }\r\n\r\n  private set(position: Position | number, node: Node | undefined) {\r\n    if (this.isStart) {\r\n      this.edge!.startPosition = position;\r\n      this.edge!.startNode = node;\r\n    } else {\r\n      this.edge!.endPosition = position;\r\n      this.edge!.endNode = node;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the repositioner.\r\n   */\r\n  public deactivate(): void {\r\n    this.edge = undefined;\r\n    this.isStart = undefined;\r\n  }\r\n\r\n  /**\r\n   * Determine for a certain node on which attachmentPosition a given position lies.\r\n   * It can allow a certain error, as we can not expect users to be perfectly accurate.\r\n   * If no attachment point lies within the error, -1 is returned.\r\n   * @param node The node of which the attachmentPoints will be checked\r\n   * @param position The position which may lie on an attachment point.\r\n   * @param allowed_error The index of the attachment on which the given position approximately lies\r\n   *                      or -1 if it the position does not lie on any attachment points.\r\n   */\r\n  public static getAttachmentPoint(node: Node, position: Position, allowed_error: number): number {\r\n    let attachmentPoints = node.getAllAttachmentPoints();\r\n    for (let i = 0; i < attachmentPoints.length; i++) {\r\n      let attachmentPoint = attachmentPoints[i];\r\n      if (Position.getDistance(attachmentPoint, position) <= allowed_error) {\r\n        return i;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  public setNodes(nodes: Node[]): void {\r\n    this.nodes = nodes;\r\n  }\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {Deactivatable} from \"./deactivatable\";\r\nimport {AttachmentDirection, Node} from \"../../model/node/node\";\r\nimport {Position} from \"../../model/position\";\r\nimport {Edge, LineType} from \"../../model/edge\";\r\nimport {CreationTypeSelectionService} from \"./creation-type-selection.service\";\r\nimport {KeyboardEventCallerService} from \"./keyboard-event-caller.service\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Service for creating edges between nodes.\r\n * The start node of the edge is specified in activate and the end node is specified by setEnd.\r\n * The service also provides a start and end preview that can be used to provide a preview.\r\n * Lastly the newEdgeEmitter emits the newly created Edge upon its creation.\r\n */\r\nexport class EdgeCreationService implements Deactivatable {\r\n  private startNode?: Node;\r\n  private startAttachment?: AttachmentDirection;\r\n\r\n  public endPreview?: Position;\r\n  public startPreview?: Position;\r\n  public newEdgeEmitter: EventEmitter<Edge> = new EventEmitter<Edge>();\r\n\r\n  constructor(private creationFormatterSelectionService: CreationTypeSelectionService,\r\n              keyboardEventCallerService: KeyboardEventCallerService) {\r\n    keyboardEventCallerService.addCallback(['Escape', 'keydown', 'any'], (ignored) => this.deactivate())\r\n  }\r\n\r\n  public setStart(node: Node, attachment: number) {\r\n    this.startNode = node;\r\n    this.startAttachment = attachment;\r\n    this.endPreview = node.getPositionOfAttachment(attachment);\r\n    this.startPreview = node.getPositionOfAttachment(attachment);\r\n  }\r\n\r\n  public isActive() {\r\n    return this.startNode !== undefined && this.startAttachment !== undefined && this.endPreview !== undefined;\r\n  }\r\n\r\n  public setEnd(endNode: Node, endAttachment: AttachmentDirection) {\r\n    if (endNode === this.startNode && endAttachment === this.startAttachment) {\r\n      return this.deactivate();\r\n    }\r\n\r\n    if (!this.isActive()) {\r\n      throw new Error(\"Trying to set end whilst it is inactive!\");\r\n    }\r\n\r\n    let edge = new Edge(this.startAttachment!, endAttachment, this.startNode, endNode);\r\n\r\n    for (let [key, value] of Object.entries(this.creationFormatterSelectionService.getSelectedProperty())) {\r\n      // @ts-ignore\r\n      edge[key] = value;\r\n    }\r\n\r\n    // Arcs must have 1 middle point, so we add it if needed.\r\n    if (edge.lineType === LineType.Arc) {\r\n      edge.setDefaultMiddlePointOnArc();\r\n    }\r\n\r\n    this.newEdgeEmitter.emit(edge);\r\n\r\n    this.deactivate();\r\n  }\r\n\r\n  public deactivate(): void {\r\n    this.startNode = undefined;\r\n    this.startAttachment = undefined;\r\n    this.endPreview = undefined;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Position} from \"../../model/position\";\r\nimport {Deactivatable} from \"./deactivatable\";\r\nimport {CachingService} from \"./caching/caching.service\";\r\nimport {SnapService} from \"./snap.service\";\r\nimport {SelectionService} from \"./selection.service\";\r\nimport {Node} from \"../../model/node/node\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RepositionService implements Deactivatable {\r\n  private startMousePosition?: Position;\r\n  private selectedNodes: Array<Node> = [];\r\n  private startPositions: Array<Position> = [];\r\n\r\n  constructor(private snapService: SnapService,\r\n              private cachingService: CachingService,\r\n              selectionService: SelectionService) {\r\n    selectionService.selectedObservable.subscribe(selectedList => {\r\n      this.selectedNodes = selectedList.filter(n => n instanceof Node).map(n => <Node> n);\r\n    });\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.startMousePosition !== undefined;\r\n  }\r\n\r\n  public activate(startPosition: Position): void {\r\n    if (this.selectedNodes.length > 0) {\r\n      this.startPositions = this.selectedNodes.map(node => node.position);\r\n      this.startMousePosition = startPosition;\r\n    }\r\n  }\r\n\r\n  public update(mousePosition: Position): void {\r\n    let difference = Position.subtract(mousePosition, this.startMousePosition!);\r\n    this.selectedNodes.forEach((node, index) => {\r\n      node.position = this.snapService.snapIfApplicable(Position.add(this.startPositions[index], difference));\r\n    });\r\n  }\r\n\r\n  public deactivate(): void {\r\n    if (this.isActive()) {\r\n      this.cachingService.save();\r\n    }\r\n    this.startMousePosition = undefined;\r\n  }\r\n}\r\n\r\nexport interface Positionable {\r\n  position: Position;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Position} from \"../../model/position\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnapService {\r\n  private snapIsActive: boolean = true;\r\n\r\n  public isActive(): boolean {\r\n     return this.snapIsActive;\r\n  }\r\n\r\n  public setSnapState(snapIsActive: boolean): void {\r\n    this.snapIsActive = snapIsActive;\r\n  }\r\n\r\n  public snapIfApplicable(position: Position, accuracy: number = 10): Position {\r\n    if (this.snapIsActive) {\r\n      let corners: Position[] = [\r\n        new Position(Math.floor(position.x/accuracy)*accuracy, Math.floor(position.y/accuracy)*accuracy),\r\n        new Position(Math.ceil(position.x/accuracy)*accuracy, Math.floor(position.y/accuracy)*accuracy),\r\n        new Position(Math.ceil(position.x/accuracy)*accuracy, Math.ceil(position.y/accuracy)*accuracy),\r\n        new Position(Math.floor(position.x/accuracy)*accuracy, Math.ceil(position.y/accuracy)*accuracy)\r\n      ];\r\n      let arr: number[] = new Array(corners.length);\r\n      for (let i = 0; i < corners.length; i++){\r\n        arr[i] = Position.getDistance(position, corners[i]);\r\n      }\r\n      let min: number = Math.min(...arr);\r\n      let index: number = arr.indexOf(min);\r\n      return corners[index]\r\n    } else {\r\n      return position\r\n    }\r\n  }\r\n}\r\n","import {Node} from './node'\r\nimport {Position} from \"../position\";\r\n\r\nexport class RectangleNode extends Node {\r\n  public constructor(width: number, height: number, position: Position) {\r\n    super(width, height, position);\r\n  }\r\n\r\n  protected getAllOffsets(): Position[] {\r\n    return [\r\n      new Position(this.width / 2, 0),\r\n      new Position(this.width, 0),\r\n      new Position(this.width, this.height / 2),\r\n      new Position(this.width, this.height),\r\n      new Position(this.width / 2, this.height),\r\n      new Position(0, this.height),\r\n      new Position(0, this.height / 2),\r\n      new Position(0, 0),\r\n    ];\r\n  }\r\n\r\n  getDeepCopy(): Node {\r\n    let result =  new RectangleNode(this.width, this.height, this.position.getDeepCopy());\r\n    result.text = this.text;\r\n    result.hasDoubleBorder = this.hasDoubleBorder;\r\n    return result;\r\n  }\r\n\r\n  public getNodeTypeName(): string {\r\n    return \"Rectangle\";\r\n  }\r\n\r\n  public preview: string = `<rect x=\"5\" y=\"5\" width=\"${Node.PREVIEW_WIDTH - 10}\" height=\"${Node.DEFAULT_PREVIEW_HEIGHT - 10}\"\r\nstyle=\"fill: none; stroke-width: 1; stroke: black\">\r\n</rect>`;\r\n}\r\n","import {SerialisedPosition} from \"../serialised-data-structures/serialised-position\";\r\nimport {Position} from \"../../model/position\";\r\n\r\nexport function deserialisePosition(serialisedPosition: SerialisedPosition): Position {\r\n  return new Position(serialisedPosition.x, serialisedPosition.y);\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {SelectionService} from \"../services/selection.service\";\r\nimport {Edge} from \"../../model/edge\";\r\nimport {DeletionService} from \"../services/deletion.service\";\r\nimport {CachingService} from \"../services/caching/caching.service\";\r\n\r\n@Component({\r\n  selector: 'app-edge-formatting-modal',\r\n  templateUrl: './edge-formatting-modal.component.html',\r\n  styleUrls: ['./edge-formatting-modal.component.scss']\r\n})\r\nexport class EdgeFormattingModalComponent {\r\n  public edge?: Edge;\r\n  selectedLabel: 'start' | 'middle' | 'end' = 'start';\r\n\r\n  constructor(public modal: NgbActiveModal,\r\n              selectionService: SelectionService,\r\n              private deletionService: DeletionService,\r\n              private cachingService: CachingService) {\r\n    selectionService.selectedObservable.subscribe(selectedList => {\r\n      if (selectedList.length === 1 && selectedList[0] instanceof Edge) {\r\n        this.edge = <Edge> selectedList[0];\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(): void {\r\n    if (this.edge) {\r\n      this.deletionService.deleteEdge(this.edge);\r\n      this.edge = undefined;\r\n    } else {\r\n      throw new Error(\"Trying to delete an edge from the edge edit menu whilst no edge is selected.\");\r\n    }\r\n  }\r\n\r\n  cache() {\r\n    this.cachingService.save();\r\n  }\r\n\r\n  removeLabel(middle: 'start' | 'middle' | 'end'): void {\r\n    if (!this.edge) { return; }\r\n    switch (middle) {\r\n      case \"start\":\r\n        this.edge.startLabel = undefined;\r\n        break;\r\n      case \"middle\":\r\n        this.edge.middleLabel = undefined;\r\n        break;\r\n      case \"end\":\r\n        this.edge.endLabel = undefined;\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleClickedChar(char: string) {\r\n    switch (this.selectedLabel) {\r\n      case \"start\":\r\n        if (this.edge?.startLabel) {\r\n          this.edge.startLabel.value += char;\r\n        } else {\r\n          this.edge?.addStartLabel(char);\r\n        }\r\n        break;\r\n      case \"middle\":\r\n        if (this.edge?.middleLabel) {\r\n          this.edge.middleLabel.value += char;\r\n        } else {\r\n          this.edge?.addMiddleLabel(char);\r\n        }\r\n        break;\r\n      case \"end\":\r\n        if (this.edge?.endLabel) {\r\n          this.edge.endLabel.value += char;\r\n        } else {\r\n          this.edge?.addEndLabel(char);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"modal-title\">Advanced node formatting</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n\r\n  <div class=\"w-100\" *ngIf=\"edge\">\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\">Start Label</label>\r\n      <div class=\"w-75 d-flex\" *ngIf=\"edge.startLabel\">\r\n        <input class=\"flex-grow-1 form-control form-text\" type=\"text\" [(ngModel)]=\"edge.startLabel.value\">\r\n        <button class=\"btn btn-outline-danger icon-50 ml-2\"\r\n                style=\"height: 38px; margin-top: 4px;\"\r\n                type=\"text\"\r\n                (click)=\"removeLabel('start');\">\r\n          <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\r\n        </button>\r\n      </div>\r\n      <button class=\"w-75 btn btn-primary\" *ngIf=\"!edge.startLabel\" (click)=\"edge.addStartLabel()\">\r\n      Add start label\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\">Middle Label</label>\r\n      <div class=\"w-75 d-flex\" *ngIf=\"edge.middleLabel\">\r\n        <input class=\"flex-grow-1 form-control form-text\" type=\"text\" [(ngModel)]=\"edge.middleLabel.value\">\r\n        <button class=\"btn btn-outline-danger icon-50 ml-2\"\r\n                style=\"height: 38px; margin-top: 4px;\"\r\n                type=\"text\"\r\n                (click)=\"removeLabel('middle');\">\r\n          <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\r\n        </button>\r\n      </div>\r\n      <button class=\"w-75 btn btn-primary\" *ngIf=\"!edge.middleLabel\" (click)=\"edge.addMiddleLabel()\">\r\n        Add middle label\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\">End Label</label>\r\n      <div class=\"w-75 d-flex\" *ngIf=\"edge.endLabel\">\r\n        <input class=\"flex-grow-1 form-control form-text\" type=\"text\" [(ngModel)]=\"edge.endLabel.value\">\r\n        <button class=\"btn btn-outline-danger icon-50 ml-2\"\r\n                style=\"height: 38px; margin-top: 4px;\"\r\n                type=\"text\"\r\n                (click)=\"removeLabel('end');\">\r\n          <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\r\n        </button>\r\n      </div>\r\n      <button class=\"w-75 btn btn-primary\" *ngIf=\"!edge.endLabel\" (click)=\"edge.addEndLabel()\">\r\n        Add end label\r\n      </button>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <div class=\"w-100 d-flex flex-row m-2\">\r\n      <div class=\"flex-grow-0 mr-2\" style=\"line-height: 40px\">Select Label: </div>\r\n      <div class=\"btn-group btn-group-toggle flex-grow-1\" style=\"height: 40px;\" ngbRadioGroup name=\"radioBasic\" [(ngModel)]=\"selectedLabel\">\r\n        <label ngbButtonLabel class=\"btn-outline-secondary flex-grow-1\">\r\n          <input ngbButton type=\"radio\" value=\"start\"> Start\r\n        </label>\r\n        <label ngbButtonLabel class=\"btn-outline-secondary flex-grow-1\">\r\n          <input ngbButton type=\"radio\" value=\"middle\"> Middle\r\n        </label>\r\n        <label ngbButtonLabel class=\"btn-outline-secondary flex-grow-1\">\r\n          <input ngbButton type=\"radio\" value=\"end\"> End\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <app-special-character-selector (clickChar)=\"handleClickedChar($event)\"></app-special-character-selector>\r\n\r\n    <hr>\r\n\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\">Line Style</label>\r\n      <div class=\"w-75\">\r\n        <select class=\"custom-select\" [(ngModel)]=\"edge!.lineStyle\" (ngModelChange)=\"cache()\">\r\n          <option [ngValue]=\"0\">Filled</option>\r\n          <option [ngValue]=\"1\">Dotted</option>\r\n          <option [ngValue]=\"2\">Dashed</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\">Start Style</label>\r\n      <div class=\"w-75\">\r\n        <select class=\"custom-select\" [(ngModel)]=\"edge!.startStyle\" (ngModelChange)=\"cache()\">\r\n          <option [ngValue]=\"0\">None</option>\r\n          <option [ngValue]=\"1\">Big Unfilled Arrow</option>\r\n          <option [ngValue]=\"2\">Filled Diamond</option>\r\n          <option [ngValue]=\"3\">Unfilled Diamond</option>\r\n          <option [ngValue]=\"4\">Small Filled Arrow</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row px-3\">\r\n      <label class=\"w-25 col-form-label\">End Style</label>\r\n      <div class=\"w-75\">\r\n        <select class=\"custom-select\" [(ngModel)]=\"edge!.endStyle\" (ngModelChange)=\"cache()\">\r\n          <option [ngValue]=\"0\">None</option>\r\n          <option [ngValue]=\"1\">Small Filled Arrow</option>\r\n          <option [ngValue]=\"2\">Filled Diamond</option>\r\n          <option [ngValue]=\"3\">Unfilled Diamond</option>\r\n          <option [ngValue]=\"4\">Big Unfilled Arrow</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <div (click)=\"modal.close('Ok click')\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\">\r\n      Delete <fa-icon [icon]=\"['far', 'trash-alt']\"></fa-icon>\r\n    </button>\r\n  </div>\r\n  <button type=\"button\" ngbAutofocus class=\"btn btn-success\" (click)=\"modal.close('Ok click')\">\r\n    Save <fa-icon [icon]=\"['fas', 'save']\"></fa-icon>\r\n  </button>\r\n</div>\r\n\r\n","import {SerialisedDiagram} from \"../serialised-data-structures/serialised-diagram\";\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {Node} from \"../../model/node/node\";\r\nimport {deserialiseNode} from \"./deserialise-node\";\r\nimport {deserialiseEdge} from \"./deserialise-edge\";\r\n\r\nexport function deserialiseDiagram(serialisedDiagram: SerialisedDiagram): Diagram {\r\n\r\n  // @ts-ignore\r\n  let nodes = (JSON.parse(serialisedDiagram) && JSON.parse(serialisedDiagram).nodes)? JSON.parse(serialisedDiagram).nodes.map(n => deserialiseNode(n)) : [] ;\r\n  // @ts-ignore\r\n  let edges = (JSON.parse(serialisedDiagram) && JSON.parse(serialisedDiagram).edges)? JSON.parse(serialisedDiagram).edges.map(e => deserialiseEdge(e)) : [];\r\n\r\n  for (let i = 0; i < edges.length; i++) {\r\n    // @ts-ignore\r\n    if (JSON.parse(serialisedDiagram).edges[i].startNodeId !== undefined) {\r\n      // @ts-ignore\r\n\r\n      edges[i].startNode = nodes[JSON.parse(serialisedDiagram).edges[i].startNodeId as number];\r\n   }\r\n    // @ts-ignore\r\n\r\n    if (JSON.parse(serialisedDiagram).edges[i].endNodeId !== undefined) {\r\n      // @ts-ignore\r\n\r\n      edges[i].endNode = nodes[JSON.parse(serialisedDiagram).edges[i].endNodeId as number];\r\n    }\r\n  }\r\n\r\n  return new Diagram(nodes, edges);\r\n}\r\n","import {Position} from \"./position\";\r\nimport {SerialisedLabel} from \"../serialisation/serialised-data-structures/serialised-label\";\r\nimport {deserialiseLabel} from \"../serialisation/deserialise/deserialise-label\";\r\nimport {Edge} from \"./edge\";\r\n\r\nexport class Label {\r\n  constructor(public value: string,\r\n              public readonly edgeLocation: EdgeLocation,\r\n              public offset: Position = Position.zero(),\r\n              public anchors: Array<PositionCallback> = []) {\r\n  }\r\n\r\n  private get anchor() {\r\n    return this.anchors[this.edgeLocation as number]();\r\n  }\r\n\r\n  public get position() {\r\n    if (this.anchors.length !== 3) {\r\n      throw new Error('There should be exactly 3 acnhors.')\r\n    }\r\n\r\n    return Position.add(this.anchor, this.offset);\r\n  }\r\n\r\n  public set position(position: Position) {\r\n    this.offset = Position.subtract(position, this.anchor);\r\n  }\r\n\r\n  public serialise(): SerialisedLabel {\r\n    return {\r\n      offset: this.offset.serialise(),\r\n      edgeLocation: this.edgeLocation,\r\n      value: this.value\r\n    };\r\n  }\r\n\r\n  public getDeepCopy(): Label {\r\n    let result =  deserialiseLabel(this.serialise());\r\n    result.anchors = this.anchors;\r\n    return result;\r\n  }\r\n}\r\n\r\nexport type PositionCallback = () => Position;\r\n\r\nexport enum EdgeLocation {\r\n  START = 0,\r\n  MIDDLE = 1,\r\n  END = 2\r\n}\r\n","import {Edge, LineType} from \"../../../model/edge\";\r\nimport {Position} from \"../../../model/position\";\r\n\r\nexport class ArcMiddleRepositioner {\r\n  private edge?: Edge;\r\n\r\n  public activate(edge: Edge): void {\r\n    if (edge.lineType !== LineType.Arc) {\r\n      throw new Error('Any edges passed to the ArcMiddleRepositioner should be of LineType Arc.');\r\n    }\r\n\r\n    if (edge.middlePositions.length !== 1) {\r\n      throw new Error('The edge should have exactly 1 middle point.');\r\n    }\r\n\r\n    this.edge = edge;\r\n  }\r\n\r\n  public update(position: Position) {\r\n    if (!this.isActive()) {\r\n      throw new Error('Updating an inactive repositioner.');\r\n    }\r\n\r\n    this.edge!.middlePositions[0] = position;\r\n  }\r\n\r\n  public deactivate() {\r\n    if (!this.isActive()) {\r\n      throw new Error('Deactivating an inactive repositioner.');\r\n    }\r\n\r\n    this.edge = undefined;\r\n  }\r\n\r\n\r\n  public isActive(): boolean {\r\n    return this.edge !== undefined;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\r\nimport {DiagramContainerService} from \"./diagram-container.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExportService {\r\n  private diagram: Diagram;\r\n  private downloadJsonHref?: SafeUrl;\r\n\r\n  public filename: string = 'yourDiagram';\r\n\r\n  constructor(diagramContainer: DiagramContainerService) {\r\n    this.diagram = diagramContainer.get();\r\n    diagramContainer.diagramObservable.subscribe(diagram => this.diagram = diagram);\r\n  }\r\n\r\n  public exportAsPNG(): void {\r\n    let svg :HTMLElement | null = document.getElementById('diagram');\r\n    let canvas = document.querySelector('canvas');\r\n\r\n    if(canvas != null && svg != null){\r\n      let ctx = canvas.getContext('2d');\r\n      let data = (new XMLSerializer()).serializeToString(svg);\r\n      let DOMURL = window.URL || window.webkitURL || window;\r\n      let img = new Image();\r\n      img.width = 1200 * 2;\r\n      img.height = 800 * 2;\r\n      // @ts-ignore\r\n      let svgSize = svg.viewBox.baseVal;\r\n      canvas.width = svgSize.width * 2;\r\n      canvas.height = svgSize.height * 2;\r\n      let svgBlob = new Blob([data], {type: 'image/svg+xml;charset=utf-8'});\r\n      let url = DOMURL.createObjectURL(svgBlob);\r\n      img.onload = () => {\r\n        if(ctx != null) {\r\n          ctx.drawImage(img, 0, 0);\r\n          DOMURL.revokeObjectURL(url);\r\n          // @ts-ignore\r\n          let imgURI = canvas\r\n            .toDataURL('image/png')\r\n            .replace('image/png', 'image/octet-stream');\r\n\r\n          this.triggerDownload(this.filename, imgURI, \"png\");\r\n          document!.querySelector('canvas')!.remove();\r\n        } else{\r\n          new Error(\"The diagram has disappeared\");\r\n        }\r\n      };\r\n      img.src = url;\r\n    } else{new Error(\"The diagram has disappeared\") }\r\n  }\r\n\r\n  public exportAsJSON() {\r\n    let theJSON = JSON.stringify(this.diagram?.serialise());\r\n    let uri: string = \"data:text/json;charset=UTF-8,\" + encodeURIComponent(theJSON)\r\n    this.triggerDownload(this.filename, uri, \"utml\")\r\n  }\r\n\r\n  public getDiagramJSON(fileName: String){\r\n    return {serialisedDiagram: JSON.stringify(this.diagram?.serialise()), title: fileName};\r\n  }\r\n\r\n  private triggerDownload(name: string, uri: string, extension: string) {\r\n    let nameAndExtension = name + \".\" + extension;\r\n    let element = document.createElement('a');\r\n    element.setAttribute('href', uri);\r\n    element.setAttribute('download', nameAndExtension);\r\n    element.style.display = 'none';\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    document.body.removeChild(element);\r\n  }\r\n\r\n\r\n}\r\n","\r\n<svg:polyline [attr.points]=\"node.getSVGPoints()\"\r\n              [ngStyle]=\"node.styleObject\"\r\n>\r\n</svg:polyline>\r\n\r\n<svg:polyline *ngIf=\" node?.hasDoubleBorder\"\r\n              [attr.points]=\"node.getBorderSVGPoints()\"\r\n              style=\"fill:none;stroke:black;stroke-width:2;fill-opacity:0.0;stroke-opacity:0.9\"\r\n>\r\n</svg:polyline>\r\n\r\n<svg:g basic-node-text [node]=\"node\"></svg:g>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {DiamondNode} from \"../../../model/node/diamond-node\";\r\nimport {EditService} from \"../../services/edit.service\";\r\n\r\n@Component({\r\n  selector: '[diamond-node-render]',\r\n  templateUrl: './diamond-node-render.component.html',\r\n  styleUrls: ['./diamond-node-render.component.scss']\r\n})\r\nexport class DiamondNodeRenderComponent {\r\n  @Input() node!: DiamondNode;\r\n\r\n}\r\n","<svg:rect *ngIf=\"visible\"\r\n          [attr.x]=\"startX\"\r\n          [attr.y]=\"startY\"\r\n          [attr.width]=\"endX - startX\"\r\n          [attr.height]=\"endY - startY\"\r\n          style=\"fill: red; fill-opacity: 0.1; stroke: darkred; stroke-opacity: 0.5\"/>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {DragSelectionService} from \"../services/drag-selection.service\";\r\n\r\n@Component({\r\n  selector: '[drag-select-preview]',\r\n  templateUrl: './drag-select-preview.component.html',\r\n  styleUrls: ['./drag-select-preview.component.scss']\r\n})\r\nexport class DragSelectPreviewComponent {\r\n  // Note that startX <= endX and startY <= endY\r\n  startX: number = 10;\r\n  startY: number = 10;\r\n  endX: number = 110;\r\n  endY: number = 300;\r\n\r\n  visible: boolean = false;\r\n\r\n  constructor(dragSelectionService: DragSelectionService) {\r\n    dragSelectionService.startEndChangeEmitter.subscribe((coordinates: number[]) => {\r\n      if (coordinates.length !== 4) {\r\n        this.visible = false;\r\n      } else {\r\n        this.visible = true;\r\n        this.startX = coordinates[0];\r\n        this.startY = coordinates[1];\r\n        this.endX = coordinates[2];\r\n        this.endY = coordinates[3];\r\n\r\n        // Swap to enforce startX <= endX and startY <= endY\r\n        if (this.startX > this.endX) {\r\n          this.endX = coordinates[0]\r\n          this.startX = coordinates[2]\r\n        }\r\n        if (this.startY > this.endY) {\r\n          this.endY = coordinates[1]\r\n          this.startY = coordinates[3]\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {AppComponent} from \"./app.component\";\r\nimport {DiagramComponent} from \"./diagram/diagram.component\";\r\nconst routes: Routes = [\r\n  { path: '', component: DiagramComponent },\r\n  {path: 'diagram/:id', component: DiagramComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-png-icon',\r\n  templateUrl: './png-icon.component.html',\r\n  styleUrls: ['./png-icon.component.scss']\r\n})\r\nexport class PngIconComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n     viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\">\r\n<path style=\"fill:#E2E5E7;\" d=\"M128,0c-17.6,0-32,14.4-32,32v448c0,17.6,14.4,32,32,32h320c17.6,0,32-14.4,32-32V128L352,0H128z\"/>\r\n  <path style=\"fill:#B0B7BD;\" d=\"M384,128h96L352,0v96C352,113.6,366.4,128,384,128z\"/>\r\n  <polygon style=\"fill:#CAD1D8;\" points=\"480,224 384,128 480,128 \"/>\r\n  <path style=\"fill:#A066AA;\" d=\"M416,416c0,8.8-7.2,16-16,16H48c-8.8,0-16-7.2-16-16V256c0-8.8,7.2-16,16-16h352c8.8,0,16,7.2,16,16\r\n\tV416z\"/>\r\n  <g>\r\n\t<path style=\"fill:#FFFFFF;\" d=\"M92.816,303.152c0-4.224,3.312-8.848,8.688-8.848h29.568c16.624,0,31.6,11.136,31.6,32.496\r\n\t\tc0,20.224-14.976,31.472-31.6,31.472H109.68v16.896c0,5.648-3.552,8.832-8.176,8.832c-4.224,0-8.688-3.184-8.688-8.832\r\n\t\tC92.816,375.168,92.816,303.152,92.816,303.152z M109.68,310.432v31.856h21.376c8.56,0,15.344-7.552,15.344-15.488\r\n\t\tc0-8.96-6.784-16.368-15.344-16.368L109.68,310.432L109.68,310.432z\"/>\r\n    <path style=\"fill:#FFFFFF;\" d=\"M178.976,304.432c0-4.624,1.024-9.088,7.68-9.088c4.592,0,5.632,1.152,9.072,4.464l42.336,52.976\r\n\t\tv-49.632c0-4.224,3.696-8.848,8.064-8.848c4.608,0,9.072,4.624,9.072,8.848v72.016c0,5.648-3.456,7.792-6.784,8.832\r\n\t\tc-4.464,0-6.656-1.024-10.352-4.464l-42.336-53.744v49.392c0,5.648-3.456,8.832-8.064,8.832s-8.704-3.184-8.704-8.832v-70.752\r\n\t\tH178.976z\"/>\r\n    <path style=\"fill:#FFFFFF;\" d=\"M351.44,374.16c-9.088,7.536-20.224,10.752-31.472,10.752c-26.88,0-45.936-15.36-45.936-45.808\r\n\t\tc0-25.84,20.096-45.92,47.072-45.92c10.112,0,21.232,3.456,29.168,11.264c7.808,7.664-3.456,19.056-11.12,12.288\r\n\t\tc-4.736-4.624-11.392-8.064-18.048-8.064c-15.472,0-30.432,12.4-30.432,30.432c0,18.944,12.528,30.448,29.296,30.448\r\n\t\tc7.792,0,14.448-2.304,19.184-5.76V348.08h-19.184c-11.392,0-10.24-15.632,0-15.632h25.584c4.736,0,9.072,3.6,9.072,7.568v27.248\r\n\t\tC354.624,369.552,353.616,371.712,351.44,374.16z\"/>\r\n</g>\r\n  <path style=\"fill:#CAD1D8;\" d=\"M400,432H96v16h304c8.8,0,16-7.2,16-16v-16C416,424.8,408.8,432,400,432z\"/>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n  <g>\r\n</g>\r\n</svg>\r\n\r\n","<div *ngIf=\"diagram\">\r\n  <a class=\"btn btn-outline-primary\" title=\"Download JSON\" [href]=\"diagram | jsonUri\" download=\"your-diagram.json\">\r\n    Download Serialised JSON\r\n  </a>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Diagram} from \"../../model/diagram\";\r\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\r\n\r\n@Component({\r\n  selector: 'app-diagram-download',\r\n  templateUrl: './diagram-download.component.html',\r\n  styleUrls: ['./diagram-download.component.scss']\r\n})\r\nexport class DiagramDownloadComponent {\r\n  @Input() diagram?: Diagram;\r\n  downloadJsonHref?: SafeUrl;\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  generateDownloadJsonUri() {\r\n    if (this.diagram) {\r\n      let theJSON = JSON.stringify(this.diagram?.serialise());\r\n      let uri = this.sanitizer.bypassSecurityTrustUrl(\"data:text/json;charset=UTF-8,\" + encodeURIComponent(theJSON));\r\n      this.downloadJsonHref = uri;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SnapService} from \"../services/snap.service\";\r\n\r\n@Component({\r\n  selector: 'app-move-menu',\r\n  templateUrl: './move-menu.component.html',\r\n  styleUrls: ['./move-menu.component.scss']\r\n})\r\nexport class MoveMenuComponent implements OnInit {\r\n\r\n  constructor(private snapService: SnapService) { }\r\n\r\n  public activate() {\r\n    this.snapService.setSnapState(!this.snapService.isActive())\r\n  }\r\n\r\n  public getSnapIsActive(): boolean {\r\n    return this.snapService.isActive()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"form-check\" >\r\n  <input type=\"checkbox\" class=\"form-check-input\" (change)=\"activate()\" [ngModel]=\"getSnapIsActive()\">\r\n  <label class=\"form-check-label\" >Snappy</label>\r\n</div>\r\n\r\n<div class=\"form-check\">\r\n  <input type=\"checkbox\" class=\"form-check-input\" >\r\n  <label class=\"form-check-label\">Show Attachment Points</label>\r\n</div>\r\n\r\n<div class=\"form-check\">\r\n  <input type=\"checkbox\" class=\"form-check-input\" >\r\n  <label class=\"form-check-label\">Show Middle Points</label>\r\n</div>\r\n\r\n<div class=\"form-check\">\r\n  <input type=\"checkbox\" class=\"form-check-input\" >\r\n  <label class=\"form-check-label\">Grid</label>\r\n</div>\r\n","import {Node} from \"./node\";\r\nimport {Position} from \"../position\";\r\n\r\nexport abstract class PolylineNode extends Node {\r\n  protected constructor(width: number, height: number, position: Position) {\r\n    super(width, height, position);\r\n  }\r\n\r\n  public abstract getSVGPoints(): string;\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}