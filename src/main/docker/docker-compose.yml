version: '3'
services:
  app:
    image: 'docker-spring-boot-postgres:latest'
    restart: unless-stopped
    build:
      context: .
    volumes:
    - "./utml-0.0.1-SNAPSHOT.jar:/utml-0.0.1-SNAPSHOT.jar"
    container_name: utml_dev
    expose:
      - 8080
    ports:
        - 8080:8080
    env_file:
      - .env.dev.docker
    depends_on:
      - db
  nginx:
    image: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    links:
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - app
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  db:
    image: "postgres"
    container_name: db
    ports:
      - 5432:5432
    env_file:
      - .env.dev.docker


